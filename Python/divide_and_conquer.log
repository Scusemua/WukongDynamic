
C:\Users\benrc\source\repos\DaskServerless\DaskServerless\DaskServerless\DivideAndConquer\Python>python driver.py
[2021-07-30 15:20:19,630] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:20:19,630] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:20:19,630] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:20:19,630] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:20:19,630] DEBUG: n: 4
ProblemType memoize
[2021-07-30 15:20:19,630] DEBUG: memoize is: True
[2021-07-30 15:20:19,630] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:20:19,631] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:20:19,632] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,632] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
ProblemType memoize
[2021-07-30 15:20:19,632] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:20:19,632] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:20:19,632] DEBUG: channelMap keySet: .
ProblemType memoize
[2021-07-30 15:20:19,633] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,633] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:20:19,633] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:20:19,633] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:20:19,634] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:20:19,634] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:20:19,634] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:20:19,634] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,634] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:20:19,635] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:20:19,635] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:20:19,635] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:20:19,635] DEBUG: [0,1] Calling problem.Fanout()
len(subProblems): 2
[2021-07-30 15:20:19,635] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:20:19,635] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:20:19,636] DEBUG: [0,1]: Fanout: parent stack (len = 0):
[2021-07-30 15:20:19,636] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4)
ProblemType memoize
[2021-07-30 15:20:19,637] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,637] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:20:19,638] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,638] DEBUG:        MemoizationController: [0,1]
[2021-07-30 15:20:19,638] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,639] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,639] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:20:19,640] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,640] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:20:19,640] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:20:19,640] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,646] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,646] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,648] DEBUG:        MemoizationController: [0,1]
[2021-07-30 15:20:19,648] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,649] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,649] DEBUG: channelMap keySet: . .
[2021-07-30 15:20:19,649] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,650] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:20:19,650] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,651] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,651] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:20:19,651] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:20:19,652] DEBUG:        Memoization Controller: [0,1][0,2]
[2021-07-30 15:20:19,652] DEBUG:        Memoization Controller: [0,1][1,2]
[2021-07-30 15:20:19,652] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:20:19,653] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,653] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,653] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:20:19,653] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
ProblemType memoize
[2021-07-30 15:20:19,654] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:20:19,654] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:20:19,655] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:20:19,655] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:20:19,656] DEBUG: channelMap keySet: . . .
[2021-07-30 15:20:19,656] DEBUG: MemoizationThread: promise by: [0,1][0,2]
ProblemType memoize
[2021-07-30 15:20:19,657] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,660] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,657] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:20:19,661] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:20:19,661] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:20:19,661] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:20:19,661] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:20:19,662] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:20:19,662] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:20:19,663] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
ProblemType memoize
[2021-07-30 15:20:19,663] DEBUG: MemoizationThread: promise by: [0,1][1,2]
ProblemType memoize
[2021-07-30 15:20:19,664] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,664] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:20:19,664] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:20:19,665] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:20:19,665] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:20:19,666] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:20:19,666] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:20:19,667] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4)
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,667] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:20:19,669] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4)
[2021-07-30 15:20:19,669] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:20:19,670] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:20:19,671] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
len(subProblems): 2
[2021-07-30 15:20:19,672] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:20:19,672] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:20:19,672] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
len(subProblems): 2
[2021-07-30 15:20:19,676] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:20:19,676] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4)
[2021-07-30 15:20:19,677] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
ProblemType memoize
[2021-07-30 15:20:19,677] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,678] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,678] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:20:19,679] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4)
[2021-07-30 15:20:19,679] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,679] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,679] DEBUG:        MemoizationController: [0,1][0,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,680] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,681] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,681] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,681] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:20:19,681] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,682] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:20:19,682] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:20:19,682] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,682] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,683] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:20:19,683] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:20:19,684] DEBUG:        MemoizationController: [0,1][0,2]
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,685] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:20:19,685] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,686] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,686] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:20:19,686] DEBUG:        MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:20:19,687] DEBUG: channelMap keySet: . . . .
[2021-07-30 15:20:19,687] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,687] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,688] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,688] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:20:19,689] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:20:19,689] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,692] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:20:19,693] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:20:19,691] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:20:19,693] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
ProblemType memoize
[2021-07-30 15:20:19,694] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,693] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
ProblemType memoize
[2021-07-30 15:20:19,695] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,695] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:20:19,696] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,696] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:20:19,696] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,697] DEBUG:        MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:20:19,697] DEBUG:        MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:20:19,698] DEBUG: channelMap keySet: . . . . .
[2021-07-30 15:20:19,698] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,698] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:20:19,699] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:20:19,699] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,699] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:20:19,700] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:20:19,700] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:20:19,701] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,701] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:20:19,701] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,702] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:20:19,702] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:20:19,702] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:20:19,702] DEBUG: MemoizationController: pairing names after add
ProblemType memoize
[2021-07-30 15:20:19,703] DEBUG:        MemoizationController: [0,1][0,2]
ProblemType memoize
[2021-07-30 15:20:19,704] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,704] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:20:19,705] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,705] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:20:19,709] DEBUG:        MemoizationController: [0,1][0,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,710] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:20:19,710] DEBUG:        MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:20:19,711] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,711] DEBUG:        MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:20:19,711] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,712] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,712] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:20:19,712] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][1,2]
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:20:19,714] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,714] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,714] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:20:19,715] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,715] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,715] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:20:19,715] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:20:19,716] DEBUG: >> msg.memoization_label: 1
ProblemType memoize
[2021-07-30 15:20:19,716] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:20:19,717] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:20:19,717] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:20:19,718] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,718] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:20:19,718] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:20:19,718] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:20:19,718] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:20:19,719] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:20:19,719] DEBUG: channelMap keySet: . . . . . .
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,720] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:20:19,723] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
ProblemType memoize
[2021-07-30 15:20:19,723] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,724] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:20:19,724] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:20:19,724] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
[2021-07-30 15:20:19,724] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,725] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:20:19,725] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,726] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:20:19,726] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:20:19,726] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:20:19,726] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,728] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:20:19,728] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,728] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,728] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,728] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
[2021-07-30 15:20:19,729] DEBUG:        Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:20:19,730] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 15:20:19,730] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,730] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,730] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:20:19,731] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,731] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:20:19,732] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:20:19,732] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,732] DEBUG:
[2021-07-30 15:20:19,732] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,733] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:20:19,733] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,733] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:20:19,734] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:20:19,735] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
ProblemType memoize
[2021-07-30 15:20:19,738] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,739] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:20:19,739] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,740] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:20:19,741] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,741] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,742] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,742] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,742] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:20:19,742] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:20:19,743] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:20:19,743] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:20:19,744] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000014D17281E50>]>
[2021-07-30 15:20:19,744] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:20:19,745] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,745] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results:
[2021-07-30 15:20:19,745] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,746] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:20:19,746] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:20:19,747] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:20:19,747] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,747] DEBUG: Deliver end promised Results:
[2021-07-30 15:20:19,747] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:20:19,747] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
ProblemType memoize
[2021-07-30 15:20:19,748] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,748] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:20:19,748] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 15:20:19,749] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,749] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:20:19,750] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:20:19,750] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:20:19,753] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,754] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,755] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,755] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:20:19,756] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,756] DEBUG:
[2021-07-30 15:20:19,756] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,756] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,757] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,757] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:20:19,757] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,757] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,758] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,759] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:20:19,759] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,759] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
ProblemType memoize
[2021-07-30 15:20:19,760] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:20:19,760] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:20:19,760] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:20:19,761] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:20:19,761] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:20:19,761] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,762] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,762] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:20:19,762] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,763] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,763] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:20:19,764] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,764] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,764] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
ProblemType memoize
[2021-07-30 15:20:19,765] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:20:19,765] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,765] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:20:19,770] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,770] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,770] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:20:19,771] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:20:19,771] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,771] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:20:19,772] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:20:19,772] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:20:19,772] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,772] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
ProblemType memoize
[2021-07-30 15:20:19,773] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
ProblemType memoize
[2021-07-30 15:20:19,774] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,774] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
[2021-07-30 15:20:19,774] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:20:19,775] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,775] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
[2021-07-30 15:20:19,777] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 15:20:19,777] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:20:19,778] DEBUG:
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:20:19,779] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:20:19,779] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,779] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,780] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:20:19,780] DEBUG:
[2021-07-30 15:20:19,781] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,781] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,781] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,781] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,785] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:20:19,786] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,786] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,786] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:20:19,787] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,787] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:20:19,787] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
ProblemType memoize
[2021-07-30 15:20:19,788] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,788] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,789] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:20:19,789] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
ProblemType memoize
[2021-07-30 15:20:19,789] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,790] DEBUG: >> [0,1]: returning memoization label: "4"
ProblemType memoize
[2021-07-30 15:20:19,791] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:20:19,791] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,791] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:20:19,791] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,792] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,793] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,793] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
ProblemType memoize
[2021-07-30 15:20:19,794] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:20:19,794] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000014D17279BE0>]>
[2021-07-30 15:20:19,795] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,795] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results:
[2021-07-30 15:20:19,795] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:20:19,796] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:20:19,796] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:20:19,797] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,797] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,797] DEBUG: Deliver end promised Results:
[2021-07-30 15:20:19,797] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:20:19,797] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:20:19,798] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,801] DEBUG:
ProblemType memoize
[2021-07-30 15:20:19,803] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,803] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:20:19,803] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:20:19,804] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,804] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:20:19,804] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,804] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,805] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,806] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,806] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,806] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:20:19,806] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:20:19,806] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,807] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,807] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,808] DEBUG: Disabling memoization thread now...
ProblemType memoize
[2021-07-30 15:20:19,808] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:20:19,809] DEBUG: MemoizationThread disabled.
[2021-07-30 15:20:19,809] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:20:19,809] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,809] DEBUG:
[2021-07-30 15:20:19,810] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
ProblemType memoize
[2021-07-30 15:20:19,811] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:20:19,811] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:20:19,811] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:20:19,811] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,812] DEBUG:
[2021-07-30 15:20:19,812] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,812] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,816] DEBUG: [0,1][1,2][0,2]: Verifying .......
[2021-07-30 15:20:19,817] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
ProblemType memoize
[2021-07-30 15:20:19,817] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,818] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:20:19,818] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:20:19,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:20:19,819] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:20:19,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,820] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,821] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 15:20:19,821] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:20:19,821] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,822] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:20:19,822] DEBUG:
[2021-07-30 15:20:19,823] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,823] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:20:19,823] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,824] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,824] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:20:19,824] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,825] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:20:19,825] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,826] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,826] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,827] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:21,823] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:20:21,823] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:20:21,824] DEBUG:        [1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:20:21,824] DEBUG:
[2021-07-30 15:20:21,825] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:20:21,825] DEBUG:        3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:20:21,825] DEBUG:        4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:21,826] DEBUG:        2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)[2021-07-30 15:34:39,805] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:34:39,805] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:34:39,806] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:34:39,806] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:34:39,806] DEBUG: n: 4
[2021-07-30 15:34:39,806] DEBUG: memoize is: True
[2021-07-30 15:34:39,806] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:34:39,807] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:34:39,807] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:34:39,807] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:34:39,807] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:34:39,808] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,808] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:34:39,808] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:34:39,808] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:34:39,808] DEBUG: channelMap keySet: . 
[2021-07-30 15:34:39,809] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:34:39,809] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:34:39,809] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:34:39,809] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:34:39,809] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:34:39,809] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:34:39,809] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:34:39,809] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,809] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:34:39,810] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:34:39,810] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:34:39,810] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:34:39,810] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:34:39,810] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:34:39,811] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:34:39,811] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:34:39,811] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:34:39,812] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:34:39,812] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,813] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,813] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:34:39,814] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,814] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:34:39,814] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,815] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,815] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:34:39,820] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,820] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:34:39,821] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:34:39,821] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:34:39,823] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:34:39,822] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,823] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:34:39,823] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:34:39,824] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,824] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:34:39,825] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,825] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,826] DEBUG: channelMap keySet: . . 
[2021-07-30 15:34:39,827] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:34:39,827] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:34:39,828] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:34:39,828] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,829] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:34:39,829] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:34:39,830] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:34:39,830] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:34:39,831] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,831] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,833] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:34:39,834] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:34:39,835] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:34:39,836] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:34:39,836] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:34:39,837] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:34:39,837] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,837] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:34:39,837] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:34:39,838] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:34:39,838] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:34:39,838] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:34:39,839] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:34:39,840] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:34:39,840] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:34:39,840] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:34:39,841] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:34:39,841] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:34:39,841] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:34:39,842] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:34:39,843] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:34:39,843] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:34:39,843] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:34:39,843] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:34:39,844] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:34:39,844] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:34:39,844] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,844] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:34:39,846] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:34:39,846] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:34:39,850] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:34:39,850] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:34:39,852] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:34:39,852] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,853] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:34:39,853] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:39,854] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:34:39,855] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,854] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:34:39,855] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:34:39,855] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:34:39,856] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,856] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:34:39,857] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,857] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:34:39,857] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,857] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:34:39,858] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,858] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:34:39,859] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,859] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:34:39,860] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:34:39,861] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,861] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:34:39,861] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:34:39,861] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:34:39,861] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,863] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:34:39,863] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:34:39,868] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:34:39,868] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:34:39,868] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,869] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:34:39,869] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:34:39,870] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,871] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:34:39,871] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,872] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:34:39,872] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,872] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,873] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,873] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:34:39,873] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:34:39,873] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,874] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:34:39,875] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:34:39,875] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,875] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:34:39,875] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:34:39,875] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,877] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,877] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:34:39,878] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,878] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:34:39,878] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:34:39,879] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,882] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,882] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:34:39,883] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,883] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:34:39,883] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:34:39,884] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:34:39,884] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:34:39,885] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:34:39,885] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:34:39,886] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,886] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:34:39,886] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,886] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:34:39,887] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:34:39,887] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:34:39,888] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,888] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,889] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:34:39,890] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,890] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:34:39,891] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:34:39,891] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:34:39,891] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,892] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:34:39,893] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,893] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:34:39,893] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,894] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:34:39,894] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,894] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,895] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:34:39,898] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:34:39,898] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:34:39,899] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:34:39,899] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:34:39,899] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:34:39,900] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,900] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,900] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:34:39,901] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:34:39,901] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:34:39,902] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:34:39,902] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:34:39,902] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:34:39,903] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:34:39,902] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,902] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
2] ack was None result.
[2021-07-30 15:34:39,903] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:34:39,904] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:34:39,904] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:34:39,905] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:34:39,906] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:34:39,906] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:34:39,907] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:34:39,907] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:34:39,907] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:34:39,908] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,908] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:34:39,909] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,910] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:34:39,909] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:34:39,913] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,913] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:34:39,914] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:34:39,915] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,914] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:34:39,915] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:34:39,916] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:34:39,916] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:39,917] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:34:39,917] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:34:39,918] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:34:39,919] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,919] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,919] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:34:39,920] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:34:39,922] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:34:39,923] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,923] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:34:39,924] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:34:39,924] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:34:39,925] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:34:39,925] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:34:39,929] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:34:39,929] DEBUG: >> Memoization Thread awaiting message...
[1,2] got ack.
[2021-07-30 15:34:39,930] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:34:39,931] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:34:39,931] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001546054AB80>]>
[2021-07-30 15:34:39,930] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:34:39,931] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:34:39,932] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:34:39,933] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,933] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:34:39,933] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:34:39,933] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:34:39,934] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:34:39,934] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:34:39,935] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,935] DEBUG: Deliver end promised Results: 
[2021-07-30 15:34:39,935] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:34:39,936] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,937] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:34:39,937] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:34:39,938] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:34:39,939] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:34:39,940] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,944] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:34:39,944] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:34:39,947] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:34:39,947] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,947] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:34:39,948] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:34:39,949] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:34:39,949] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:34:39,951] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:34:39,951] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:34:39,952] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:34:39,952] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,952] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:34:39,953] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:34:39,954] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:34:39,955] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:34:39,955] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:34:39,957] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:34:39,959] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,960] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:34:39,960] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:34:39,961] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:41,972] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:44,001] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:46,017] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,735] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:35:11,736] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:35:11,736] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:35:11,736] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:35:11,736] DEBUG: n: 4
[2021-07-30 15:35:11,736] DEBUG: memoize is: True
[2021-07-30 15:35:11,736] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:35:11,737] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:35:11,737] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,738] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:35:11,738] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:35:11,738] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:35:11,738] DEBUG: channelMap keySet: . 
[2021-07-30 15:35:11,739] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,739] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:35:11,739] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:35:11,739] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:35:11,739] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:35:11,739] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:35:11,739] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:35:11,740] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:35:11,740] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:35:11,740] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:35:11,740] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:35:11,741] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:35:11,741] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:35:11,741] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:35:11,742] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:35:11,742] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,743] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,743] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:35:11,743] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,744] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,744] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:35:11,744] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,744] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:35:11,745] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,746] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:35:11,746] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:35:11,746] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:35:11,747] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:35:11,748] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,748] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:35:11,748] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:35:11,749] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,749] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,750] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,753] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:35:11,754] DEBUG: channelMap keySet: . . 
[2021-07-30 15:35:11,755] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,755] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,755] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:35:11,756] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:35:11,756] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,756] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:35:11,757] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:35:11,757] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:35:11,758] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:35:11,758] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,758] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,759] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:35:11,759] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:35:11,760] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:35:11,760] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:35:11,761] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:35:11,761] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:35:11,761] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:35:11,762] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:35:11,762] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,762] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:35:11,763] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,764] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:35:11,764] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:35:11,764] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:35:11,765] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:35:11,765] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:35:11,766] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:35:11,769] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:35:11,770] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:35:11,770] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:35:11,770] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:35:11,772] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:35:11,772] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,772] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:35:11,772] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:35:11,773] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:35:11,773] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:35:11,774] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:35:11,774] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:35:11,775] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:35:11,775] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:35:11,776] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:35:11,776] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:35:11,777] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:35:11,777] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:35:11,778] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:35:11,778] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:35:11,778] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:35:11,778] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,779] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,779] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:35:11,780] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:35:11,780] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,781] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:35:11,781] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:35:11,782] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,785] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:35:11,786] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,786] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:35:11,787] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,787] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,787] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,788] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,788] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,788] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:35:11,790] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,790] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:35:11,791] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,791] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:35:11,791] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,791] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:35:11,791] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:35:11,792] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,793] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:35:11,793] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,794] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,794] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:35:11,795] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,795] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,796] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:35:11,796] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:35:11,796] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,797] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:35:11,800] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:35:11,796] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:35:11,800] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:35:11,801] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,801] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:35:11,802] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,803] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:35:11,803] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,804] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:35:11,804] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,804] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,805] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:35:11,805] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:35:11,806] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,806] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:35:11,806] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:35:11,807] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,807] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:35:11,808] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:35:11,808] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:35:11,809] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,809] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:35:11,810] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,809] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:35:11,810] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:35:11,810] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:35:11,811] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,812] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:35:11,812] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,815] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:35:11,815] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,816] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:35:11,816] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,817] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,817] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,818] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:35:11,818] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:35:11,819] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:35:11,819] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,820] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,820] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:35:11,820] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:35:11,821] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,822] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,822] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,822] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:35:11,823] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,823] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,823] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:35:11,823] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:35:11,824] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:35:11,824] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:35:11,825] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:35:11,825] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:35:11,826] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,826] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:35:11,826] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:35:11,827] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:35:11,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:35:11,828] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:35:11,828] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:35:11,831] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,832] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:35:11,833] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,834] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,834] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:35:11,833] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:35:11,835] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:35:11,834] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,836] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:35:11,836] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,836] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:35:11,837] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:35:11,838] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,838] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,838] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:35:11,838] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,838] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,839] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 15:35:11,840] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:35:11,840] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:35:11,840] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,841] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,841] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,842] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,842] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:35:11,843] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:35:11,843] DEBUG: 
[2021-07-30 15:35:11,843] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,843] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,843] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,847] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,847] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:35:11,848] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:35:11,848] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,848] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:35:11,849] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
,2]"...
[2021-07-30 15:35:11,851] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:35:11,851] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:35:11,851] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,852] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:35:11,852] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:35:11,852] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,853] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:35:11,852] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:35:11,853] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:35:11,854] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001F9BBB20FA0>]>
[2021-07-30 15:35:11,855] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,854] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:35:11,856] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,855] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:35:11,856] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:35:11,856] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:35:11,857] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:35:11,857] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,857] DEBUG: Deliver end promised Results: 
[2021-07-30 15:35:11,857] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,858] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:35:11,858] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,859] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 15:35:11,863] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,863] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:35:11,864] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:35:11,864] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,864] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:35:11,865] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,865] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,866] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:35:11,866] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:35:11,866] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,867] DEBUG: 
[2021-07-30 15:35:11,868] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,868] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,868] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:35:11,868] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,868] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,869] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,870] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,871] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:35:11,871] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:35:11,872] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:35:11,872] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:35:11,873] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,873] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:35:11,873] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:35:11,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:35:11,874] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:35:11,875] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,879] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,879] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,880] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:35:11,880] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,881] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:35:11,881] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,881] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,882] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:35:11,882] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:35:11,882] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,882] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:35:11,883] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:35:11,883] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,884] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,885] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,887] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 15:35:11,887] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:35:11,887] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,888] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,888] DEBUG: 
[2021-07-30 15:35:11,888] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,889] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:35:11,891] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,893] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 15:35:11,894] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,894] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,894] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,895] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,895] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:35:11,895] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001F9BBB274C0>]>
[2021-07-30 15:35:11,896] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,896] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:35:11,896] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 15:35:11,897] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:35:11,897] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:35:11,898] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,898] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,899] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:35:11,898] DEBUG: Deliver end promised Results: 
[2021-07-30 15:35:11,899] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,899] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,900] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:35:11,900] DEBUG: 
[2021-07-30 15:35:11,901] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:35:11,901] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:35:11,901] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,902] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,902] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,904] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:35:11,905] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:35:11,905] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 15:35:11,905] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:35:11,905] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,906] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:35:11,910] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,909] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,911] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,911] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,912] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,912] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:35:11,913] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:35:11,913] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,913] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:35:11,914] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:35:11,914] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "4">
[2021-07-30 15:35:11,915] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,915] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,916] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 4 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,916] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,917] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,917] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,918] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,918] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:35:11,919] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:35:11,919] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,919] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,919] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,920] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,920] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 15:35:11,921] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:35:11,921] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-07-30 15:35:11,925] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,925] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,926] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:35:11,927] DEBUG: 
[2021-07-30 15:35:11,927] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,928] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,929] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,929] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,930] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:35:11,931] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,932] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:35:11,932] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,932] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,933] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,934] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,934] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-07-30 15:35:11,934] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,935] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,935] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 15:35:11,935] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,936] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:35:11,936] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,936] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,937] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,940] DEBUG: 
[2021-07-30 15:35:11,941] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:35:11,941] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,942] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,942] DEBUG: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,943] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:35:11,943] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,944] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:35:11,944] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:35:11,945] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,945] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:35:11,946] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,947] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-07-30 15:35:11,947] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1], memoization_label: None, result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0), promised_results = []>
[2021-07-30 15:35:11,948] ERROR: Internal Error: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2) delivered twice.
[2021-07-30 18:17:27,165] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 18:17:27,165] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 18:17:27,165] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 18:17:27,165] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 18:17:27,165] DEBUG: n: 4
[2021-07-30 18:17:27,166] DEBUG: memoize is: True
[2021-07-30 18:17:27,166] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 18:17:27,167] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 18:17:27,167] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 18:17:27,167] DEBUG: >> Memoization Thread has started running...
[2021-07-30 18:17:27,167] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 18:17:27,167] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,167] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 18:17:27,167] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 18:17:27,168] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 18:17:27,168] DEBUG: channelMap keySet: . 
[2021-07-30 18:17:27,169] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:17:27,169] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 18:17:27,169] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 18:17:27,169] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 18:17:27,169] DEBUG: >> msg.memoization_label: 4
[2021-07-30 18:17:27,169] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 18:17:27,169] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 18:17:27,170] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,170] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 18:17:27,170] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 18:17:27,170] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 18:17:27,170] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 18:17:27,170] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 18:17:27,170] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 18:17:27,170] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 18:17:27,170] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 18:17:27,170] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 18:17:27,171] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 18:17:27,171] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 18:17:27,171] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 18:17:27,171] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 18:17:27,172] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 18:17:27,172] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:17:27,173] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,173] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 18:17:27,173] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,174] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 18:17:27,174] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,174] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,175] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 18:17:27,175] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,175] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 18:17:27,176] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 18:17:27,176] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 18:17:27,177] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 18:17:27,177] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,178] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 18:17:27,178] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 18:17:27,178] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,179] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:17:27,179] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 18:17:27,180] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,180] DEBUG: channelMap keySet: . . 
[2021-07-30 18:17:27,180] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,181] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 18:17:27,181] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:17:27,182] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,182] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 18:17:27,182] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 18:17:27,182] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 18:17:27,183] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 18:17:27,183] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 18:17:27,184] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,184] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,184] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 18:17:27,184] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 18:17:27,185] DEBUG: >> msg.memoization_label: 2
[2021-07-30 18:17:27,186] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 18:17:27,186] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 18:17:27,186] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 18:17:27,187] DEBUG: channelMap keySet: . . . 
[2021-07-30 18:17:27,187] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 18:17:27,187] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,187] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 18:17:27,191] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:17:27,193] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 18:17:27,193] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 18:17:27,193] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 18:17:27,193] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 18:17:27,193] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 18:17:27,194] DEBUG: >> msg.memoization_label: 3
[2021-07-30 18:17:27,195] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 18:17:27,195] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 18:17:27,196] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 18:17:27,196] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 18:17:27,196] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 18:17:27,197] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,197] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 18:17:27,197] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 18:17:27,198] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 18:17:27,198] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 18:17:27,198] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 18:17:27,199] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 18:17:27,199] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 18:17:27,200] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 18:17:27,200] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 18:17:27,201] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 18:17:27,202] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 18:17:27,202] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 18:17:27,203] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 18:17:27,203] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 18:17:27,206] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:17:27,206] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 18:17:27,207] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:17:27,207] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 18:17:27,208] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 18:17:27,208] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,209] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 18:17:27,209] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 18:17:27,209] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 18:17:27,209] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,210] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 18:17:27,210] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:17:27,211] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,211] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:17:27,212] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:17:27,212] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:17:27,212] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,212] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 18:17:27,213] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,214] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 18:17:27,214] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 18:17:27,214] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,214] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,215] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 18:17:27,215] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:17:27,215] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 18:17:27,216] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:17:27,217] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 18:17:27,217] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,218] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:17:27,218] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 18:17:27,218] DEBUG: channelMap keySet: . . . . 
[2021-07-30 18:17:27,219] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,219] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 18:17:27,223] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,223] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 18:17:27,223] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 18:17:27,224] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 18:17:27,224] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,225] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 18:17:27,225] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 18:17:27,224] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,225] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 18:17:27,226] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 18:17:27,225] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 18:17:27,227] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:17:27,227] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 18:17:27,228] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:17:27,228] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 18:17:27,228] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,229] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:17:27,229] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 18:17:27,230] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,230] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 18:17:27,230] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 18:17:27,231] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:17:27,231] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 18:17:27,231] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 18:17:27,232] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 18:17:27,232] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,232] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 18:17:27,233] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,233] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 18:17:27,234] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 18:17:27,234] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 18:17:27,234] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:17:27,238] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 18:17:27,239] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 18:17:27,239] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:17:27,239] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 18:17:27,240] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:17:27,241] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 18:17:27,241] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:17:27,241] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:17:27,241] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 18:17:27,242] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:17:27,242] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,243] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,243] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 18:17:27,243] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,244] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:17:27,244] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 18:17:27,244] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 18:17:27,245] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:17:27,245] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 18:17:27,245] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 18:17:27,246] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,246] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,246] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 18:17:27,246] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 18:17:27,247] DEBUG: >> msg.memoization_label: 1
[2021-07-30 18:17:27,247] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 18:17:27,248] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 18:17:27,248] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 18:17:27,249] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 18:17:27,249] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 18:17:27,249] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,250] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 18:17:27,249] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 18:17:27,250] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 18:17:27,251] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 18:17:27,255] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:17:27,254] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 18:17:27,255] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:17:27,256] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 18:17:27,256] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:17:27,256] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 18:17:27,257] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,257] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 18:17:27,258] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 18:17:27,258] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 18:17:27,258] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,259] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 18:17:27,259] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 18:17:27,260] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:17:27,259] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,261] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 18:17:27,260] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 18:17:27,261] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:17:27,262] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:17:27,262] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 18:17:27,262] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 18:17:27,262] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 18:17:27,263] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:17:27,263] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 18:17:27,264] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 18:17:27,264] DEBUG: 
[2021-07-30 18:17:27,264] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 18:17:27,265] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 18:17:27,265] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,265] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:17:27,266] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:17:27,265] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,266] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 18:17:27,266] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 18:17:27,271] DEBUG: >> msg.memoization_label: 1
[2021-07-30 18:17:27,272] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:17:27,272] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 18:17:27,273] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 18:17:27,273] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 18:17:27,274] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:17:27,274] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 18:17:27,274] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,275] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 18:17:27,275] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 18:17:27,275] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 18:17:27,276] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 18:17:27,276] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001495E922430>]>
[2021-07-30 18:17:27,277] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:17:27,276] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 18:17:27,277] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 18:17:27,277] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 18:17:27,278] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 18:17:27,278] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 18:17:27,279] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 18:17:27,279] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:17:27,279] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,279] DEBUG: Deliver end promised Results: 
[2021-07-30 18:17:27,280] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 18:17:27,280] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 18:17:27,280] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,281] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 18:17:27,281] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,281] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 18:17:27,282] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-07-30 18:17:27,282] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,282] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 18:17:27,286] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:17:27,286] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 18:17:27,287] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 18:17:27,287] DEBUG: 
[2021-07-30 18:17:27,287] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:17:27,288] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 18:17:27,289] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 18:17:27,289] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:17:27,289] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 18:17:27,289] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:17:27,289] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:17:27,291] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,291] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 18:17:27,291] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 18:17:27,292] DEBUG: >> msg.memoization_label: 2
[2021-07-30 18:17:27,292] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 18:17:27,292] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:17:27,293] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 18:17:27,293] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 18:17:27,294] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,294] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 18:17:27,294] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 18:17:27,295] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 18:17:27,295] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 18:17:27,295] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,296] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:17:27,296] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:17:27,297] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 18:17:27,297] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,297] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 18:17:27,298] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:17:27,301] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:17:27,301] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 18:17:27,302] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 18:17:27,302] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 18:17:27,302] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,303] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 18:17:27,303] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,304] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,304] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 18:17:27,305] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 18:17:27,305] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 18:17:27,305] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:17:27,306] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 18:17:27,306] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 18:17:27,306] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 18:17:27,307] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:17:27,307] DEBUG: 
[2021-07-30 18:17:27,307] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 18:17:27,308] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,308] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:17:27,309] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:17:27,309] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 18:17:27,309] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:17:27,309] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 18:17:27,310] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,311] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:17:27,311] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,312] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:17:27,312] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 18:17:27,312] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001495E9185B0>]>
[2021-07-30 18:17:27,313] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,316] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 18:17:27,316] DEBUG: >> Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-07-30 18:17:27,317] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 18:17:27,317] DEBUG: >> Local problem label AFTER chopping: "[0,1][0,2]"
[2021-07-30 18:17:27,317] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 18:17:27,317] WARNING: MemoizationController already initialized.
[2021-07-30 18:17:27,318] DEBUG: Deliver end promised Results: 
[2021-07-30 18:17:27,318] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 18:17:27,318] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 18:17:27,319] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,319] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 18:17:27,320] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 18:17:27,320] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:17:27,321] DEBUG: 
[2021-07-30 18:17:27,321] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 18:17:27,321] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:17:27,321] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 18:17:27,322] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,322] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 18:17:27,322] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,323] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 18:17:27,324] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,324] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 18:17:27,325] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,325] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:17:27,325] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-07-30 18:17:27,326] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,326] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 18:17:27,326] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:17:27,327] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:17:27,327] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 18:17:27,327] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 18:17:27,328] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,328] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 18:17:27,328] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 18:17:27,329] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:17:27,333] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:17:27,334] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 18:17:27,334] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 18:17:27,334] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 18:17:27,335] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:17:27,335] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 18:17:27,335] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 18:17:27,336] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 18:17:27,336] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 18:17:27,336] DEBUG: 
[2021-07-30 18:17:27,337] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 18:17:27,337] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:17:27,337] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:17:27,338] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:17:27,338] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 18:17:27,338] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:17:27,339] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 18:17:27,339] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,340] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:17:27,340] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,341] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:17:27,341] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-07-30 18:17:27,341] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:17:27,342] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,342] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:17:27,342] DEBUG: >> Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-07-30 18:17:27,343] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,343] DEBUG: >> Local problem label AFTER chopping: "[0,1][1,2]"
[2021-07-30 18:17:27,344] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 18:17:27,344] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 18:17:27,344] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 18:17:27,344] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:17:27,345] DEBUG: 
[2021-07-30 18:17:27,348] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 18:17:27,349] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,349] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:17:27,349] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:27,350] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 18:17:27,350] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:17:27,350] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 18:17:27,351] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,351] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:17:27,352] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,352] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:17:27,353] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-07-30 18:17:27,353] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:17:27,353] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:27,354] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:17:27,354] DEBUG: >> Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-07-30 18:17:27,354] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,355] DEBUG: >> Local problem label AFTER chopping: "[0,1]"
[2021-07-30 18:17:27,355] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 18:17:27,356] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:17:27,356] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-07-30 18:17:27,356] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:17:27,357] DEBUG: Disabling memoization thread now...
[2021-07-30 18:17:27,357] DEBUG: MemoizationThread disabled.
[2021-07-30 18:17:27,357] DEBUG: 
[2021-07-30 18:17:27,358] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 1
[2021-07-30 18:17:27,358] DEBUG: 
[2021-07-30 18:17:27,358] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-07-30 18:17:29,373] DEBUG: Error. Expected value: 3, actual value: 1
[2021-07-30 18:17:29,373] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 18:17:29,374] DEBUG: 	[0,1][2,2]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:29,374] DEBUG: 	[0,1][3,2]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:29,375] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:29,375] DEBUG: 
[2021-07-30 18:17:29,375] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 18:17:29,376] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:17:29,376] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:17:29,376] DEBUG: 	4: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,339] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 18:58:13,339] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 18:58:13,339] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 18:58:13,339] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 18:58:13,340] DEBUG: n: 4
[2021-07-30 18:58:13,340] DEBUG: memoize is: True
[2021-07-30 18:58:13,340] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 18:58:13,341] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 18:58:13,341] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 18:58:13,341] DEBUG: >> Memoization Thread has started running...
[2021-07-30 18:58:13,341] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 18:58:13,341] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,341] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 18:58:13,342] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 18:58:13,342] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 18:58:13,342] DEBUG: channelMap keySet: . 
[2021-07-30 18:58:13,342] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:58:13,342] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 18:58:13,343] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 18:58:13,343] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 18:58:13,343] DEBUG: >> msg.memoization_label: 4
[2021-07-30 18:58:13,343] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 18:58:13,343] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 18:58:13,343] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,343] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 18:58:13,343] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 18:58:13,344] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 18:58:13,344] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 18:58:13,344] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 18:58:13,344] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 18:58:13,344] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 18:58:13,344] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 18:58:13,344] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 18:58:13,344] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 18:58:13,345] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 18:58:13,345] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 18:58:13,345] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 18:58:13,346] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 18:58:13,346] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:58:13,347] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,347] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 18:58:13,347] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,348] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,348] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 18:58:13,348] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,348] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 18:58:13,349] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,349] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 18:58:13,350] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 18:58:13,350] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 18:58:13,351] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 18:58:13,351] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,352] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 18:58:13,352] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 18:58:13,352] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,353] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:58:13,353] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,353] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 18:58:13,354] DEBUG: channelMap keySet: . . 
[2021-07-30 18:58:13,354] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,354] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 18:58:13,355] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:58:13,355] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,355] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 18:58:13,356] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 18:58:13,356] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 18:58:13,357] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 18:58:13,357] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 18:58:13,357] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,357] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,358] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 18:58:13,358] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 18:58:13,359] DEBUG: >> msg.memoization_label: 2
[2021-07-30 18:58:13,359] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 18:58:13,359] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 18:58:13,360] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 18:58:13,360] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 18:58:13,360] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,361] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 18:58:13,360] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 18:58:13,362] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 18:58:13,362] DEBUG: channelMap keySet: . . . 
[2021-07-30 18:58:13,366] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 18:58:13,367] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:58:13,368] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 18:58:13,368] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 18:58:13,369] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 18:58:13,369] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 18:58:13,369] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 18:58:13,369] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 18:58:13,370] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 18:58:13,370] DEBUG: >> msg.memoization_label: 3
[2021-07-30 18:58:13,371] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 18:58:13,371] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 18:58:13,371] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 18:58:13,371] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 18:58:13,372] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,372] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 18:58:13,372] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 18:58:13,373] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 18:58:13,373] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 18:58:13,374] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 18:58:13,374] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 18:58:13,375] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:58:13,375] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:58:13,376] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 18:58:13,376] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 18:58:13,377] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,377] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 18:58:13,377] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 18:58:13,378] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 18:58:13,378] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,379] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 18:58:13,379] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:58:13,382] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 18:58:13,382] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,383] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 18:58:13,383] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 18:58:13,383] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:58:13,384] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 18:58:13,384] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 18:58:13,385] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,385] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 18:58:13,386] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 18:58:13,385] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 18:58:13,387] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 18:58:13,387] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 18:58:13,387] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:58:13,388] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 18:58:13,388] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 18:58:13,388] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,389] DEBUG: channelMap keySet: . . . . 
[2021-07-30 18:58:13,390] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 18:58:13,391] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,391] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 18:58:13,391] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:58:13,392] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 18:58:13,392] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:58:13,393] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:58:13,393] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,393] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,393] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 18:58:13,394] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 18:58:13,394] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,394] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 18:58:13,394] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,397] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 18:58:13,398] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 18:58:13,397] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 18:58:13,399] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,399] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 18:58:13,400] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:58:13,400] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 18:58:13,401] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:58:13,401] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:58:13,402] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 18:58:13,402] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,402] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 18:58:13,403] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,403] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 18:58:13,403] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 18:58:13,404] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:58:13,404] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 18:58:13,404] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 18:58:13,405] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 18:58:13,405] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,405] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 18:58:13,406] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,406] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 18:58:13,407] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 18:58:13,407] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 18:58:13,407] DEBUG: MemoizationController: pairing names after add
[2021-07-30 18:58:13,408] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 18:58:13,408] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 18:58:13,409] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 18:58:13,409] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 18:58:13,410] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 18:58:13,410] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 18:58:13,411] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 18:58:13,411] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:58:13,415] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 18:58:13,415] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 18:58:13,416] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,416] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,416] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 18:58:13,416] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,417] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 18:58:13,417] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 18:58:13,418] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 18:58:13,418] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:58:13,418] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:58:13,419] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 18:58:13,419] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,419] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,420] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 18:58:13,419] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 18:58:13,420] DEBUG: >> msg.memoization_label: 1
[2021-07-30 18:58:13,421] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 18:58:13,421] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 18:58:13,422] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 18:58:13,422] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 18:58:13,422] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 18:58:13,423] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,423] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 18:58:13,423] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 18:58:13,424] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 18:58:13,424] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 18:58:13,425] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:58:13,425] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 18:58:13,425] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:58:13,426] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 18:58:13,426] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:58:13,426] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 18:58:13,430] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,430] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 18:58:13,431] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,431] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 18:58:13,431] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 18:58:13,433] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 18:58:13,433] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,433] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 18:58:13,434] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 18:58:13,433] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:58:13,434] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 18:58:13,435] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 18:58:13,434] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-07-30 18:58:13,435] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:58:13,436] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:58:13,436] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:58:13,436] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 18:58:13,437] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 18:58:13,437] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,437] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 18:58:13,437] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,438] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 18:58:13,438] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 18:58:13,439] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 18:58:13,439] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 18:58:13,439] DEBUG: >> msg.memoization_label: 1
[2021-07-30 18:58:13,440] DEBUG: 
[2021-07-30 18:58:13,440] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:58:13,440] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 18:58:13,441] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 18:58:13,441] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 18:58:13,442] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 18:58:13,442] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:58:13,443] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:58:13,443] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:58:13,447] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 18:58:13,447] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 18:58:13,448] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 18:58:13,447] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,448] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 18:58:13,448] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 18:58:13,448] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 18:58:13,449] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001940E6B2430>]>
[2021-07-30 18:58:13,450] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:58:13,450] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 18:58:13,450] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 18:58:13,451] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 18:58:13,451] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 18:58:13,452] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,451] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 18:58:13,452] DEBUG: Deliver end promised Results: 
[2021-07-30 18:58:13,452] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 18:58:13,452] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:58:13,453] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,453] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-07-30 18:58:13,454] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,454] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 18:58:13,454] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 18:58:13,455] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,454] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 18:58:13,455] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 18:58:13,455] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 18:58:13,456] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
2]
[2021-07-30 18:58:13,457] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:58:13,457] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:58:13,457] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 18:58:13,458] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 18:58:13,458] DEBUG: 
[2021-07-30 18:58:13,459] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 18:58:13,458] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:58:13,463] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:58:13,463] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,463] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:58:13,464] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 18:58:13,464] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 18:58:13,464] DEBUG: >> msg.memoization_label: 2
[2021-07-30 18:58:13,465] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 18:58:13,466] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:58:13,466] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 18:58:13,466] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 18:58:13,467] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,467] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 18:58:13,467] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 18:58:13,467] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 18:58:13,467] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 18:58:13,468] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,469] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:58:13,469] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 18:58:13,469] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 18:58:13,469] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,470] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 18:58:13,470] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:58:13,470] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:58:13,471] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 18:58:13,471] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 18:58:13,471] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,472] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 18:58:13,472] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 18:58:13,472] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,473] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,474] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 18:58:13,474] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 18:58:13,475] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 18:58:13,478] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 18:58:13,478] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-07-30 18:58:13,479] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 18:58:13,479] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 18:58:13,480] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 18:58:13,480] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:58:13,480] DEBUG: 
[2021-07-30 18:58:13,481] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 18:58:13,481] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,481] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:58:13,482] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 18:58:13,482] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 18:58:13,482] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:58:13,483] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 18:58:13,483] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,484] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:58:13,484] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,485] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 18:58:13,485] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 18:58:13,485] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001940E69F5B0>]>
[2021-07-30 18:58:13,486] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,486] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-07-30 18:58:13,486] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 18:58:13,487] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 18:58:13,487] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-07-30 18:58:13,488] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 18:58:13,488] WARNING: MemoizationController already initialized.
[2021-07-30 18:58:13,488] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 18:58:13,488] DEBUG: Deliver end promised Results: 
[2021-07-30 18:58:13,489] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 18:58:13,489] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 18:58:13,489] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,490] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:58:13,490] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 18:58:13,494] DEBUG: 
[2021-07-30 18:58:13,494] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 18:58:13,495] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 18:58:13,495] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 18:58:13,495] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,496] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,497] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 18:58:13,498] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 18:58:13,498] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,498] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 18:58:13,498] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,499] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 18:58:13,499] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-07-30 18:58:13,499] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,500] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 18:58:13,500] DEBUG: >> msg.memoization_label: 0
[2021-07-30 18:58:13,500] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 18:58:13,501] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 18:58:13,501] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 18:58:13,502] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,502] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 18:58:13,502] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 18:58:13,503] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:58:13,503] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:58:13,504] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 18:58:13,504] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 18:58:13,504] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 18:58:13,505] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 18:58:13,505] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-07-30 18:58:13,506] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 18:58:13,506] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 18:58:13,506] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 18:58:13,507] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 18:58:13,509] DEBUG: 
[2021-07-30 18:58:13,510] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 18:58:13,510] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 18:58:13,511] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:58:13,511] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 18:58:13,511] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 18:58:13,512] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:58:13,512] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 18:58:13,512] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,513] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:58:13,513] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,514] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 18:58:13,515] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-07-30 18:58:13,515] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:58:13,515] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,515] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:58:13,516] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-07-30 18:58:13,517] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,517] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-07-30 18:58:13,517] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 18:58:13,518] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 18:58:13,518] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 18:58:13,518] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 18:58:13,519] DEBUG: 
[2021-07-30 18:58:13,519] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 18:58:13,519] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,520] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 18:58:13,520] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:13,520] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 18:58:13,520] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 18:58:13,521] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 18:58:13,521] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,524] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:58:13,525] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,526] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 18:58:13,526] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-07-30 18:58:13,526] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 18:58:13,527] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:13,527] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 18:58:13,527] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-07-30 18:58:13,528] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,528] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-07-30 18:58:13,529] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 18:58:13,529] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 18:58:13,529] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-07-30 18:58:13,530] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 18:58:13,530] DEBUG: Disabling memoization thread now...
[2021-07-30 18:58:13,530] DEBUG: MemoizationThread disabled.
[2021-07-30 18:58:13,531] DEBUG: 
[2021-07-30 18:58:13,531] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 1
[2021-07-30 18:58:13,531] DEBUG: 
[2021-07-30 18:58:13,532] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-07-30 18:58:15,541] DEBUG: Error. Expected value: 3, actual value: 1
[2021-07-30 18:58:15,541] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 18:58:15,542] DEBUG: 	[0,1][2,2]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:15,542] DEBUG: 	[0,1][3,2]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:15,543] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:15,543] DEBUG: 
[2021-07-30 18:58:15,543] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 18:58:15,543] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 18:58:15,544] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 18:58:15,544] DEBUG: 	4: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 21:42:06,627] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 21:42:06,627] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 21:42:06,628] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 21:42:06,628] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 21:42:06,628] DEBUG: n: 4
[2021-07-30 21:42:06,628] DEBUG: memoize is: False
[2021-07-30 21:42:06,628] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 21:42:06,629] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 21:42:06,629] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 21:42:06,630] DEBUG: >> Memoization Thread has started running...
[2021-07-30 21:42:06,630] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 21:42:06,630] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 21:42:06,630] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 21:42:06,630] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 21:42:06,630] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 21:42:06,630] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 21:42:06,630] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 21:42:06,630] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 21:42:06,631] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 21:42:06,631] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 21:42:06,631] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 21:42:06,631] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 21:42:06,631] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 21:42:06,631] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 21:42:06,631] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:06,631] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 21:42:06,632] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,632] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 21:42:06,632] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 21:42:06,632] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 21:42:06,632] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,632] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 21:42:06,632] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 21:42:06,632] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 21:42:06,633] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 21:42:06,634] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 21:42:06,634] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 21:42:06,635] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 21:42:06,636] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 21:42:06,636] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 21:42:06,636] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 21:42:06,637] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 21:42:06,637] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 21:42:06,637] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 21:42:06,638] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 21:42:06,638] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 21:42:06,638] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 21:42:06,639] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 21:42:06,639] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 21:42:06,639] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 21:42:06,640] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:06,640] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 21:42:06,641] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:06,646] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 21:42:06,646] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 21:42:06,646] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:06,647] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,647] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 21:42:06,647] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:06,648] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 21:42:06,648] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 21:42:06,648] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 21:42:06,650] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 21:42:06,650] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,651] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 21:42:06,651] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 21:42:06,651] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,652] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 21:42:06,652] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 21:42:06,653] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:06,653] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 21:42:06,654] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,655] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 21:42:06,655] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 21:42:06,656] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-07-30 21:42:06,657] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:06,661] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:06,661] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 21:42:06,661] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:06,663] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-07-30 21:42:06,663] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-07-30 21:42:06,663] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 21:42:06,663] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:06,664] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-07-30 21:42:06,664] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 21:42:06,665] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-07-30 21:42:06,665] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 21:42:06,666] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:06,666] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 21:42:06,666] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-07-30 21:42:06,667] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 21:42:06,667] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:06,668] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 21:42:06,668] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-07-30 21:42:06,668] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 21:42:06,668] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-07-30 21:42:06,668] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 21:42:06,669] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 21:42:06,670] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-07-30 21:42:06,670] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 21:42:06,671] DEBUG: 
[2021-07-30 21:42:06,671] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,671] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:06,671] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:06,672] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 21:42:06,673] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:06,676] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:06,676] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-07-30 21:42:06,676] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 21:42:06,677] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 21:42:06,677] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 21:42:06,678] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:06,678] DEBUG: 
[2021-07-30 21:42:06,678] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,678] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2)
[2021-07-30 21:42:06,679] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:06,679] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:06,680] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:06,680] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 21:42:06,680] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-07-30 21:42:06,681] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-07-30 21:42:06,681] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:06,681] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,681] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 21:42:06,682] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-07-30 21:42:06,683] DEBUG: 
[2021-07-30 21:42:06,683] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,684] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-07-30 21:42:06,683] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:06,684] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:06,685] DEBUG: [0,1][1,2][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 21:42:06,685] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:06,687] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:06,687] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:06,688] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-07-30 21:42:06,688] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:06,692] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:06,693] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-07-30 21:42:06,693] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 21:42:06,694] DEBUG: [0,1][1,2][1,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:06,694] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:06,694] DEBUG: [0,1][1,2][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:06,694] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 21:42:06,695] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2]
[2021-07-30 21:42:06,696] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:06,696] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:06,696] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:06,697] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][0,2]"
[2021-07-30 21:42:06,697] DEBUG: [0,1][1,2][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 21:42:06,698] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][0,2]", x = 1, y = 2
[2021-07-30 21:42:06,698] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:06,699] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 21:42:06,699] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:06,699] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][1,2]"
[2021-07-30 21:42:06,699] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-07-30 21:42:06,700] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][1,2]", x = 1, y = 2
[2021-07-30 21:42:06,700] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-07-30 21:42:06,701] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 21:42:06,701] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] parentProblem ID: [0,1][1,2][1,2]
[2021-07-30 21:42:06,701] DEBUG: [0,1][1,2][1,2][0,2]: faninId: [0,1][1,2][3,2]
[2021-07-30 21:42:06,702] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 21:42:06,702] DEBUG: 
[2021-07-30 21:42:06,702] DEBUG: [0,1][1,2][1,2][0,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,702] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2][1,2]
[2021-07-30 21:42:06,703] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:06,703] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][1,2][3,2]
[2021-07-30 21:42:06,704] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 21:42:06,704] DEBUG: 
[2021-07-30 21:42:06,704] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,704] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 21:42:06,705] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:06,708] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 21:42:06,709] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:06,709] DEBUG: 
[2021-07-30 21:42:06,709] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 21:42:06,709] DEBUG: Fan-In: ID: [0,1][1,2][1,2][0,2]: FanInID: [0,1][1,2][3,2]: is not become Executor and its value was: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0) and after put is [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:06,710] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:06,710] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][1,2][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:06,711] DEBUG: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:06,711] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:06,712] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:06,712] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:06,712] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 21:42:06,713] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:06,714] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2][1,2]"
[2021-07-30 21:42:06,715] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2][1,2]"
[2021-07-30 21:42:06,715] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 21:42:06,715] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 21:42:06,716] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 21:42:06,716] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 21:42:06,716] DEBUG: 
[2021-07-30 21:42:06,717] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:06,717] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:06,717] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:06,718] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:06,718] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:06,718] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:06,719] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 21:42:06,719] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-07-30 21:42:06,720] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-07-30 21:42:06,721] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-07-30 21:42:06,724] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 21:42:06,724] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 21:42:06,725] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [1,1]
[2021-07-30 21:42:06,725] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:06,725] DEBUG: 
[2021-07-30 21:42:06,726] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 21:42:06,726] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-07-30 21:42:06,726] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:06,727] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:06,727] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:06,727] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:06,728] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-07-30 21:42:06,728] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 3)
[2021-07-30 21:42:06,729] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-07-30 21:42:06,729] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-07-30 21:42:06,730] DEBUG: Disabling memoization thread now...
[2021-07-30 21:42:06,730] DEBUG: MemoizationThread disabled.
[2021-07-30 21:42:06,731] DEBUG: 
[2021-07-30 21:42:06,731] DEBUG: [0,1][1,2][1,2][1,2]: Fibonacci(4) = 3
[2021-07-30 21:42:06,731] DEBUG: 
[2021-07-30 21:42:06,732] DEBUG: [0,1][1,2][1,2][1,2]: Verifying ....... 
[2021-07-30 21:42:08,733] DEBUG: Verified.
[2021-07-30 21:42:17,208] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 21:42:17,209] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 21:42:17,209] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 21:42:17,209] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 21:42:17,209] DEBUG: n: 4
[2021-07-30 21:42:17,209] DEBUG: memoize is: False
[2021-07-30 21:42:17,209] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 21:42:17,210] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 21:42:17,210] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 21:42:17,211] DEBUG: >> Memoization Thread has started running...
[2021-07-30 21:42:17,211] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 21:42:17,211] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 21:42:17,211] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 21:42:17,211] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 21:42:17,211] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 21:42:17,211] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 21:42:17,211] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 21:42:17,211] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 21:42:17,211] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 21:42:17,211] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 21:42:17,212] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 21:42:17,212] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 21:42:17,212] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 21:42:17,212] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 21:42:17,212] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:17,212] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 21:42:17,212] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,212] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 21:42:17,212] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 21:42:17,213] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 21:42:17,213] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,213] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 21:42:17,213] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 21:42:17,213] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 21:42:17,214] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 21:42:17,215] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 21:42:17,215] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 21:42:17,215] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 21:42:17,216] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 21:42:17,216] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 21:42:17,217] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 21:42:17,217] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 21:42:17,217] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 21:42:17,218] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 21:42:17,218] DEBUG: [0,1][0,2] Calling problem.Fanout()
e, value: 2)
[2021-07-30 21:42:17,219] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 21:42:17,219] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 21:42:17,219] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 21:42:17,220] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 21:42:17,220] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 21:42:17,221] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:17,221] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:17,222] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 21:42:17,225] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 21:42:17,226] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 21:42:17,227] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:17,227] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,227] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 21:42:17,228] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 21:42:17,228] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 21:42:17,228] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 21:42:17,230] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,230] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 21:42:17,230] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 21:42:17,231] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,232] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 21:42:17,232] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 21:42:17,232] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 21:42:17,232] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 21:42:17,233] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:17,234] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,236] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 21:42:17,236] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 21:42:17,235] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 21:42:17,238] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:17,238] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:17,238] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-07-30 21:42:17,242] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:17,243] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:17,243] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-07-30 21:42:17,243] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-07-30 21:42:17,244] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:17,245] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-07-30 21:42:17,246] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-07-30 21:42:17,244] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 21:42:17,245] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 21:42:17,246] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:17,247] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:17,247] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-07-30 21:42:17,247] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:17,247] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 21:42:17,248] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 21:42:17,248] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-07-30 21:42:17,249] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-07-30 21:42:17,248] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 21:42:17,249] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 21:42:17,250] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 21:42:17,250] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-07-30 21:42:17,251] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 21:42:17,251] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 21:42:17,252] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-07-30 21:42:17,252] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 21:42:17,252] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 21:42:17,252] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 21:42:17,253] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 21:42:17,256] DEBUG: 
[2021-07-30 21:42:17,256] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,256] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 21:42:17,256] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:17,257] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-07-30 21:42:17,257] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 21:42:17,258] DEBUG: 
[2021-07-30 21:42:17,258] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,258] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2)
[2021-07-30 21:42:17,259] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:17,259] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 21:42:17,260] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:17,260] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:17,260] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-07-30 21:42:17,261] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:17,262] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,262] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:17,262] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-07-30 21:42:17,262] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 21:42:17,263] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 21:42:17,264] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:17,265] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-07-30 21:42:17,265] DEBUG: 
[2021-07-30 21:42:17,265] DEBUG: [0,1][1,2][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 21:42:17,266] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,266] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:17,267] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:17,268] WARNING: MemoizationController already initialized.
[2021-07-30 21:42:17,267] DEBUG: [0,1][1,2][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 21:42:17,268] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2]
[2021-07-30 21:42:17,268] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-07-30 21:42:17,272] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 21:42:17,273] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:17,273] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][0,2]"
[2021-07-30 21:42:17,274] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-07-30 21:42:17,273] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:17,275] DEBUG: [0,1][1,2][1,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 21:42:17,275] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][0,2]", x = 1, y = 2
[2021-07-30 21:42:17,275] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 21:42:17,276] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 21:42:17,277] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:17,277] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 21:42:17,277] DEBUG: [0,1][1,2][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 21:42:17,278] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:17,278] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2]
[2021-07-30 21:42:17,278] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 21:42:17,279] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) (ID: [0,1][1,2][1,2], value: 2) 
[2021-07-30 21:42:17,279] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][1,2]"
[2021-07-30 21:42:17,280] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] parentProblem ID: [0,1][1,2][1,2]
[2021-07-30 21:42:17,280] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][1,2]", x = 1, y = 2
[2021-07-30 21:42:17,280] DEBUG: [0,1][1,2][1,2][0,2]: faninId: [0,1][1,2][3,2]
[2021-07-30 21:42:17,281] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 21:42:17,281] DEBUG: 
[2021-07-30 21:42:17,282] DEBUG: [0,1][1,2][1,2][0,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,282] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-07-30 21:42:17,282] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:17,282] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-07-30 21:42:17,283] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 21:42:17,283] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2][1,2]
[2021-07-30 21:42:17,284] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][1,2][3,2]
[2021-07-30 21:42:17,284] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 21:42:17,284] DEBUG: 
[2021-07-30 21:42:17,285] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,285] DEBUG: Fan-In: ID: [0,1][1,2][1,2][0,2]: FanInID: [0,1][1,2][3,2]: is not become Executor and its value was: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0) and after put is [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:17,288] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:17,288] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 21:42:17,289] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 21:42:17,289] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:17,290] DEBUG: 
[2021-07-30 21:42:17,290] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 21:42:17,290] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][1,2][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:17,291] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:17,291] DEBUG: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-07-30 21:42:17,292] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:17,292] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:17,292] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:17,292] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 21:42:17,293] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:17,294] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2][1,2]"
[2021-07-30 21:42:17,295] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2][1,2]"
[2021-07-30 21:42:17,295] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 21:42:17,296] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 21:42:17,296] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 21:42:17,296] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 21:42:17,297] DEBUG: 
[2021-07-30 21:42:17,297] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 21:42:17,297] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-07-30 21:42:17,298] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:17,298] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 21:42:17,299] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:17,299] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:17,299] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 21:42:17,300] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-07-30 21:42:17,301] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-07-30 21:42:17,303] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-07-30 21:42:17,304] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 21:42:17,305] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 21:42:17,305] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [1,1]
[2021-07-30 21:42:17,305] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 21:42:17,306] DEBUG: 
[2021-07-30 21:42:17,306] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 21:42:17,306] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-07-30 21:42:17,307] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 21:42:17,307] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 21:42:17,307] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-07-30 21:42:17,308] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 21:42:17,308] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-07-30 21:42:17,308] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 3)
[2021-07-30 21:42:17,309] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-07-30 21:42:17,310] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-07-30 21:42:17,310] DEBUG: Disabling memoization thread now...
[2021-07-30 21:42:17,311] DEBUG: MemoizationThread disabled.
[2021-07-30 21:42:17,311] DEBUG: 
[2021-07-30 21:42:17,311] DEBUG: [0,1][1,2][1,2][1,2]: Fibonacci(4) = 3
[2021-07-30 21:42:17,312] DEBUG: 
[2021-07-30 21:42:17,312] DEBUG: [0,1][1,2][1,2][1,2]: Verifying ....... 
[2021-07-30 21:42:19,323] DEBUG: Verified.
[2021-08-01 14:22:07,121] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:22:07,122] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:22:07,122] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:22:07,122] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:22:07,122] DEBUG: n: 4
[2021-08-01 14:22:07,122] DEBUG: memoize is: True
[2021-08-01 14:22:19,399] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:22:19,399] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:22:19,400] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:22:19,400] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:22:19,400] DEBUG: n: 4
[2021-08-01 14:22:19,400] DEBUG: memoize is: True
[2021-08-01 14:22:56,947] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:22:56,947] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:22:56,947] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:22:56,947] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:22:56,947] DEBUG: n: 4
[2021-08-01 14:22:56,947] DEBUG: memoize is: True
[2021-08-01 14:23:02,353] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:23:02,353] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:23:02,353] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:23:02,353] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:23:02,353] DEBUG: n: 4
[2021-08-01 14:23:02,353] DEBUG: memoize is: True
[2021-08-01 14:23:02,354] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,355] DEBUG: >> Starting Memoization Controller now...
[2021-08-01 14:23:02,355] DEBUG: Initial pairing name: "[0,1]"
[2021-08-01 14:23:02,355] DEBUG: >> Memoization Thread has started running...
[2021-08-01 14:23:02,355] DEBUG: >> Memoization Controller started successfully!
[2021-08-01 14:23:02,355] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,355] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-01 14:23:02,355] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-01 14:23:02,356] DEBUG: MemoizationController: pair: [0,1]
[2021-08-01 14:23:02,356] DEBUG: channelMap keySet: . 
[2021-08-01 14:23:02,356] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,356] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:23:02,356] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-01 14:23:02,356] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-01 14:23:02,357] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-01 14:23:02,357] DEBUG: >> msg.memoization_label: 4
[2021-08-01 14:23:02,357] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-01 14:23:02,357] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-01 14:23:02,357] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,357] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-01 14:23:02,357] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-01 14:23:02,357] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-01 14:23:02,357] DEBUG: [0,1] Calling problem.divide()
[2021-08-01 14:23:02,358] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-01 14:23:02,358] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:23:02,358] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-01 14:23:02,358] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:23:02,358] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,358] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,358] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-01 14:23:02,359] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-01 14:23:02,359] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,360] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-01 14:23:02,360] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,361] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,361] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-01 14:23:02,361] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,362] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,364] DEBUG: 	MemoizationController: [0,1]
[2021-08-01 14:23:02,364] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,365] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-01 14:23:02,366] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,366] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-01 14:23:02,366] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]

[2021-08-01 14:23:02,367] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,367] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-01 14:23:02,367] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-01 14:23:02,368] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-01 14:23:02,368] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,368] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,369] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:23:02,369] DEBUG: 	MemoizationController: [0,1]
[2021-08-01 14:23:02,369] DEBUG: channelMap keySet: . . 
[2021-08-01 14:23:02,370] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,370] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,370] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-01 14:23:02,371] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:23:02,371] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,371] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-01 14:23:02,371] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-01 14:23:02,372] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-01 14:23:02,372] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-01 14:23:02,373] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-01 14:23:02,373] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,373] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,373] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-01 14:23:02,374] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-01 14:23:02,375] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:23:02,375] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-01 14:23:02,375] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-01 14:23:02,375] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-01 14:23:02,376] DEBUG: channelMap keySet: . . . 
[2021-08-01 14:23:02,376] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-01 14:23:02,376] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,377] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,377] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:23:02,377] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-01 14:23:02,378] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-01 14:23:02,378] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-01 14:23:02,380] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-01 14:23:02,380] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-01 14:23:02,381] DEBUG: >> msg.memoization_label: 3
[2021-08-01 14:23:02,382] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-01 14:23:02,381] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-01 14:23:02,382] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-01 14:23:02,382] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-01 14:23:02,383] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,383] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-01 14:23:02,383] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-01 14:23:02,384] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:23:02,384] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-01 14:23:02,385] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-01 14:23:02,385] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,385] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-01 14:23:02,385] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:23:02,386] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-01 14:23:02,386] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:23:02,387] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,387] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:23:02,387] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,388] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,388] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-01 14:23:02,388] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,389] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-01 14:23:02,389] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,390] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,390] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-01 14:23:02,390] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,391] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-01 14:23:02,391] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,392] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,392] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:02,393] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-01 14:23:02,393] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,393] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,393] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,394] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:23:02,396] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,397] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:23:02,397] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-01 14:23:02,397] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,398] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,398] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-01 14:23:02,398] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,398] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-01 14:23:02,399] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-01 14:23:02,399] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-01 14:23:02,399] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,400] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-01 14:23:02,400] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:23:02,401] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,401] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-01 14:23:02,401] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:23:02,402] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:23:02,402] DEBUG: channelMap keySet: . . . . 
[2021-08-01 14:23:02,402] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,402] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-01 14:23:02,403] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,403] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,404] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-01 14:23:02,404] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-01 14:23:02,404] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-01 14:23:02,404] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,405] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-01 14:23:02,405] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-01 14:23:02,405] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,405] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-01 14:23:02,406] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-01 14:23:02,406] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:23:02,406] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-01 14:23:02,407] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,407] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-01 14:23:02,408] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-01 14:23:02,408] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:23:02,409] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:23:02,409] DEBUG: channelMap keySet: . . . . . 
[2021-08-01 14:23:02,410] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,409] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,412] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-01 14:23:02,412] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-01 14:23:02,413] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-01 14:23:02,413] DEBUG: >> msg.memoization_label: 0
[2021-08-01 14:23:02,414] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-01 14:23:02,414] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-01 14:23:02,414] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,414] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-01 14:23:02,415] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-01 14:23:02,415] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,416] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-01 14:23:02,416] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-01 14:23:02,416] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:23:02,416] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-01 14:23:02,417] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-01 14:23:02,417] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:23:02,417] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-08-01 14:23:02,418] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:23:02,418] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-01 14:23:02,419] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-01 14:23:02,419] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:02,419] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:23:02,420] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:23:02,420] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,420] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-01 14:23:02,420] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,421] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,421] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:23:02,422] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:23:02,422] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:23:02,422] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-01 14:23:02,423] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-01 14:23:02,423] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-01 14:23:02,423] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,423] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,424] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-01 14:23:02,424] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-01 14:23:02,425] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-01 14:23:02,425] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:23:02,426] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-01 14:23:02,426] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-01 14:23:02,428] DEBUG: channelMap keySet: . . . . . . 
[2021-08-01 14:23:02,429] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-01 14:23:02,429] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,429] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,429] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-01 14:23:02,430] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
sage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-01 14:23:02,430] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-01 14:23:02,431] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:23:02,431] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-01 14:23:02,431] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:02,431] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-01 14:23:02,432] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-01 14:23:02,432] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:23:02,433] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,433] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-01 14:23:02,433] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-01 14:23:02,434] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-08-01 14:23:02,434] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,434] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:23:02,434] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-01 14:23:02,435] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-01 14:23:02,435] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,435] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,436] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:23:02,436] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:02,437] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:23:02,436] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-01 14:23:02,438] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:23:02,438] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-01 14:23:02,438] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-01 14:23:02,439] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:23:02,439] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-01 14:23:02,439] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-01 14:23:02,439] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,440] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,440] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-01 14:23:02,441] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-01 14:23:02,441] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-01 14:23:02,441] DEBUG: 
[2021-08-01 14:23:02,441] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:23:02,444] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-01 14:23:02,445] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
anInExector() now...
[2021-08-01 14:23:02,445] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-01 14:23:02,445] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:02,446] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:02,445] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-01 14:23:02,446] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:23:02,447] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-01 14:23:02,447] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:23:02,447] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,448] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-01 14:23:02,448] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-01 14:23:02,448] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-01 14:23:02,449] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-08-01 14:23:02,449] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-01 14:23:02,449] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000185130AC5B0>]>
[2021-08-01 14:23:02,450] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:02,450] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-01 14:23:02,450] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:23:02,451] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-01 14:23:02,451] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-01 14:23:02,452] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,452] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:23:02,452] DEBUG: Deliver end promised Results: 
[2021-08-01 14:23:02,452] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-01 14:23:02,452] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,453] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,453] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-01 14:23:02,454] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-01 14:23:02,454] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,454] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-01 14:23:02,455] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-01 14:23:02,455] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-01 14:23:02,455] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,456] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:23:02,457] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:23:02,457] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-01 14:23:02,458] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:23:02,460] DEBUG: 
[2021-08-01 14:23:02,460] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:23:02,460] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:02,461] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-01 14:23:02,461] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:02,461] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:23:02,462] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,462] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:02,463] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-01 14:23:02,463] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-01 14:23:02,464] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:23:02,464] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-01 14:23:02,464] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:23:02,465] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-01 14:23:02,465] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-01 14:23:02,465] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-01 14:23:02,465] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,466] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-08-01 14:23:02,466] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-01 14:23:02,466] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-01 14:23:02,467] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,467] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:23:02,467] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:23:02,468] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-08-01 14:23:02,468] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,469] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-01 14:23:02,469] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:23:02,469] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:23:02,469] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-08-01 14:23:02,470] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-08-01 14:23:02,470] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-01 14:23:02,470] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,471] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-08-01 14:23:02,471] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,472] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,472] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:23:02,472] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-01 14:23:02,473] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:23:02,475] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,475] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-01 14:23:02,476] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-01 14:23:02,476] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:23:02,477] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-01 14:23:02,477] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:02,477] DEBUG: 
[2021-08-01 14:23:02,478] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-01 14:23:02,478] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,478] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:02,479] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:02,479] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-01 14:23:02,479] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:02,480] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-01 14:23:02,480] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,480] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:23:02,481] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,481] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:23:02,481] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-08-01 14:23:02,482] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000185130B9700>]>
[2021-08-01 14:23:02,482] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,482] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-01 14:23:02,483] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-01 14:23:02,483] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-01 14:23:02,483] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-01 14:23:02,484] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-01 14:23:02,484] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:02,485] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:23:02,484] DEBUG: Deliver end promised Results: 
[2021-08-01 14:23:02,485] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-01 14:23:02,486] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-01 14:23:02,486] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,486] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-01 14:23:02,487] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:02,488] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-01 14:23:02,487] DEBUG: 
[2021-08-01 14:23:02,488] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:23:02,488] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:23:02,489] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,491] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,491] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-01 14:23:02,492] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-01 14:23:02,492] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,493] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-01 14:23:02,493] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,493] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:23:02,494] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-08-01 14:23:02,494] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,494] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-01 14:23:02,495] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:23:02,495] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:23:02,495] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-01 14:23:02,496] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-08-01 14:23:02,496] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-01 14:23:02,496] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,497] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-08-01 14:23:02,497] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:23:02,497] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:23:02,498] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:23:02,498] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-08-01 14:23:02,498] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:23:02,499] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:02,499] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-08-01 14:23:02,499] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-01 14:23:02,500] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:23:02,500] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-01 14:23:02,500] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-01 14:23:02,501] DEBUG: 
[2021-08-01 14:23:02,501] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:02,501] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:23:02,502] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:02,502] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:02,503] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-01 14:23:02,503] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:02,503] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-01 14:23:02,503] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:23:02,504] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:23:02,504] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:23:02,505] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:23:02,507] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-08-01 14:23:02,507] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:23:02,508] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:23:02,508] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-01 14:23:02,508] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-01 14:23:02,509] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-01 14:23:02,509] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,510] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-01 14:23:02,510] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:23:02,510] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-08-01 14:23:02,510] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:02,511] DEBUG: 
[2021-08-01 14:23:02,511] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:23:02,512] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:23:02,512] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:02,512] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:02,513] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-01 14:23:02,513] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:02,513] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-01 14:23:02,514] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:23:02,514] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:23:02,514] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:23:02,515] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:23:02,515] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-08-01 14:23:02,515] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:23:02,516] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:23:02,516] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-01 14:23:02,516] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-08-01 14:23:02,517] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,517] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-01 14:23:02,518] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-01 14:23:02,518] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:23:02,518] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-08-01 14:23:02,518] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:02,519] DEBUG: Disabling memoization thread now...
[2021-08-01 14:23:02,519] DEBUG: MemoizationThread disabled.
[2021-08-01 14:23:02,520] DEBUG: 
[2021-08-01 14:23:02,520] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-08-01 14:23:02,520] DEBUG: 
[2021-08-01 14:23:02,521] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-08-01 14:23:04,529] DEBUG: Verified.
[2021-08-01 14:23:15,306] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:23:15,306] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:23:15,307] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:23:15,307] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:23:15,307] DEBUG: n: 4
[2021-08-01 14:23:15,307] DEBUG: memoize is: False
[2021-08-01 14:23:15,307] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,308] DEBUG: >> Starting Memoization Controller now...
[2021-08-01 14:23:15,308] DEBUG: Initial pairing name: "[0,1]"
[2021-08-01 14:23:15,308] DEBUG: >> Memoization Thread has started running...
[2021-08-01 14:23:15,308] DEBUG: >> Memoization Controller started successfully!
[2021-08-01 14:23:15,309] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:23:15,309] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-01 14:23:15,309] DEBUG: [0,1] Calling problem.divide()
[2021-08-01 14:23:15,309] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-01 14:23:15,309] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:23:15,309] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-01 14:23:15,309] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:23:15,309] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,309] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,309] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-01 14:23:15,309] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-01 14:23:15,310] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,310] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-01 14:23:15,310] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,310] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-01 14:23:15,310] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,310] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-01 14:23:15,310] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-01 14:23:15,310] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-01 14:23:15,310] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,311] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-01 14:23:15,311] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-01 14:23:15,311] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-01 14:23:15,311] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:23:15,311] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-01 14:23:15,312] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,312] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:23:15,313] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-01 14:23:15,313] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:23:15,313] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,314] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:23:15,314] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,314] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,315] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-01 14:23:15,315] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,316] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-01 14:23:15,316] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,316] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,317] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,317] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-01 14:23:15,318] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,318] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-01 14:23:15,319] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-01 14:23:15,319] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,319] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,320] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,320] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-01 14:23:15,320] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-01 14:23:15,321] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
lue: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,322] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-01 14:23:15,322] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-08-01 14:23:15,322] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-01 14:23:15,323] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,323] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-01 14:23:15,323] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,323] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-01 14:23:15,323] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:23:15,324] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-01 14:23:15,324] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-01 14:23:15,324] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-01 14:23:15,325] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-08-01 14:23:15,325] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:23:15,325] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-01 14:23:15,326] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,326] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-08-01 14:23:15,327] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-01 14:23:15,327] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-01 14:23:15,327] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-01 14:23:15,328] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,328] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:23:15,328] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-01 14:23:15,329] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-01 14:23:15,329] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-01 14:23:15,330] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:23:15,330] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-01 14:23:15,333] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,333] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-01 14:23:15,333] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-01 14:23:15,333] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,334] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:23:15,334] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-01 14:23:15,334] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-01 14:23:15,335] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,335] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-01 14:23:15,336] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,336] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:23:15,337] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,336] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-01 14:23:15,337] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-01 14:23:15,337] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:23:15,338] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-01 14:23:15,338] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-01 14:23:15,338] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-01 14:23:15,339] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-01 14:23:15,340] DEBUG: 
[2021-08-01 14:23:15,340] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,340] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:23:15,340] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:15,341] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-01 14:23:15,341] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-01 14:23:15,342] DEBUG: 
[2021-08-01 14:23:15,342] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,342] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:23:15,342] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:15,343] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,344] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,344] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-08-01 14:23:15,344] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:15,345] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:15,345] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,345] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-08-01 14:23:15,346] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-08-01 14:23:15,345] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:23:15,349] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-08-01 14:23:15,349] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-01 14:23:15,349] DEBUG: [0,1][1,2][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-08-01 14:23:15,349] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:15,350] DEBUG: 
[2021-08-01 14:23:15,350] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,350] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-08-01 14:23:15,351] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:15,351] WARNING: MemoizationController already initialized.
[2021-08-01 14:23:15,351] DEBUG: [0,1][1,2][1,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:23:15,352] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-08-01 14:23:15,352] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2]
[2021-08-01 14:23:15,352] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-08-01 14:23:15,353] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:23:15,353] DEBUG: [0,1][1,2][1,2][1,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-08-01 14:23:15,354] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,354] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][0,2]"
[2021-08-01 14:23:15,354] DEBUG: [0,1][1,2][1,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:23:15,354] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][0,2]", x = 1, y = 2
[2021-08-01 14:23:15,355] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2]
[2021-08-01 14:23:15,355] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:23:15,356] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:23:15,356] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][1,2]"
[2021-08-01 14:23:15,356] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:15,356] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][1,2]", x = 1, y = 2
[2021-08-01 14:23:15,357] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:23:15,357] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-01 14:23:15,358] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:15,358] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-01 14:23:15,358] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] parentProblem ID: [0,1][1,2][1,2]
[2021-08-01 14:23:15,359] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:15,359] DEBUG: [0,1][1,2][1,2][0,2]: faninId: [0,1][1,2][3,2]
[2021-08-01 14:23:15,359] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-01 14:23:15,360] DEBUG: 
[2021-08-01 14:23:15,360] DEBUG: [0,1][1,2][1,2][0,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,360] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2][1,2]
[2021-08-01 14:23:15,360] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-08-01 14:23:15,361] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][1,2][3,2]
[2021-08-01 14:23:15,362] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-01 14:23:15,364] DEBUG: 
[2021-08-01 14:23:15,365] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,365] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-01 14:23:15,365] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-08-01 14:23:15,365] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-01 14:23:15,366] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-01 14:23:15,366] DEBUG: Fan-In: ID: [0,1][1,2][1,2][0,2]: FanInID: [0,1][1,2][3,2]: is not become Executor and its value was: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0) and after put is [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-08-01 14:23:15,367] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:23:15,367] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-01 14:23:15,367] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:15,368] DEBUG: 
[2021-08-01 14:23:15,368] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:23:15,368] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][1,2][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:15,368] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:15,369] DEBUG: [0,1][1,2][1,2][0,2]: (ID: [0,1][1,2][1,2][0,2]/value: 0)
[2021-08-01 14:23:15,369] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-01 14:23:15,370] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:15,370] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:15,370] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-01 14:23:15,371] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-08-01 14:23:15,371] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2][1,2]"
[2021-08-01 14:23:15,372] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2][1,2]"
[2021-08-01 14:23:15,372] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-01 14:23:15,372] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:23:15,373] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-01 14:23:15,373] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-01 14:23:15,373] DEBUG: 
[2021-08-01 14:23:15,373] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:23:15,374] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 1)
[2021-08-01 14:23:15,374] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:15,375] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:23:15,375] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-01 14:23:15,375] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:15,375] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-01 14:23:15,376] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-08-01 14:23:15,376] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-01 14:23:15,377] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-01 14:23:15,377] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-01 14:23:15,377] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:23:15,378] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [1,1]
[2021-08-01 14:23:15,380] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:23:15,380] DEBUG: 
[2021-08-01 14:23:15,381] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:23:15,381] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 2)
[2021-08-01 14:23:15,381] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:23:15,382] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:23:15,382] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-01 14:23:15,382] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:23:15,383] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-01 14:23:15,383] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: [0,1][1,2][1,2][1,2]: (ID: [0,1][1,2][1,2][1,2]/value: 3)
[2021-08-01 14:23:15,384] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-08-01 14:23:15,384] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-01 14:23:15,384] DEBUG: Disabling memoization thread now...
[2021-08-01 14:23:15,385] DEBUG: MemoizationThread disabled.
[2021-08-01 14:23:15,385] DEBUG: 
[2021-08-01 14:23:15,385] DEBUG: [0,1][1,2][1,2][1,2]: Fibonacci(4) = 3
[2021-08-01 14:23:15,385] DEBUG: 
[2021-08-01 14:23:15,386] DEBUG: [0,1][1,2][1,2][1,2]: Verifying ....... 
[2021-08-01 14:23:17,391] DEBUG: Verified.
[2021-08-01 14:29:17,305] DEBUG: Running DivideandConquerFibonacci
[2021-08-01 14:29:17,305] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-01 14:29:17,306] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-01 14:29:17,306] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-01 14:29:17,306] DEBUG: n: 4
[2021-08-01 14:29:17,307] DEBUG: memoize is: True
[2021-08-01 14:29:17,307] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,309] DEBUG: >> Starting Memoization Controller now...
[2021-08-01 14:29:17,309] DEBUG: Initial pairing name: "[0,1]"
[2021-08-01 14:29:17,309] DEBUG: >> Memoization Thread has started running...
[2021-08-01 14:29:17,309] DEBUG: >> Memoization Controller started successfully!
[2021-08-01 14:29:17,309] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,310] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-01 14:29:17,310] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-01 14:29:17,311] DEBUG: MemoizationController: pair: [0,1]
[2021-08-01 14:29:17,311] DEBUG: channelMap keySet: . 
[2021-08-01 14:29:17,312] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,312] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:29:17,312] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-01 14:29:17,313] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-01 14:29:17,313] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-01 14:29:17,313] DEBUG: >> msg.memoization_label: 4
[2021-08-01 14:29:17,314] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-01 14:29:17,316] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-01 14:29:17,316] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,316] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-01 14:29:17,317] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-01 14:29:17,317] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-01 14:29:17,317] DEBUG: [0,1] Calling problem.divide()
[2021-08-01 14:29:17,318] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-01 14:29:17,318] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:29:17,318] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-01 14:29:17,319] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-01 14:29:17,319] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,319] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,320] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-01 14:29:17,320] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-01 14:29:17,321] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,321] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-01 14:29:17,321] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,322] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,322] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-01 14:29:17,322] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,323] DEBUG: 	MemoizationController: [0,1]
[2021-08-01 14:29:17,323] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,323] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,323] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-01 14:29:17,324] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,324] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-01 14:29:17,325] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-01 14:29:17,325] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-01 14:29:17,325] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-01 14:29:17,325] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,326] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-01 14:29:17,326] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-01 14:29:17,326] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,327] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:29:17,327] DEBUG: 	MemoizationController: [0,1]
[2021-08-01 14:29:17,328] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,328] DEBUG: channelMap keySet: . . 
[2021-08-01 14:29:17,328] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,329] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-01 14:29:17,329] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,329] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:29:17,332] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-01 14:29:17,332] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-01 14:29:17,333] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-01 14:29:17,333] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-01 14:29:17,334] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-01 14:29:17,334] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,334] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,334] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-01 14:29:17,335] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-01 14:29:17,335] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:29:17,335] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-01 14:29:17,336] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-01 14:29:17,336] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-01 14:29:17,336] DEBUG: channelMap keySet: . . . 
[2021-08-01 14:29:17,337] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-01 14:29:17,337] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,337] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,337] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-01 14:29:17,338] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:29:17,339] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-01 14:29:17,339] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-01 14:29:17,339] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-01 14:29:17,339] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-01 14:29:17,339] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-01 14:29:17,340] DEBUG: >> msg.memoization_label: 3
[2021-08-01 14:29:17,340] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-01 14:29:17,341] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-01 14:29:17,341] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-01 14:29:17,341] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-01 14:29:17,342] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:29:17,342] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,342] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-01 14:29:17,342] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,343] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-01 14:29:17,343] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-01 14:29:17,344] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-01 14:29:17,344] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,344] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-01 14:29:17,345] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,345] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-01 14:29:17,345] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-01 14:29:17,346] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:29:17,348] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-01 14:29:17,349] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,349] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,350] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-01 14:29:17,350] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,350] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,351] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,351] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,352] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,352] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-01 14:29:17,352] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-01 14:29:17,353] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,353] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-01 14:29:17,354] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:29:17,354] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-01 14:29:17,354] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,354] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:29:17,355] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,355] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,356] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,356] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-01 14:29:17,356] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,357] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,357] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-01 14:29:17,357] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-01 14:29:17,357] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-01 14:29:17,357] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-01 14:29:17,358] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-01 14:29:17,358] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,359] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-01 14:29:17,359] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:29:17,360] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:29:17,360] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,360] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:29:17,361] DEBUG: channelMap keySet: . . . . 
[2021-08-01 14:29:17,363] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,363] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-01 14:29:17,363] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,364] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,364] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-01 14:29:17,364] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-01 14:29:17,365] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-01 14:29:17,365] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,365] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-01 14:29:17,366] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-01 14:29:17,365] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,366] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-01 14:29:17,367] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:29:17,367] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-01 14:29:17,368] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:29:17,368] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-01 14:29:17,368] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,369] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-01 14:29:17,369] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:29:17,369] DEBUG: channelMap keySet: . . . . . 
[2021-08-01 14:29:17,370] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,370] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,370] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,370] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-01 14:29:17,371] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-01 14:29:17,370] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-01 14:29:17,372] DEBUG: MemoizationController: pairing names after add
[2021-08-01 14:29:17,372] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-01 14:29:17,372] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-01 14:29:17,373] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-01 14:29:17,373] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-01 14:29:17,373] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-01 14:29:17,374] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-01 14:29:17,374] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-01 14:29:17,374] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,374] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-01 14:29:17,375] DEBUG: >> msg.memoization_label: 0
[2021-08-01 14:29:17,375] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-01 14:29:17,375] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-01 14:29:17,376] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,376] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-01 14:29:17,377] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-01 14:29:17,377] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,377] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-01 14:29:17,379] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,379] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-01 14:29:17,380] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-01 14:29:17,380] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-01 14:29:17,381] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-01 14:29:17,381] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-08-01 14:29:17,381] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-01 14:29:17,381] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:29:17,382] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:29:17,382] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:29:17,382] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:29:17,382] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-01 14:29:17,383] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,383] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,384] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-01 14:29:17,384] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-01 14:29:17,385] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-01 14:29:17,384] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:29:17,385] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-01 14:29:17,385] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-01 14:29:17,386] DEBUG: channelMap keySet: . . . . . . 
[2021-08-01 14:29:17,386] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-01 14:29:17,386] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,387] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,387] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-01 14:29:17,387] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-01 14:29:17,387] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,388] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-01 14:29:17,388] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,388] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-01 14:29:17,389] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-01 14:29:17,388] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-01 14:29:17,390] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:29:17,390] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:29:17,390] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-01 14:29:17,391] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:29:17,391] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-08-01 14:29:17,392] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-01 14:29:17,392] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-01 14:29:17,395] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,395] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:29:17,395] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,395] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-01 14:29:17,396] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-01 14:29:17,395] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-01 14:29:17,397] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:29:17,397] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-01 14:29:17,397] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:29:17,397] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-01 14:29:17,398] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:29:17,398] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:29:17,398] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-01 14:29:17,399] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-01 14:29:17,399] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,399] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-01 14:29:17,400] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-01 14:29:17,400] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-01 14:29:17,400] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:29:17,401] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-01 14:29:17,401] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:29:17,401] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,402] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:29:17,402] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-01 14:29:17,403] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-01 14:29:17,403] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-01 14:29:17,403] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-01 14:29:17,403] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:29:17,404] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,404] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-01 14:29:17,404] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-01 14:29:17,404] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-01 14:29:17,404] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-01 14:29:17,405] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-01 14:29:17,406] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002343E1307C0>]>
[2021-08-01 14:29:17,405] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-08-01 14:29:17,406] DEBUG: 
[2021-08-01 14:29:17,407] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:29:17,407] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-01 14:29:17,408] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-01 14:29:17,408] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-01 14:29:17,410] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:29:17,410] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-01 14:29:17,410] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-01 14:29:17,412] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,411] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-01 14:29:17,412] DEBUG: Deliver end promised Results: 
[2021-08-01 14:29:17,412] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-01 14:29:17,413] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,412] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,414] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-01 14:29:17,413] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-01 14:29:17,414] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-01 14:29:17,414] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:29:17,414] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-01 14:29:17,414] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-01 14:29:17,416] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:29:17,415] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:29:17,416] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-01 14:29:17,416] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:29:17,417] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-01 14:29:17,417] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-01 14:29:17,417] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:29:17,417] DEBUG: 
[2021-08-01 14:29:17,418] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:29:17,418] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-01 14:29:17,418] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-01 14:29:17,419] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:29:17,419] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-01 14:29:17,419] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,420] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:29:17,420] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,419] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-01 14:29:17,421] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-01 14:29:17,421] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,421] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-08-01 14:29:17,422] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:29:17,423] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:29:17,423] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-01 14:29:17,423] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-01 14:29:17,424] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,426] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-01 14:29:17,426] DEBUG: >> msg.memoization_label: 1
[2021-08-01 14:29:17,426] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:29:17,427] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-08-01 14:29:17,427] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-08-01 14:29:17,427] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,428] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-01 14:29:17,428] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-01 14:29:17,428] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-08-01 14:29:17,429] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,429] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,430] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:29:17,430] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,430] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-01 14:29:17,430] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:29:17,431] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-08-01 14:29:17,431] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-01 14:29:17,432] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,432] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:29:17,433] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,433] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-01 14:29:17,433] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-01 14:29:17,434] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-01 14:29:17,434] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-01 14:29:17,434] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:29:17,435] DEBUG: 
[2021-08-01 14:29:17,435] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-01 14:29:17,435] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,436] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:29:17,436] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-01 14:29:17,436] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-01 14:29:17,437] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:29:17,437] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-01 14:29:17,437] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,438] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:29:17,438] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,438] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-01 14:29:17,439] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-08-01 14:29:17,439] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002343E130E20>]>
[2021-08-01 14:29:17,439] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,440] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-01 14:29:17,440] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-01 14:29:17,442] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-01 14:29:17,442] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-01 14:29:17,443] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-01 14:29:17,443] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:29:17,443] WARNING: MemoizationController already initialized.
[2021-08-01 14:29:17,443] DEBUG: Deliver end promised Results: 
[2021-08-01 14:29:17,444] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-01 14:29:17,444] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-01 14:29:17,445] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,445] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:29:17,445] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-01 14:29:17,446] DEBUG: 
[2021-08-01 14:29:17,446] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-01 14:29:17,447] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:29:17,447] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-01 14:29:17,447] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,448] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1) and after put is [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,448] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-01 14:29:17,448] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,448] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-01 14:29:17,449] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,449] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-01 14:29:17,450] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-01 14:29:17,450] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-08-01 14:29:17,450] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,451] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-01 14:29:17,451] DEBUG: >> msg.memoization_label: 2
[2021-08-01 14:29:17,451] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-01 14:29:17,452] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-01 14:29:17,452] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-08-01 14:29:17,452] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,452] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-01 14:29:17,453] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-08-01 14:29:17,453] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:29:17,454] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:29:17,454] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-08-01 14:29:17,454] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-08-01 14:29:17,455] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-08-01 14:29:17,455] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-01 14:29:17,455] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-08-01 14:29:17,456] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-01 14:29:17,458] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-01 14:29:17,459] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-01 14:29:17,459] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-01 14:29:17,459] DEBUG: 
[2021-08-01 14:29:17,460] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-01 14:29:17,460] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-01 14:29:17,460] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:29:17,461] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-01 14:29:17,461] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-01 14:29:17,461] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:29:17,462] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-01 14:29:17,462] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:29:17,462] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:29:17,463] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:29:17,463] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-01 14:29:17,463] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-08-01 14:29:17,464] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:29:17,464] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:29:17,464] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-01 14:29:17,464] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-01 14:29:17,465] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,465] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-01 14:29:17,466] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-01 14:29:17,466] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-08-01 14:29:17,466] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-08-01 14:29:17,467] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-01 14:29:17,467] DEBUG: 
[2021-08-01 14:29:17,467] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-01 14:29:17,468] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-01 14:29:17,468] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-01 14:29:17,468] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-01 14:29:17,469] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-01 14:29:17,469] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-01 14:29:17,469] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-01 14:29:17,470] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:29:17,470] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:29:17,470] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:29:17,471] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-01 14:29:17,471] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-08-01 14:29:17,471] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-08-01 14:29:17,472] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-01 14:29:17,474] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
ults: 
[2021-08-01 14:29:17,475] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-01 14:29:17,475] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,476] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-01 14:29:17,476] DEBUG: MemoizationController: pairing names after remove
[2021-08-01 14:29:17,476] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-08-01 14:29:17,476] DEBUG: Disabling memoization thread now...
[2021-08-01 14:29:17,476] DEBUG: >> Memoization Thread awaiting message...
[2021-08-01 14:29:17,477] DEBUG: MemoizationThread disabled.
[2021-08-01 14:29:17,477] DEBUG: 
[2021-08-01 14:29:17,478] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-08-01 14:29:17,478] DEBUG: 
[2021-08-01 14:29:17,478] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-08-01 14:29:19,482] DEBUG: Verified.
[2021-08-02 11:35:28,178] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:35:28,179] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:35:28,179] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:35:28,179] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:35:28,179] DEBUG: n: 4
[2021-08-02 11:35:28,179] DEBUG: memoize is: True
[2021-08-02 11:35:28,179] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,181] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:35:28,181] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:35:28,181] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:35:28,181] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:35:28,181] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:35:28,181] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,182] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:35:28,183] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:35:28,183] DEBUG: channelMap keySet: . 
[2021-08-02 11:35:28,185] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,185] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:35:28,185] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:35:28,186] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:35:28,186] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:35:28,186] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:35:28,187] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:35:28,187] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:35:28,187] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,187] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:35:28,188] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:35:28,188] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:35:28,189] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:35:28,189] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:35:28,189] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:35:28,190] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:35:28,193] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:35:28,193] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,194] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,194] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:35:28,194] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:35:28,195] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,195] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:35:28,195] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,196] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,196] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:35:28,197] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,197] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:35:28,197] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:35:28,198] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:35:28,198] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,199] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,199] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:35:28,199] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:35:28,200] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:35:28,200] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:35:28,201] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:35:28,201] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,201] DEBUG: channelMap keySet: . . 
[2021-08-02 11:35:28,201] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:35:28,202] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,202] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,202] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:35:28,203] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:35:28,203] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:35:28,204] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:35:28,204] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:35:28,204] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,204] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:35:28,205] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:35:28,205] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:35:28,205] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:35:28,206] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:35:28,209] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,209] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:35:28,210] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:35:28,210] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:35:28,211] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:35:28,211] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,211] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:35:28,212] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:35:28,212] DEBUG: 	Memoization Controller: [0,1][0,2]
lue: 2
[2021-08-02 11:35:28,213] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:35:28,213] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:35:28,214] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,214] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,214] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,214] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:35:28,215] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:35:28,215] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,216] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,216] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:35:28,216] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:35:28,217] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:35:28,218] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:35:28,217] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:35:28,219] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,219] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,219] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,219] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,220] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:35:28,220] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:35:28,220] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,221] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:35:28,221] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:35:28,224] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,225] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:35:28,225] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:35:28,225] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:35:28,226] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:35:28,226] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,226] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:35:28,227] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:35:28,227] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,227] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:35:28,227] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:35:28,228] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:35:28,227] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:35:28,229] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:35:28,229] DEBUG: >> Memoization Thread awaiting message...
 name "[0,1][0,2][0,2]"...
[2021-08-02 11:35:28,229] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:35:28,230] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,230] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:35:28,230] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:35:28,230] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:35:28,231] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:35:28,231] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:35:28,232] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:35:28,232] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,232] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,233] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:35:28,233] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:35:28,233] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:35:28,234] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:35:28,234] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:35:28,234] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:35:28,234] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:35:28,235] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,236] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:35:28,235] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:35:28,236] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:35:28,236] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,237] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,237] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:35:28,240] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,240] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:35:28,241] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:35:28,241] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:35:28,241] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:35:28,242] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:35:28,242] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,243] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:35:28,243] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:35:28,243] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,243] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,244] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:35:28,244] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,245] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,245] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:35:28,245] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:35:28,246] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:35:28,246] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:35:28,247] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): WukongResult: (ID: None/value: 0)
[2021-08-02 11:35:28,247] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:35:28,248] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:35:28,248] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 3
[2021-08-02 11:35:28,249] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,249] DEBUG: result: WukongResult: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-02 11:35:28,249] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,249] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,250] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:35:28,250] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:35:28,250] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:35:28,251] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,251] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:35:28,252] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:35:28,253] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:35:28,255] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:35:28,256] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:35:28,256] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:35:28,257] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,257] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:35:28,257] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,258] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:35:28,259] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:35:28,258] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:35:28,258] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:35:28,258] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,259] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:35:28,259] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:35:28,259] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: WukongResult: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-02 11:35:28,260] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:35:28,261] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:35:28,261] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:35:28,261] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:35:28,262] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:35:28,262] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,263] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:35:28,262] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:35:28,263] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:35:28,263] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,263] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,264] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:35:28,263] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:35:28,264] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:35:28,265] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:35:28,265] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:35:28,265] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,266] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:35:28,267] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:35:28,266] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:35:28,267] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:35:28,267] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:35:28,267] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:35:28,268] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:35:28,269] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:35:28,269] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:35:28,273] DEBUG: 
[2021-08-02 11:35:28,273] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:35:28,273] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:35:28,273] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,274] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value WukongResult: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-02 11:35:28,274] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:35:28,274] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:35:28,275] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:35:28,274] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: WukongResult: (ID: [0,1][0,2][0,2]/value: 0) and after put is WukongResult: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-02 11:35:28,276] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:35:28,276] DEBUG: MemoizationThread: promise by: [0,1][0,2][1,2]
[2021-08-02 11:35:28,276] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,276] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:35:28,277] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:35:28,277] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:35:28,278] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:35:28,278] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:35:28,278] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:35:28,279] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][0,2]
[2021-08-02 11:35:28,279] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): WukongResult: (ID: None/value: 1)
[2021-08-02 11:35:28,280] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:35:28,280] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][0,2]
[2021-08-02 11:35:28,281] DEBUG: result: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,281] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:35:28,281] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,282] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,282] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was stop.
[2021-08-02 11:35:28,283] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,283] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:35:28,283] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:35:28,284] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:35:28,284] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:35:28,284] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:35:28,285] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,285] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,287] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,288] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:35:28,289] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:35:28,289] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,289] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:35:28,289] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:35:28,290] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:35:28,290] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:35:28,291] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:35:28,291] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:35:28,291] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,292] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:35:28,292] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:35:28,292] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:35:28,292] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][1,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001E8BF742100>]>
[2021-08-02 11:35:28,293] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,293] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:35:28,294] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:35:28,294] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:35:28,294] DEBUG: Deliver starting Executor for: [0,1][1,2][0,2] problem.become_executor: False problem.did_input: True
[2021-08-02 11:35:28,295] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-02 11:35:28,296] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,295] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:35:28,296] DEBUG: Deliver end promised Results: 
[2021-08-02 11:35:28,296] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:35:28,296] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,297] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,297] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:35:28,297] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-02 11:35:28,298] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:35:28,299] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-02 11:35:28,298] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:35:28,299] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:35:28,299] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:35:28,300] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:35:28,300] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-02 11:35:28,300] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:35:28,303] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:35:28,300] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:35:28,304] DEBUG: 
[2021-08-02 11:35:28,304] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:35:28,305] DEBUG: [0,1][1,2][0,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:35:28,305] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:35:28,305] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:35:28,305] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,306] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,305] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:35:28,307] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:35:28,307] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:35:28,306] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-08-02 11:35:28,307] DEBUG: WukongResult: (ID: [0,1][0,2][0,2]/value: 0)
[2021-08-02 11:35:28,308] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:35:28,307] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:35:28,308] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-02 11:35:28,309] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:35:28,311] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:35:28,311] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][0,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-02 11:35:28,311] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-02 11:35:28,312] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,312] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][0,2]
[2021-08-02 11:35:28,313] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:35:28,314] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,316] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,314] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:35:28,319] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:35:28,319] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][0,2] was memoized result
[2021-08-02 11:35:28,321] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: WukongResult: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-02 11:35:28,321] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-08-02 11:35:28,322] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001E8BF742D00>]>
[2021-08-02 11:35:28,322] DEBUG: else in template: For Problem: (ID: [0,1][1,2][0,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: WukongResult: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-02 11:35:28,323] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,323] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:35:28,323] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:35:28,323] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:35:28,324] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:35:28,324] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:35:28,325] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,325] WARNING: MemoizationController already initialized.
[2021-08-02 11:35:28,325] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:35:28,325] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-02 11:35:28,325] DEBUG: Deliver end promised Results: 
[2021-08-02 11:35:28,326] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:35:28,326] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:35:28,327] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:35:28,326] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,326] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-02 11:35:28,328] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:35:28,328] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-02 11:35:28,328] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:35:28,328] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:35:28,329] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:35:28,329] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:35:28,330] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:35:28,330] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:35:28,331] DEBUG: 
[2021-08-02 11:35:28,331] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:35:28,331] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:35:28,331] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:35:28,332] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:35:28,331] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:35:28,333] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:35:28,332] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value WukongResult: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-02 11:35:28,333] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-02 11:35:28,335] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-02 11:35:28,336] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:35:28,336] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-08-02 11:35:28,337] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,337] DEBUG: 
[2021-08-02 11:35:28,337] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:35:28,338] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-08-02 11:35:28,337] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:35:28,338] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: WukongResult: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-02 11:35:28,337] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: WukongResult: (ID: [0,1][1,2][0,2]/value: 1) and after put is WukongResult: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-02 11:35:28,339] DEBUG: isLastFanInExecutor: Writing to [1,1] the value WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,339] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: WukongResult: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-02 11:35:28,339] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:35:28,340] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: WukongResult: (ID: [0,1][0,2][1,2]/value: 1) and after put is WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,341] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,341] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:35:28,341] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:35:28,341] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-08-02 11:35:28,342] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:35:28,342] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:35:28,343] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-08-02 11:35:28,343] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,343] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:35:28,344] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-08-02 11:35:28,344] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,344] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-02 11:35:28,345] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,345] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:35:28,346] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:35:28,346] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-02 11:35:28,347] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-08-02 11:35:28,347] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-02 11:35:28,347] DEBUG: 
[2021-08-02 11:35:28,347] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,351] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:35:28,351] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value WukongResult: (ID: [0,1][1,2][1,2]/value: 1)
[2021-08-02 11:35:28,352] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:35:28,353] DEBUG: WukongResult: (ID: [0,1][1,2][0,2]/value: 1)
[2021-08-02 11:35:28,353] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-02 11:35:28,354] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:35:28,355] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-02 11:35:28,356] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: WukongResult: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-02 11:35:28,356] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:35:28,357] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: WukongResult: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-02 11:35:28,357] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:35:28,357] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-08-02 11:35:28,358] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:35:28,358] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: WukongResult: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-02 11:35:28,358] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-02 11:35:28,358] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:35:28,359] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-02 11:35:28,359] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,360] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-02 11:35:28,360] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:35:28,360] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-08-02 11:35:28,361] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:35:28,362] DEBUG: 
[2021-08-02 11:35:28,362] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:35:28,362] DEBUG: isLastFanInExecutor: Writing to [1,1] the value WukongResult: (ID: [0,1][1,2][1,2]/value: 2)
[2021-08-02 11:35:28,363] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:35:28,363] DEBUG: WukongResult: (ID: [0,1][0,2][1,2]/value: 1)
[2021-08-02 11:35:28,363] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-02 11:35:28,364] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:35:28,366] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-02 11:35:28,366] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: WukongResult: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-02 11:35:28,367] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:35:28,367] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: WukongResult: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-02 11:35:28,367] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:35:28,368] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-08-02 11:35:28,368] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:35:28,368] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: WukongResult: (ID: [0,1][1,2][1,2]/value: 3)
[2021-08-02 11:35:28,369] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:35:28,369] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-08-02 11:35:28,369] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,369] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-02 11:35:28,370] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:35:28,370] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:35:28,371] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-08-02 11:35:28,371] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:35:28,371] DEBUG: Disabling memoization thread now...
[2021-08-02 11:35:28,372] DEBUG: MemoizationThread disabled.
[2021-08-02 11:35:28,372] DEBUG: 
[2021-08-02 11:35:28,372] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-08-02 11:35:28,373] DEBUG: 
[2021-08-02 11:35:28,373] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-08-02 11:35:30,376] DEBUG: Verified.
[2021-08-02 11:39:24,192] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:39:24,192] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:39:24,192] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:39:24,192] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:39:24,192] DEBUG: n: 4
[2021-08-02 11:39:24,192] DEBUG: memoize is: True
[2021-08-02 11:39:24,193] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,194] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:39:24,194] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:39:24,194] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:39:24,194] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:39:24,194] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,194] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:39:24,194] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:39:24,195] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:39:24,195] DEBUG: channelMap keySet: . 
[2021-08-02 11:39:24,195] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,195] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:39:24,195] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:39:24,195] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:39:24,196] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:39:24,196] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:39:24,196] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:39:24,196] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:39:24,196] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:39:24,196] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,196] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:39:24,196] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:39:24,196] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:39:24,197] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:39:24,197] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:39:24,197] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:39:24,197] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:39:24,197] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,197] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,197] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:39:24,198] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:39:24,198] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,198] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:39:24,199] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,199] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:39:24,199] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:39:24,200] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,200] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:39:24,200] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,201] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,201] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:39:24,202] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,202] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:39:24,202] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:39:24,202] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:39:24,203] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:39:24,203] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,204] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:39:24,204] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:39:24,204] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,205] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:39:24,205] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,205] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:24,206] DEBUG: channelMap keySet: . . 
[2021-08-02 11:39:24,208] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,209] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,209] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:39:24,210] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:39:24,210] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:24,211] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:39:24,211] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:39:24,211] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:39:24,211] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:39:24,212] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:39:24,212] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,212] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,213] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:39:24,213] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:39:24,214] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:39:24,214] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:39:24,215] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:39:24,215] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:39:24,215] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:39:24,216] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:39:24,216] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,216] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,216] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:39:24,217] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:39:24,218] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:39:24,218] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:39:24,218] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:39:24,218] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:39:24,218] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:39:24,219] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:39:24,219] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:39:24,219] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:39:24,220] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:39:24,220] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:39:24,221] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,221] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:39:24,221] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:39:24,222] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:39:24,222] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,225] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:39:24,225] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:39:24,226] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:39:24,226] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,226] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,227] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:39:24,227] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:39:24,227] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:39:24,228] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:39:24,228] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,228] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,229] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:39:24,229] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,230] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,230] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,230] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,231] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:39:24,231] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:39:24,232] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:39:24,232] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:39:24,232] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,232] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,233] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,233] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,234] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,234] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,235] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:24,235] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,235] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:39:24,236] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:39:24,236] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:39:24,236] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,236] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:39:24,236] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
unning!
[2021-08-02 11:39:24,238] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:39:24,238] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,241] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,241] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:39:24,241] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:24,242] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,242] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:24,243] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:39:24,243] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,243] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:39:24,243] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,244] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,245] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:39:24,245] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:39:24,246] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:39:24,246] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,246] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:39:24,246] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:39:24,246] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,246] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:39:24,247] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:39:24,247] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:24,248] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,247] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:39:24,249] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:24,249] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:39:24,250] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,250] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:24,251] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:39:24,251] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,252] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,252] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:39:24,252] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:39:24,252] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:39:24,253] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:39:24,253] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:39:24,253] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:39:24,254] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,254] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:39:24,257] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:39:24,257] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,258] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:39:24,257] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:39:24,258] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,258] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:39:24,259] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:24,259] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:24,261] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:39:24,261] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:24,261] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,262] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:24,263] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,264] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:39:24,264] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:39:24,265] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:24,266] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:39:24,266] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:39:24,266] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:39:24,267] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:39:24,267] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:39:24,268] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:39:24,268] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,268] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,268] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:39:24,269] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:39:24,269] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:39:24,269] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:39:24,272] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:39:24,272] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:39:24,273] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:39:24,274] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:39:24,274] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,274] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,274] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:39:24,275] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,275] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:39:24,275] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:39:24,276] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:24,276] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:39:24,277] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:39:24,277] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:39:24,277] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:39:24,277] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:39:24,278] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:39:24,278] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:39:24,279] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:39:24,280] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:39:24,280] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,280] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,282] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:39:24,282] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:39:24,284] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:39:24,284] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:39:24,285] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:24,285] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:39:24,286] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:39:24,288] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:39:24,289] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:39:24,289] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,289] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,289] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:39:24,290] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:39:24,290] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:39:24,291] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:39:24,291] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:39:24,291] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:39:24,291] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:39:24,292] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:39:24,292] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:39:24,293] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:24,293] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:39:24,294] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:39:24,295] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,295] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:39:24,296] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:39:24,297] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:39:24,298] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:39:24,299] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:39:24,299] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:39:24,300] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,301] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:39:24,304] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,304] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,305] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:39:24,305] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:39:24,306] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:24,306] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,306] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:24,307] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:39:24,307] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,307] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,308] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:24,308] DEBUG: 	MemoizationController: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,308] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:39:24,309] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,309] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:24,309] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,309] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,311] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,311] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,311] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-08-02 11:39:24,311] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,312] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2][0,2]"...
[2021-08-02 11:39:24,312] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,313] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,313] DEBUG: MemoizationController: pair: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,313] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:24,314] DEBUG: 	MemoizationController: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,314] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:24,314] DEBUG: 	MemoizationController: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,314] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:39:24,315] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:24,315] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:24,316] DEBUG: channelMap keySet: . . . . . . . . 
[2021-08-02 11:39:24,316] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,316] DEBUG: [0,1][1,2][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,316] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:24,317] DEBUG: >> [0,1][1,2][1,2][0,2]: returning memoization label: "0"
[2021-08-02 11:39:24,317] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:24,320] DEBUG: 	Memoization Controller: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,320] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2][0,2] memoized_label: 0
[2021-08-02 11:39:24,321] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][0,2] getting ack.
[2021-08-02 11:39:24,321] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:39:24,321] DEBUG: 	Memoization Controller: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,322] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:39:24,322] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:39:24,322] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 5
[2021-08-02 11:39:24,323] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,323] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:24,323] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2][0,2]", problem_or_result_id = "[0,1][1,2][1,2][0,2]", memoization_label: "0">
[2021-08-02 11:39:24,323] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-08-02 11:39:24,324] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:39:24,324] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2][1,2]"...
[2021-08-02 11:39:24,324] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:24,325] DEBUG: MemoizationController: pair: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,325] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,325] DEBUG: channelMap keySet: . . . . . . . . . 
[2021-08-02 11:39:24,326] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2][0,2]
[2021-08-02 11:39:24,326] DEBUG: [0,1][1,2][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:24,326] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,326] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][0,2] got ack.
[2021-08-02 11:39:24,327] DEBUG: >> [0,1][1,2][1,2][1,2]: returning memoization label: "1"
[2021-08-02 11:39:24,328] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][0,2] ack was None result.
[2021-08-02 11:39:24,328] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2][1,2] memoized_label: 1
[2021-08-02 11:39:24,328] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:39:24,328] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2][1,2]", memoization_label: "1">
[2021-08-02 11:39:24,329] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-08-02 11:39:24,328] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][1,2] getting ack.
[2021-08-02 11:39:24,329] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:39:24,330] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:24,330] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,331] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2][1,2]
[2021-08-02 11:39:24,332] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][1,2] got ack.
[2021-08-02 11:39:24,332] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:24,335] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][1,2] ack was None result.
[2021-08-02 11:39:24,336] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:39:24,337] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-08-02 11:39:26,357] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:28,388] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:30,405] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:32,430] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:34,452] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,229] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:39:45,229] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:39:45,229] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:39:45,229] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:39:45,229] DEBUG: n: 4
[2021-08-02 11:39:45,229] DEBUG: memoize is: True
[2021-08-02 11:39:45,229] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,231] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:39:45,231] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:39:45,231] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:39:45,231] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:39:45,231] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,231] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:39:45,231] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:39:45,232] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:39:45,232] DEBUG: channelMap keySet: . 
[2021-08-02 11:39:45,232] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,232] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:39:45,232] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:39:45,232] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:39:45,232] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:39:45,233] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:39:45,233] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:39:45,233] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:39:45,233] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,233] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:39:45,233] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:39:45,233] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:39:45,233] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:39:45,233] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:39:45,233] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:39:45,233] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:39:45,234] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:39:45,234] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,234] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,234] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:39:45,235] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:39:45,235] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,236] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:39:45,236] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,237] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:39:45,237] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:39:45,237] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,238] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:39:45,238] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,238] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,239] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:39:45,240] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:39:45,240] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,240] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:39:45,240] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:39:45,241] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:39:45,241] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:39:45,242] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:39:45,242] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:39:45,245] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,246] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:39:45,246] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,246] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:45,247] DEBUG: channelMap keySet: . . 
[2021-08-02 11:39:45,247] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,248] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,248] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:39:45,248] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:39:45,248] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:45,249] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:39:45,249] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:39:45,249] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:39:45,249] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:39:45,250] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:39:45,250] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,250] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,251] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:39:45,251] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:39:45,252] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:39:45,252] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:39:45,253] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:39:45,253] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:39:45,254] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:39:45,254] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:39:45,255] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,255] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,255] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:39:45,255] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:39:45,256] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:39:45,256] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:39:45,256] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:39:45,256] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:39:45,257] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:39:45,257] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:39:45,260] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:39:45,261] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:39:45,261] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:39:45,261] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,261] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:39:45,261] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:39:45,262] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:39:45,262] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:39:45,263] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,263] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:39:45,263] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:39:45,264] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,264] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:39:45,265] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,266] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:39:45,265] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:39:45,266] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:39:45,267] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:39:45,267] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,268] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,268] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:39:45,268] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,269] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,269] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,270] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,270] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:39:45,270] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:39:45,271] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:39:45,271] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:39:45,271] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,272] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,272] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:45,272] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,277] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,277] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,277] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:45,278] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:39:45,277] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,278] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:39:45,278] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:39:45,278] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,279] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:39:45,279] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:39:45,280] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:39:45,280] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:39:45,280] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,282] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:45,282] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:39:45,282] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,283] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:45,283] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:45,283] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:39:45,284] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,284] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:39:45,284] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,284] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:45,285] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:39:45,285] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:39:45,285] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:39:45,286] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:39:45,285] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,286] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:39:45,286] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,287] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:39:45,288] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:39:45,288] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:45,289] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:45,289] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:39:45,291] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,292] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:45,293] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:45,293] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:39:45,293] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,293] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:39:45,293] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,293] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:39:45,294] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:39:45,294] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:39:45,294] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:39:45,295] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:39:45,295] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:39:45,296] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:39:45,296] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:39:45,296] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:39:45,297] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:39:45,297] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:39:45,297] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,298] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:39:45,298] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:39:45,299] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:39:45,299] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:39:45,299] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:39:45,299] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,300] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:39:45,300] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:39:45,300] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:39:45,301] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:45,300] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:39:45,302] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:39:45,302] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:39:45,303] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:39:45,303] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 0)
[2021-08-02 11:39:45,303] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:39:45,304] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:39:45,303] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:39:45,304] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:39:45,304] DEBUG: result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:39:45,305] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:39:45,308] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,308] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,308] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:39:45,308] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:39:45,309] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:39:45,309] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:39:45,310] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:39:45,310] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:39:45,311] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:39:45,311] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:39:45,312] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,312] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,312] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:39:45,313] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:39:45,313] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:39:45,313] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:39:45,314] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:39:45,314] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:39:45,315] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:39:45,314] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:39:45,316] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:39:45,316] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:39:45,316] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:39:45,316] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:39:45,317] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:39:45,317] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:39:45,318] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:39:45,318] DEBUG: result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:39:45,318] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,318] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,319] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:39:45,319] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:39:45,320] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:39:45,320] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:39:45,320] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:39:45,321] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:39:45,321] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:39:45,323] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:39:45,324] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:39:45,324] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:39:45,324] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,324] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:39:45,325] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:39:45,325] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:39:45,326] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:39:45,326] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:39:45,326] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:39:45,326] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:39:45,327] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,327] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:45,327] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:39:45,328] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:39:45,328] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:39:45,328] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:39:45,329] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:39:45,329] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:39:45,329] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,330] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:39:45,330] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:39:45,330] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:39:45,330] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:39:45,331] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001529AD66F40>]>
[2021-08-02 11:39:45,330] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:39:45,332] DEBUG: 
[2021-08-02 11:39:45,332] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:39:45,331] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:39:45,333] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:39:45,333] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:39:45,333] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:39:45,333] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:39:45,334] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:39:45,334] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:39:45,334] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:39:45,335] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:39:45,336] WARNING: MemoizationController already initialized.
[2021-08-02 11:39:45,335] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:39:45,336] DEBUG: Deliver end promised Results: 
[2021-08-02 11:39:45,336] DEBUG: result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:39:45,339] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,339] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:39:45,339] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:39:45,340] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:39:45,340] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:39:45,341] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,341] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:39:45,341] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:39:45,342] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0) and after put is WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:39:45,341] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:39:45,342] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:39:45,343] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:39:45,343] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:39:45,343] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:39:45,343] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:39:45,344] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:39:45,345] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:39:45,345] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:39:45,345] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:39:45,346] DEBUG: 
[2021-08-02 11:39:45,346] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:39:45,346] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:39:45,347] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:39:45,347] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:39:45,346] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:39:45,348] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:39:45,349] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1), promised_results = []>
[2021-08-02 11:39:45,348] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:39:45,350] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1) delivered twice.
[2021-08-02 11:39:45,349] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1) and after put is WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:39:45,350] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:39:45,351] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:39:45,353] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:39:45,353] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:39:45,354] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,354] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:39:45,355] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,355] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,355] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:39:45,356] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:39:45,357] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:39:45,357] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:39:45,357] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,786] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:40:28,786] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:40:28,787] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:40:28,787] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:40:28,787] DEBUG: n: 4
[2021-08-02 11:40:28,787] DEBUG: memoize is: True
[2021-08-02 11:40:28,787] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,788] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:40:28,788] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:40:28,788] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:40:28,788] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:40:28,789] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,789] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:40:28,789] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:40:28,789] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:40:28,789] DEBUG: channelMap keySet: . 
[2021-08-02 11:40:28,789] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,790] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:40:28,790] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:40:28,790] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:40:28,790] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:40:28,790] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:40:28,790] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:40:28,790] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:40:28,790] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,790] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:40:28,791] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:40:28,791] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:40:28,791] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:40:28,791] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:40:28,791] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:40:28,791] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:40:28,791] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:40:28,791] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,791] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,791] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:40:28,792] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:40:28,792] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,793] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:40:28,793] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:40:28,794] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:40:28,794] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,795] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:40:28,795] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,795] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,796] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:40:28,796] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,796] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:40:28,797] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:40:28,797] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:40:28,797] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:40:28,798] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:40:28,799] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:40:28,799] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:40:28,799] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,800] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:40:28,800] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:40:28,800] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,801] DEBUG: channelMap keySet: . . 
[2021-08-02 11:40:28,801] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,802] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:40:28,802] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,802] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:40:28,802] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:40:28,803] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:40:28,803] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:40:28,803] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:40:28,804] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:40:28,804] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:40:28,804] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,804] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,805] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:40:28,805] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:40:28,806] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:40:28,806] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:40:28,807] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:40:28,807] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:40:28,807] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:40:28,808] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,808] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,808] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:40:28,808] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:40:28,809] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:40:28,809] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:40:28,809] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:40:28,810] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:40:28,810] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:40:28,813] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:40:28,813] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:40:28,814] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:40:28,814] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:40:28,815] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:40:28,815] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:40:28,815] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,816] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,816] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:40:28,816] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:40:28,817] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:40:28,817] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,817] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:40:28,818] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,818] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:40:28,818] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:40:28,819] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:40:28,819] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:40:28,819] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:40:28,820] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,820] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,822] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:40:28,822] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,822] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,822] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,823] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
NAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:40:28,823] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:40:28,823] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:40:28,824] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,824] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:40:28,824] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:40:28,825] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:40:28,825] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,826] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,826] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,829] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,829] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,830] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:40:28,829] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:40:28,831] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:40:28,831] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,831] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:40:28,831] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,832] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:40:28,832] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:40:28,832] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:40:28,833] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:40:28,833] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:40:28,834] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:40:28,834] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:40:28,834] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,835] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:40:28,835] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,836] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:40:28,836] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:40:28,836] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,837] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:40:28,837] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:40:28,837] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:40:28,837] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,838] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:40:28,838] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,838] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:40:28,838] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:40:28,839] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:40:28,839] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:40:28,840] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:40:28,840] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:40:28,840] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:40:28,841] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,842] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:40:28,844] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:40:28,845] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:40:28,846] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,846] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:40:28,846] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,847] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:40:28,847] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:40:28,848] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:40:28,848] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:40:28,848] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:40:28,849] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,849] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:40:28,849] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:40:28,850] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:40:28,850] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:40:28,850] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:40:28,850] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:40:28,851] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:40:28,851] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:40:28,851] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 0)
[2021-08-02 11:40:28,852] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:40:28,852] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:40:28,852] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:40:28,853] DEBUG: result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:40:28,853] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:40:28,854] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:40:28,854] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:40:28,855] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,855] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:40:28,855] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:40:28,856] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:40:28,856] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:40:28,856] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:40:28,856] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:40:28,857] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:40:28,859] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:40:28,860] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:40:28,860] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,860] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,861] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:40:28,861] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:40:28,862] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:40:28,862] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:40:28,862] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:40:28,863] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:40:28,863] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:40:28,863] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:40:28,864] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,864] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,864] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:40:28,864] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:40:28,864] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:40:28,865] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:40:28,866] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:40:28,865] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:40:28,866] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:40:28,866] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:40:28,867] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:40:28,867] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:40:28,868] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,867] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:40:28,868] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:40:28,868] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:40:28,868] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:40:28,868] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:40:28,869] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:40:28,869] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:40:28,870] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:40:28,870] DEBUG: result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:40:28,871] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:40:28,871] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,872] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:40:28,872] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:40:28,872] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:40:28,873] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:40:28,876] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:40:28,877] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:40:28,877] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:40:28,877] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:40:28,878] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,878] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:40:28,878] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,878] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:40:28,879] DEBUG: 
[2021-08-02 11:40:28,879] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:40:28,880] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:40:28,880] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:40:28,881] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:40:28,881] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:40:28,881] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:40:28,882] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:40:28,882] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0) and after put is WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:40:28,882] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:40:28,883] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:40:28,884] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:40:28,884] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:40:28,884] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,884] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:40:28,885] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:40:28,885] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:40:28,885] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:40:28,886] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:40:28,886] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000023BB0BBA8B0>]>
[2021-08-02 11:40:28,886] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:40:28,887] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:40:28,887] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:40:28,887] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:40:28,888] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:40:28,888] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:40:28,888] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:40:28,889] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:40:28,889] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:40:28,892] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:40:28,893] WARNING: MemoizationController already initialized.
[2021-08-02 11:40:28,892] DEBUG: result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:40:28,893] DEBUG: Deliver end promised Results: 
[2021-08-02 11:40:28,893] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:40:28,893] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,894] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,894] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:40:28,895] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:40:28,895] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:40:28,895] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:40:28,896] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:40:28,895] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:40:28,896] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:40:28,896] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:40:28,897] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:40:28,898] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:40:28,898] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:40:28,898] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:40:28,898] DEBUG: 
[2021-08-02 11:40:28,899] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:40:28,899] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:40:28,900] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:40:28,900] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:40:28,900] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:40:28,900] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1) and after put is WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:40:28,901] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,901] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:40:28,902] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:40:28,902] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:40:28,902] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:40:28,903] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:40:28,903] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:40:28,903] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:40:28,904] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:40:28,905] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:40:28,907] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:40:28,907] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:40:28,907] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:40:28,908] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1), promised_results = []>
[2021-08-02 11:40:28,908] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:40:28,909] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1) delivered twice.
[2021-08-02 11:40:28,909] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:40:28,909] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:40:28,910] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,910] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:40:28,910] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,911] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,911] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:40:28,912] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:40:28,912] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:40:28,913] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:40:28,913] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,463] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:41:10,463] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:41:10,463] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:41:10,463] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:41:10,463] DEBUG: n: 4
[2021-08-02 11:41:10,463] DEBUG: memoize is: True
[2021-08-02 11:41:10,463] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,464] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:41:10,465] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:41:10,465] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:41:10,465] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:41:10,465] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:41:10,465] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,466] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:41:10,466] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:41:10,467] DEBUG: channelMap keySet: . 
[2021-08-02 11:41:10,467] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,468] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:41:10,468] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:41:10,469] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:41:10,469] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:41:10,469] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:41:10,469] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:41:10,470] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:41:10,470] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,470] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:41:10,471] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:41:10,472] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:41:10,472] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:41:10,472] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:41:10,473] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:41:10,473] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:41:10,473] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:41:10,474] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,474] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,475] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:41:10,475] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:41:10,476] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,476] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:41:10,476] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,477] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:41:10,477] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:41:10,478] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,478] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:41:10,478] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,479] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,479] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:41:10,480] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,480] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:41:10,480] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:41:10,481] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:41:10,481] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:41:10,482] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:41:10,482] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:41:10,482] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:41:10,482] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,483] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:41:10,483] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,484] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:41:10,484] DEBUG: channelMap keySet: . . 
[2021-08-02 11:41:10,484] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,485] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,485] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:41:10,485] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:41:10,485] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:41:10,486] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:41:10,486] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:41:10,486] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:41:10,490] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:41:10,490] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:41:10,490] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,490] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,491] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:41:10,491] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:41:10,492] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:41:10,492] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:41:10,492] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:41:10,493] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:41:10,493] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:41:10,493] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:41:10,494] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,494] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,494] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:41:10,494] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:41:10,495] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:41:10,495] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:41:10,495] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:41:10,496] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:41:10,496] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:41:10,496] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:41:10,496] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:41:10,497] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:41:10,497] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:41:10,498] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:41:10,498] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:41:10,499] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,499] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,499] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:41:10,499] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:41:10,500] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:41:10,500] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,500] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:41:10,500] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,501] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:41:10,501] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:41:10,502] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:41:10,503] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:41:10,502] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:41:10,506] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,506] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,506] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,507] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,507] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:41:10,508] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:41:10,507] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,508] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,508] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:41:10,509] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,509] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:41:10,510] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,510] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:41:10,510] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:41:10,511] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,511] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:41:10,511] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,512] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,512] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,512] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:41:10,513] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:41:10,514] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:41:10,514] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,514] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:41:10,514] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,515] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:41:10,515] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:41:10,516] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:41:10,516] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:41:10,516] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,517] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:41:10,517] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:41:10,517] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:41:10,518] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:41:10,518] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,518] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:41:10,521] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,521] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:41:10,522] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:41:10,522] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:41:10,522] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:41:10,523] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:41:10,522] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,524] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:41:10,523] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:41:10,523] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,526] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:41:10,524] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:41:10,526] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,526] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:41:10,526] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:41:10,527] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:41:10,527] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:41:10,527] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:41:10,528] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:41:10,528] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,529] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,529] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:41:10,530] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:41:10,530] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:41:10,530] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:41:10,530] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:41:10,531] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:41:10,531] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:41:10,531] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,532] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:41:10,532] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:41:10,533] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:41:10,533] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:41:10,534] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:41:10,534] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:41:10,534] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 0)
[2021-08-02 11:41:10,535] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:41:10,534] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:41:10,538] DEBUG: result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:41:10,538] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:41:10,538] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:41:10,539] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:41:10,539] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:41:10,540] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:41:10,540] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,540] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:41:10,540] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:41:10,541] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:41:10,541] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:41:10,542] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:41:10,542] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:41:10,542] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:41:10,543] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:41:10,543] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:41:10,543] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,544] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,544] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:41:10,544] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:41:10,545] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:41:10,545] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:41:10,546] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:41:10,546] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:41:10,547] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:41:10,547] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:41:10,547] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,547] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,548] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:41:10,548] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:41:10,549] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:41:10,548] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:41:10,549] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:41:10,549] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:41:10,549] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
abel: 0 delivered result: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:41:10,551] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:41:10,551] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:41:10,551] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:41:10,554] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,554] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:41:10,555] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:41:10,555] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:41:10,555] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:41:10,555] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:41:10,556] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:41:10,556] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:41:10,557] DEBUG: result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:41:10,557] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:41:10,558] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:41:10,557] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,559] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:41:10,559] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:41:10,560] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:41:10,559] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:41:10,560] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:41:10,560] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:41:10,561] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,561] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:41:10,561] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,561] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:41:10,561] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:41:10,562] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:41:10,562] DEBUG: 
[2021-08-02 11:41:10,563] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:41:10,563] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:41:10,563] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:41:10,564] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:41:10,564] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:41:10,564] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:41:10,565] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][0,2][0,2] /value: 0) and after put is WukongResult:  (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:41:10,566] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:41:10,566] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:41:10,566] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:41:10,566] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:41:10,567] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,567] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:41:10,569] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:41:10,570] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:41:10,570] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:41:10,571] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:41:10,571] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001AA40D7A730>]>
[2021-08-02 11:41:10,571] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:41:10,572] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:41:10,572] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:41:10,573] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:41:10,573] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:41:10,573] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:41:10,573] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): WukongResult:  (ID: None /value: 1)
[2021-08-02 11:41:10,574] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:41:10,574] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:41:10,575] WARNING: MemoizationController already initialized.
[2021-08-02 11:41:10,575] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:41:10,575] DEBUG: Deliver end promised Results: 
[2021-08-02 11:41:10,576] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:41:10,575] DEBUG: result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:41:10,576] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,577] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:41:10,576] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,577] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:41:10,577] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:41:10,578] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:41:10,578] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:41:10,578] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:41:10,579] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:41:10,579] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:41:10,580] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:41:10,580] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:41:10,581] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:41:10,584] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:41:10,584] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:41:10,584] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:41:10,585] DEBUG: 
[2021-08-02 11:41:10,586] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:41:10,586] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,586] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:41:10,587] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:41:10,586] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:41:10,587] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:41:10,587] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:41:10,587] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1) and after put is WukongResult:  (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:41:10,588] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:41:10,589] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:41:10,589] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:41:10,589] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:41:10,589] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:41:10,590] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:41:10,590] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:41:10,590] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:41:10,591] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: WukongResult:  (ID: [0,1][1,2][0,2] /value: 1), promised_results = []>
[2021-08-02 11:41:10,591] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:41:10,592] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: WukongResult:  (ID: [0,1][0,2][1,2] /value: 1) delivered twice.
[2021-08-02 11:41:10,593] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:41:10,593] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:41:10,593] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:41:10,594] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,594] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:41:10,594] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,595] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,595] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:41:10,596] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:41:10,596] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:41:10,596] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:41:10,597] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,413] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:43:04,413] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:43:04,413] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:43:04,413] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:43:04,413] DEBUG: n: 4
[2021-08-02 11:43:04,413] DEBUG: memoize is: True
[2021-08-02 11:43:04,414] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,415] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:43:04,415] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:43:04,415] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:43:04,415] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:43:04,415] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,415] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:43:04,415] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:43:04,416] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:43:04,416] DEBUG: channelMap keySet: . 
[2021-08-02 11:43:04,416] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,416] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:43:04,416] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:43:04,416] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:43:04,417] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:43:04,417] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:43:04,417] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:43:04,417] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:43:04,417] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:43:04,417] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,417] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:43:04,417] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:43:04,417] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:43:04,417] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:43:04,418] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:43:04,418] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:43:04,418] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:43:04,418] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,418] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,418] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:43:04,419] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:43:04,419] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,419] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:43:04,420] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,420] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:43:04,420] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:43:04,421] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,421] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,421] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:43:04,422] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:43:04,422] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,423] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:43:04,423] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,423] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:43:04,423] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:43:04,424] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:43:04,425] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:43:04,425] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:43:04,426] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,426] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:43:04,426] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,427] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:43:04,427] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:43:04,427] DEBUG: channelMap keySet: . . 
[2021-08-02 11:43:04,428] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,428] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,428] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:43:04,428] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:43:04,429] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:43:04,429] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:43:04,430] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:43:04,430] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:43:04,431] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:43:04,431] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:43:04,431] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,431] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,432] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:43:04,432] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:43:04,433] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:43:04,433] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:43:04,436] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:43:04,436] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:43:04,436] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:43:04,437] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:43:04,437] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,437] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,438] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:43:04,439] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:43:04,439] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:43:04,439] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:43:04,439] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:43:04,440] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:43:04,440] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:43:04,441] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:43:04,441] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:43:04,441] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:43:04,442] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:43:04,442] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,442] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:43:04,443] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:43:04,443] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:43:04,443] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,444] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:43:04,444] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:43:04,445] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:43:04,445] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,445] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,446] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:43:04,446] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:43:04,446] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:43:04,447] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:43:04,447] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,448] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,448] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:43:04,448] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,448] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,451] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,451] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,452] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:43:04,452] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:43:04,453] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:43:04,453] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:43:04,454] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,454] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,455] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,455] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,456] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:43:04,456] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,456] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:43:04,457] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,457] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:43:04,458] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:43:04,458] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:43:04,458] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,458] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:43:04,458] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:43:04,459] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:43:04,460] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,460] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:43:04,460] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:43:04,461] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:43:04,461] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:43:04,461] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:43:04,462] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,462] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:43:04,462] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,462] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:43:04,463] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,463] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:43:04,464] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:43:04,464] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:43:04,464] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:43:04,464] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:43:04,464] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,467] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:43:04,468] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:43:04,465] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,468] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:43:04,469] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:43:04,470] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:43:04,470] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:43:04,470] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:43:04,471] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:43:04,471] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,471] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:43:04,472] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:43:04,472] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,472] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,473] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:43:04,473] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:43:04,473] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:43:04,474] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:43:04,474] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:43:04,474] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:43:04,475] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,475] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:43:04,476] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:43:04,476] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:43:04,477] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:43:04,477] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:43:04,477] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:43:04,477] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:43:04,478] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:43:04,478] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:43:04,478] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x000002241687A850> (ID: None /value: 0)
[2021-08-02 11:43:04,479] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:43:04,479] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:43:04,479] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:43:04,479] DEBUG: result: <fibonnaci_program.ResultType object at 0x000002241687A850> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:43:04,480] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:43:04,480] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:43:04,481] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,483] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:43:04,483] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:43:04,484] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:43:04,484] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:43:04,485] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:43:04,485] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:43:04,485] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:43:04,486] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:43:04,486] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:43:04,486] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,486] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,487] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
e_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:43:04,488] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:43:04,488] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:43:04,488] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:43:04,489] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:43:04,489] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:43:04,489] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:43:04,490] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,490] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,490] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:43:04,490] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:43:04,491] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:43:04,490] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:43:04,491] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:43:04,492] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:43:04,492] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:43:04,492] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: <fibonnaci_program.ResultType object at 0x000002241687A190> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:43:04,493] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:43:04,493] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:43:04,493] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:43:04,494] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x0000022416871EB0> (ID: None /value: 1)
[2021-08-02 11:43:04,494] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:43:04,494] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,495] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:43:04,495] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:43:04,495] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:43:04,495] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:43:04,499] DEBUG: result: <fibonnaci_program.ResultType object at 0x0000022416871EB0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:43:04,499] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,499] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:43:04,500] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:43:04,500] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:43:04,500] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:43:04,501] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:43:04,501] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:43:04,501] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:43:04,501] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:43:04,502] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:43:04,502] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:43:04,503] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:43:04,503] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,503] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,503] DEBUG: 
[2021-08-02 11:43:04,504] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:43:04,504] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:43:04,504] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:43:04,504] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:43:04,505] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:43:04,505] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value <fibonnaci_program.ResultType object at 0x000002241687A820> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:43:04,506] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:43:04,506] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:43:04,506] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x000002241687A850> (ID: [0,1][0,2][0,2] /value: 0) and after put is <fibonnaci_program.ResultType object at 0x000002241687A850> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:43:04,506] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:43:04,507] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:43:04,508] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:43:04,508] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,508] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:43:04,508] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:43:04,509] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:43:04,509] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:43:04,509] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:43:04,510] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:43:04,511] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000022416871D00>]>
[2021-08-02 11:43:04,511] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:43:04,514] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: <fibonnaci_program.ResultType object at 0x00000224168A9460> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:43:04,514] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:43:04,515] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:43:04,515] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:43:04,515] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x00000224168A96A0> (ID: None /value: 1)
[2021-08-02 11:43:04,515] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:43:04,516] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:43:04,516] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:43:04,517] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:43:04,517] WARNING: MemoizationController already initialized.
[2021-08-02 11:43:04,517] DEBUG: result: <fibonnaci_program.ResultType object at 0x00000224168A96A0> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:43:04,517] DEBUG: Deliver end promised Results: 
[2021-08-02 11:43:04,518] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,518] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:43:04,519] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,519] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:43:04,519] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:43:04,520] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:43:04,520] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:43:04,520] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:43:04,520] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:43:04,521] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:43:04,521] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:43:04,522] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:43:04,522] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:43:04,522] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:43:04,523] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:43:04,523] DEBUG: 
[2021-08-02 11:43:04,524] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:43:04,524] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:43:04,524] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:43:04,524] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value <fibonnaci_program.ResultType object at 0x0000022416871FD0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:43:04,524] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:43:04,525] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x0000022416871EB0> (ID: [0,1][1,2][0,2] /value: 1) and after put is <fibonnaci_program.ResultType object at 0x0000022416871EB0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:43:04,526] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,526] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:43:04,526] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:43:04,527] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:43:04,527] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:43:04,529] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:43:04,530] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:43:04,530] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:43:04,530] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:43:04,530] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:43:04,531] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:43:04,531] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:43:04,532] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:43:04,532] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: <fibonnaci_program.ResultType object at 0x000002241687A1C0> (ID: [0,1][1,2][0,2] /value: 1), promised_results = []>
[2021-08-02 11:43:04,532] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:43:04,533] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: <fibonnaci_program.ResultType object at 0x00000224168A80D0> (ID: [0,1][0,2][1,2] /value: 1) delivered twice.
[2021-08-02 11:43:04,533] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:43:04,534] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:43:04,534] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,535] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:43:04,535] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,536] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,536] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:43:04,537] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:43:04,537] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:43:04,537] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:43:04,538] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,035] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:45:10,036] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:45:10,037] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:45:10,037] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:45:10,037] DEBUG: n: 4
[2021-08-02 11:45:10,038] DEBUG: memoize is: True
[2021-08-02 11:45:10,038] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,040] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:45:10,040] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:45:10,041] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:45:10,041] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:45:10,042] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:45:10,041] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,043] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:45:10,043] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:45:10,043] DEBUG: channelMap keySet: . 
[2021-08-02 11:45:10,044] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,044] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:45:10,045] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:45:10,045] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:45:10,045] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:45:10,046] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:45:10,046] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:45:10,046] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:45:10,047] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:45:10,047] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,048] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:45:10,048] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:45:10,049] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:45:10,049] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:45:10,050] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:45:10,050] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:45:10,050] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:45:10,050] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,051] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,051] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:45:10,052] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:45:10,052] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,052] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:45:10,053] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,053] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,054] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:45:10,054] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,054] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,055] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:45:10,055] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,055] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:45:10,058] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,058] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:45:10,059] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:45:10,059] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:45:10,060] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:45:10,060] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:45:10,061] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:45:10,061] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:45:10,061] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,062] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,062] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:45:10,062] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:45:10,062] DEBUG: channelMap keySet: . . 
[2021-08-02 11:45:10,063] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,063] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,063] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:45:10,064] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,064] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:45:10,065] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:45:10,065] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:45:10,066] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:45:10,066] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:45:10,066] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:45:10,066] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,067] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,067] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:45:10,067] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:45:10,068] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:45:10,068] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:45:10,069] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:45:10,069] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:45:10,069] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:45:10,070] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:45:10,070] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,070] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,071] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:45:10,070] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:45:10,073] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:45:10,073] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:45:10,074] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:45:10,074] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:45:10,075] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:45:10,075] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:45:10,076] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:45:10,076] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:45:10,076] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:45:10,076] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:45:10,077] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,077] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:45:10,077] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:45:10,078] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:45:10,078] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,078] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:45:10,079] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:45:10,079] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:45:10,080] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,080] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,080] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:45:10,080] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:45:10,081] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:45:10,081] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:45:10,082] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,083] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,083] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:45:10,083] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,084] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,084] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,085] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,085] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,086] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:45:10,086] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:45:10,086] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,087] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:45:10,090] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,090] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,090] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,090] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:45:10,091] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,091] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:45:10,092] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,092] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:45:10,093] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,093] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:45:10,093] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,093] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:45:10,093] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:45:10,094] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:45:10,095] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:45:10,095] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,095] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:45:10,095] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:45:10,096] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:45:10,096] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,097] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:45:10,097] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:45:10,098] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,098] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:45:10,098] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,098] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:45:10,099] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:45:10,099] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:45:10,099] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:45:10,099] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,100] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:45:10,100] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:45:10,100] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,101] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:45:10,101] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:45:10,102] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:45:10,102] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:45:10,103] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:45:10,103] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:45:10,105] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:45:10,106] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,107] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:45:10,107] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:45:10,108] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,108] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,108] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:45:10,109] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:45:10,109] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:45:10,109] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:45:10,110] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:45:10,110] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:45:10,110] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:45:10,110] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,111] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:45:10,111] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:45:10,112] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:45:10,113] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,113] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:45:10,113] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:45:10,114] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x000001EEC9D05D90> (ID: None /value: 0)
[2021-08-02 11:45:10,114] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:45:10,114] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:45:10,115] DEBUG: result: <fibonnaci_program.ResultType object at 0x000001EEC9D05D90> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:45:10,114] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:45:10,116] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:45:10,116] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:45:10,116] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:45:10,116] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,117] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,117] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:45:10,118] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,120] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:45:10,120] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:45:10,121] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:45:10,121] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:45:10,121] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:45:10,122] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:45:10,122] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,122] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,122] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:45:10,123] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:45:10,124] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:45:10,124] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:45:10,124] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:45:10,124] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:45:10,125] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,125] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:45:10,125] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:45:10,125] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:45:10,125] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:45:10,126] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:45:10,126] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:45:10,126] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:45:10,126] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:45:10,127] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x000001EEC9D050D0> (ID: None /value: 1)
[2021-08-02 11:45:10,128] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,128] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:45:10,128] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:45:10,129] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:45:10,129] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:45:10,129] DEBUG: result: <fibonnaci_program.ResultType object at 0x000001EEC9D050D0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:45:10,130] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:45:10,129] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:45:10,130] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,131] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:45:10,131] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:45:10,132] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:45:10,132] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,132] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,132] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:45:10,133] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:45:10,133] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:45:10,133] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:45:10,136] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:45:10,136] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:45:10,136] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:45:10,137] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:45:10,137] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:45:10,138] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:45:10,138] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,138] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,139] DEBUG: 
[2021-08-02 11:45:10,139] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:45:10,140] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:45:10,139] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:45:10,139] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:45:10,141] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value <fibonnaci_program.ResultType object at 0x000001EEC9D05DC0> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:45:10,141] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:45:10,142] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:45:10,142] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x000001EEC9D05D90> (ID: [0,1][0,2][0,2] /value: 0) and after put is <fibonnaci_program.ResultType object at 0x000001EEC9D05D90> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:45:10,143] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:45:10,144] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:45:10,144] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:45:10,144] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:45:10,144] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:45:10,145] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,145] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:45:10,145] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:45:10,146] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:45:10,146] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:45:10,146] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:45:10,147] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:45:10,147] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,148] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:45:10,148] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:45:10,148] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-08-02 11:45:10,149] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:45:10,149] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-08-02 11:45:10,149] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:45:10,150] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,150] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:45:10,150] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:45:10,153] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,153] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:45:10,153] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:45:10,154] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,154] DEBUG: 
[2021-08-02 11:45:10,154] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-08-02 11:45:10,155] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:45:10,155] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:45:10,156] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,156] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:45:10,157] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value <fibonnaci_program.ResultType object at 0x000001EEC9CF6400> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:45:10,157] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 1, < WukongProblem < memoization_label_on_restart = None> >) Memoized result: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,157] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:45:10,158] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x000001EEC9D050D0> (ID: [0,1][1,2][0,2] /value: 1) and after put is <fibonnaci_program.ResultType object at 0x000001EEC9D050D0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:45:10,159] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:45:10,159] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:45:10,159] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,160] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:45:10,160] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-02 11:45:10,161] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:45:10,161] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:45:10,161] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:45:10,161] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,162] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:45:10,162] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-02 11:45:10,162] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:45:10,163] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-02 11:45:10,163] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,163] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:45:10,164] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:45:10,164] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,164] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:45:10,165] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-02 11:45:10,165] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,165] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:45:10,166] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:45:10,168] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:45:10,169] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:45:10,169] DEBUG: 
[2021-08-02 11:45:10,169] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:45:10,170] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:45:10,170] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:45:10,170] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-08-02 11:45:10,171] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:45:10,171] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value <fibonnaci_program.ResultType object at 0x000001EEC9D06A30> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,171] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,172] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,172] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:45:10,173] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:45:10,173] DEBUG: <fibonnaci_program.ResultType object at 0x000001EEC9D07DF0> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:45:10,174] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-02 11:45:10,174] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,175] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:45:10,175] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,176] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:45:10,176] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-02 11:45:10,177] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,177] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:45:10,177] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:45:10,178] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:45:10,179] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,179] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,179] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:45:10,179] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:45:10,180] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-08-02 11:45:10,180] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001EEC9CF6F70>]>
[2021-08-02 11:45:10,181] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: <fibonnaci_program.ResultType object at 0x000001EEC9D075B0> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,181] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:45:10,181] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-02 11:45:10,182] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:45:10,182] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-02 11:45:10,185] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-02 11:45:10,185] WARNING: MemoizationController already initialized.
[2021-08-02 11:45:10,185] DEBUG: Deliver end promised Results: 
[2021-08-02 11:45:10,186] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:45:10,186] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:45:10,186] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,187] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-02 11:45:10,187] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:45:10,187] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:45:10,188] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2][0,2]
[2021-08-02 11:45:10,188] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:45:10,188] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:45:10,189] DEBUG: 
[2021-08-02 11:45:10,189] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:45:10,189] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:45:10,190] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:45:10,190] DEBUG: isLastFanInExecutor: Writing to [1,1] the value <fibonnaci_program.ResultType object at 0x000001EEC9D07DF0> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,190] DEBUG: 	MemoizationController: [0,1][1,2][1,2][0,2]
[2021-08-02 11:45:10,191] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1) and after put is <fibonnaci_program.ResultType object at 0x000001EEC9D05F40> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:45:10,191] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:45:10,192] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:45:10,192] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:45:10,192] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,193] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:45:10,193] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:45:10,194] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:45:10,194] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:45:10,194] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:45:10,194] DEBUG: 	Memoization Controller: [0,1][1,2][1,2][0,2]
[2021-08-02 11:45:10,195] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:45:10,195] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:45:10,196] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:45:10,196] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 2
[2021-08-02 11:45:10,197] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:10,199] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:45:10,200] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:45:10,201] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:45:10,202] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-02 11:45:10,202] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-08-02 11:45:10,203] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:12,233] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:14,263] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:16,286] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:18,310] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:20,335] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:22,366] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:45:24,387] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,954] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:46:56,954] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:46:56,954] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:46:56,954] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:46:56,954] DEBUG: n: 4
[2021-08-02 11:46:56,954] DEBUG: memoize is: True
[2021-08-02 11:46:56,954] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,956] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:46:56,956] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:46:56,956] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:46:56,956] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:46:56,956] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,956] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:46:56,956] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:46:56,957] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:46:56,957] DEBUG: channelMap keySet: . 
[2021-08-02 11:46:56,957] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:56,957] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:46:56,957] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:46:56,957] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:46:56,958] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:46:56,958] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:46:56,958] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:46:56,958] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:46:56,958] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,958] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:46:56,958] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:46:56,958] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:46:56,958] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:46:56,959] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:46:56,959] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:46:56,959] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:46:56,959] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:46:56,959] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,959] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,959] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:46:56,960] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:46:56,960] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,961] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:46:56,961] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,962] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:46:56,962] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:46:56,963] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:56,963] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:46:56,964] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:56,964] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,964] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:46:56,965] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:56,965] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:46:56,965] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:46:56,966] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:46:56,966] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:46:56,966] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:46:56,967] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:46:56,967] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:46:56,967] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:56,968] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:46:56,969] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:46:56,969] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:56,969] DEBUG: channelMap keySet: . . 
[2021-08-02 11:46:56,970] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,970] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:56,970] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:46:56,971] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:46:56,971] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:46:56,971] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:46:56,972] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:46:56,972] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:46:56,972] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:46:56,973] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:46:56,974] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,974] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:56,974] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:46:56,974] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:46:56,975] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:46:56,975] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:46:56,975] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:46:56,976] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:46:56,977] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:46:56,977] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:46:56,977] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:56,977] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,978] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:46:56,977] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:46:56,981] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:46:56,981] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:46:56,981] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:46:56,981] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:46:56,982] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:46:56,982] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:46:56,983] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:46:56,983] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:46:56,983] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:46:56,984] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:56,984] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:46:56,984] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:46:56,985] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:46:56,985] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:46:56,986] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:46:56,986] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,986] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:46:56,987] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:46:56,987] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:46:56,988] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:46:56,988] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,988] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:46:56,989] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,989] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,989] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:46:56,989] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,990] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,990] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:46:56,992] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:46:56,992] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,992] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:46:56,992] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,993] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,994] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:46:56,994] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:56,997] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:46:56,997] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,997] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:56,998] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:56,998] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:46:56,999] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:46:56,999] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:56,999] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,000] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:46:56,999] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:46:57,001] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:46:57,001] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:57,001] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:46:57,001] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:57,001] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:46:57,002] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:46:57,002] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:57,003] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:46:57,003] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:46:57,004] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:46:57,004] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:46:57,005] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:46:57,005] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:46:57,005] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,006] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:46:57,006] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:46:57,006] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:57,007] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:46:57,007] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:46:57,007] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:46:57,007] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:57,008] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:46:57,009] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:46:57,009] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:46:57,007] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:57,010] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:46:57,013] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:46:57,013] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:46:57,014] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:57,014] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:46:57,014] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:46:57,014] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:46:57,015] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:46:57,016] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:46:57,016] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,016] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:57,016] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:46:57,017] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:46:57,017] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:46:57,018] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:46:57,018] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:46:57,019] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:46:57,019] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:46:57,019] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,020] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:46:57,020] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:46:57,020] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:46:57,021] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:46:57,020] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:46:57,021] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x0000025F3784B850> (ID: None /value: 0)
[2021-08-02 11:46:57,021] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:46:57,022] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:46:57,022] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:46:57,022] DEBUG: result: <fibonnaci_program.ResultType object at 0x0000025F3784B850> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:46:57,023] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:46:57,023] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:46:57,024] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:46:57,024] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:46:57,025] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:46:57,026] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,028] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:46:57,028] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:46:57,029] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:46:57,029] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:46:57,029] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:46:57,030] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:46:57,030] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:46:57,030] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:46:57,031] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:46:57,031] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,031] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:57,032] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:46:57,031] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:46:57,033] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:46:57,033] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:46:57,034] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:46:57,034] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:46:57,035] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:46:57,035] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:46:57,035] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,035] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:57,035] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:46:57,036] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:46:57,036] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:46:57,037] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:46:57,037] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:46:57,037] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:46:57,037] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:46:57,038] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: <fibonnaci_program.ResultType object at 0x0000025F37841DC0> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:46:57,039] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:46:57,039] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:46:57,039] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:46:57,039] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x0000025F37841FA0> (ID: None /value: 1)
[2021-08-02 11:46:57,040] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,040] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:46:57,040] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:46:57,041] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:46:57,040] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:46:57,041] DEBUG: result: <fibonnaci_program.ResultType object at 0x0000025F37841FA0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:46:57,042] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:46:57,045] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:46:57,046] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:57,046] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:46:57,046] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:46:57,047] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:46:57,047] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:46:57,047] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:46:57,047] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:46:57,048] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:46:57,048] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:46:57,049] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:46:57,049] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:46:57,049] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,049] DEBUG: 
[2021-08-02 11:46:57,050] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:57,050] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:46:57,051] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:46:57,050] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:46:57,051] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value <fibonnaci_program.ResultType object at 0x0000025F3784B820> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:46:57,051] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:46:57,051] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:46:57,052] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x0000025F3784B850> (ID: [0,1][0,2][0,2] /value: 0) and after put is <fibonnaci_program.ResultType object at 0x0000025F3784B850> (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:46:57,052] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:46:57,053] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:46:57,053] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:46:57,053] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:46:57,054] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:46:57,054] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:46:57,055] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,055] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:46:57,055] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:46:57,055] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:46:57,056] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-08-02 11:46:57,056] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:46:57,057] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000025F3784B190>]>
[2021-08-02 11:46:57,057] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-08-02 11:46:57,060] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: <fibonnaci_program.ResultType object at 0x0000025F37878550> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:46:57,061] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:46:57,061] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:46:57,061] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:46:57,062] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:46:57,061] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): <fibonnaci_program.ResultType object at 0x0000025F37878790> (ID: None /value: 1)
[2021-08-02 11:46:57,062] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:46:57,063] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:46:57,063] WARNING: MemoizationController already initialized.
[2021-08-02 11:46:57,063] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:46:57,063] DEBUG: result: <fibonnaci_program.ResultType object at 0x0000025F37878790> (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:46:57,063] DEBUG: Deliver end promised Results: 
[2021-08-02 11:46:57,064] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:46:57,064] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:57,065] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,065] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:46:57,066] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:46:57,066] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:46:57,066] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:46:57,067] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:46:57,066] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:46:57,067] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:46:57,068] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:46:57,068] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:46:57,068] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:46:57,069] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:46:57,069] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:46:57,069] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:46:57,070] DEBUG: 
[2021-08-02 11:46:57,070] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:46:57,070] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:46:57,070] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:46:57,071] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value <fibonnaci_program.ResultType object at 0x0000025F37841F40> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:46:57,072] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: <fibonnaci_program.ResultType object at 0x0000025F37841FA0> (ID: [0,1][1,2][0,2] /value: 1) and after put is <fibonnaci_program.ResultType object at 0x0000025F37841FA0> (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:46:57,072] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,072] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:46:57,073] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:46:57,073] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:46:57,076] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:46:57,076] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:46:57,077] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:46:57,077] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:46:57,078] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:46:57,078] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:46:57,079] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was None result.
[2021-08-02 11:46:57,079] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:46:57,079] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: None
[2021-08-02 11:46:57,079] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: <fibonnaci_program.ResultType object at 0x0000025F37841DF0> (ID: [0,1][1,2][0,2] /value: 1), promised_results = []>
[2021-08-02 11:46:57,080] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:46:57,080] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: <fibonnaci_program.ResultType object at 0x0000025F378791C0> (ID: [0,1][0,2][1,2] /value: 1) delivered twice.
[2021-08-02 11:46:57,081] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:46:57,081] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:46:57,082] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:57,082] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:46:57,082] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:57,083] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:57,083] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:46:57,084] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:46:57,084] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:46:57,084] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:46:57,085] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,631] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:50:04,631] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:50:04,631] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:50:04,632] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:50:04,632] DEBUG: n: 4
[2021-08-02 11:50:04,632] DEBUG: memoize is: True
[2021-08-02 11:50:04,632] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,633] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:50:04,633] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:50:04,633] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:50:04,633] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:50:04,633] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,634] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:50:04,634] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-08-02 11:50:04,634] DEBUG: MemoizationController: pair: [0,1]
[2021-08-02 11:50:04,634] DEBUG: channelMap keySet: . 
[2021-08-02 11:50:04,635] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,635] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:50:04,635] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-08-02 11:50:04,635] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-08-02 11:50:04,635] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-08-02 11:50:04,635] DEBUG: >> msg.memoization_label: 4
[2021-08-02 11:50:04,635] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-08-02 11:50:04,635] DEBUG: MemoizationThread: promise by: [0,1]
[2021-08-02 11:50:04,635] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,636] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-08-02 11:50:04,636] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-08-02 11:50:04,636] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-08-02 11:50:04,636] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:50:04,636] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:50:04,636] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:50:04,636] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:50:04,636] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:50:04,636] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,636] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,636] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:50:04,637] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:50:04,638] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,638] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:50:04,638] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,639] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,640] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-08-02 11:50:04,640] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,640] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:50:04,641] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,641] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,641] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:50:04,642] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,642] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:50:04,642] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:50:04,643] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:50:04,643] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-08-02 11:50:04,644] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,644] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-08-02 11:50:04,644] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-08-02 11:50:04,644] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,645] DEBUG: 	MemoizationController: [0,1]
[2021-08-02 11:50:04,645] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,646] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:50:04,646] DEBUG: channelMap keySet: . . 
[2021-08-02 11:50:04,646] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,647] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,649] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-08-02 11:50:04,649] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:50:04,650] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,650] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-08-02 11:50:04,651] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-08-02 11:50:04,651] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-08-02 11:50:04,652] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:50:04,652] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-08-02 11:50:04,652] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,652] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,653] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-08-02 11:50:04,653] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:50:04,654] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:50:04,654] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-08-02 11:50:04,654] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-08-02 11:50:04,654] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-08-02 11:50:04,655] DEBUG: channelMap keySet: . . . 
[2021-08-02 11:50:04,655] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-08-02 11:50:04,656] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,656] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,656] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-08-02 11:50:04,656] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:50:04,657] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-08-02 11:50:04,657] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-08-02 11:50:04,657] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-08-02 11:50:04,658] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-08-02 11:50:04,658] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-08-02 11:50:04,659] DEBUG: >> msg.memoization_label: 3
[2021-08-02 11:50:04,658] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:50:04,659] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:50:04,659] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-08-02 11:50:04,660] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-08-02 11:50:04,660] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:50:04,661] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,661] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-08-02 11:50:04,661] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,662] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:50:04,662] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-08-02 11:50:04,663] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-08-02 11:50:04,662] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,665] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,665] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:50:04,666] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:50:04,666] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:50:04,667] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:50:04,667] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:50:04,668] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,668] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,669] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:50:04,669] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,669] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,670] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,670] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,670] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,671] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-08-02 11:50:04,671] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:50:04,672] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,673] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,673] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:50:04,674] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:50:04,674] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:04,674] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:50:04,675] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,675] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,675] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:50:04,675] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,676] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,676] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:50:04,677] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:50:04,677] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:50:04,677] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-08-02 11:50:04,678] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-08-02 11:50:04,678] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,681] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,681] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-08-02 11:50:04,681] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:50:04,682] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:50:04,682] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:50:04,683] DEBUG: channelMap keySet: . . . . 
[2021-08-02 11:50:04,683] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,683] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-08-02 11:50:04,684] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,683] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,684] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:50:04,684] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-08-02 11:50:04,685] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:50:04,685] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-08-02 11:50:04,686] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:50:04,685] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,686] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-08-02 11:50:04,685] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,686] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:50:04,687] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,687] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-08-02 11:50:04,688] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:50:04,688] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-08-02 11:50:04,688] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:50:04,689] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:50:04,689] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:50:04,690] DEBUG: channelMap keySet: . . . . . 
[2021-08-02 11:50:04,690] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,690] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,690] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:50:04,692] DEBUG: >> msg.memoization_label: 0
[2021-08-02 11:50:04,691] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:50:04,692] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-08-02 11:50:04,692] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-08-02 11:50:04,693] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-08-02 11:50:04,693] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-08-02 11:50:04,693] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,694] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-08-02 11:50:04,694] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,697] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-08-02 11:50:04,697] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:50:04,697] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-08-02 11:50:04,698] DEBUG: MemoizationController: pairing names after add
[2021-08-02 11:50:04,698] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-08-02 11:50:04,698] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-08-02 11:50:04,698] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-08-02 11:50:04,699] DEBUG: result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:04,699] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-08-02 11:50:04,700] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-08-02 11:50:04,700] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-08-02 11:50:04,700] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-08-02 11:50:04,701] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-08-02 11:50:04,701] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,701] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,701] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-08-02 11:50:04,702] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,702] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:50:04,703] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-08-02 11:50:04,703] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:50:04,703] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:50:04,704] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:50:04,704] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-08-02 11:50:04,704] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,704] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,705] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:50:04,705] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:50:04,705] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:50:04,707] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-08-02 11:50:04,707] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:50:04,707] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-08-02 11:50:04,708] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,708] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-08-02 11:50:04,708] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:50:04,708] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-08-02 11:50:04,708] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-08-02 11:50:04,709] DEBUG: channelMap keySet: . . . . . . 
[2021-08-02 11:50:04,709] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-08-02 11:50:04,709] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:50:04,713] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,713] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:50:04,713] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:04,714] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:50:04,713] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-08-02 11:50:04,714] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-08-02 11:50:04,714] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:50:04,715] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:50:04,715] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-08-02 11:50:04,715] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:50:04,715] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:50:04,715] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,717] DEBUG: result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:04,717] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,717] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:50:04,717] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,718] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,719] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:50:04,719] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:50:04,719] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:50:04,719] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-08-02 11:50:04,720] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:50:04,720] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:50:04,721] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:50:04,721] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:50:04,721] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:50:04,721] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-08-02 11:50:04,722] DEBUG: 
[2021-08-02 11:50:04,722] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,722] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:50:04,722] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,723] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:04,723] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:50:04,724] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:50:04,724] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:04,724] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:50:04,725] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:50:04,725] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:50:04,726] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:50:04,726] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-08-02 11:50:04,728] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:50:04,729] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-08-02 11:50:04,730] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-08-02 11:50:04,730] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,730] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:50:04,730] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-08-02 11:50:04,730] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-08-02 11:50:04,731] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-08-02 11:50:04,731] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:50:04,732] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000025AC77069A0>]>
[2021-08-02 11:50:04,732] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:04,733] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:50:04,733] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:50:04,733] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:50:04,733] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:50:04,734] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:50:04,734] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,734] DEBUG: Deliver end promised Results: 
[2021-08-02 11:50:04,735] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,735] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:50:04,735] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,736] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:50:04,736] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-08-02 11:50:04,736] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,737] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:50:04,736] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:50:04,737] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-08-02 11:50:04,738] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:50:04,738] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,739] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:50:04,739] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:50:04,740] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:50:04,740] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:50:04,740] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-08-02 11:50:04,740] DEBUG: 
[2021-08-02 11:50:04,743] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-08-02 11:50:04,744] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:04,744] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:50:04,744] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:04,746] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:04,746] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,746] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:50:04,747] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:50:04,746] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-08-02 11:50:04,747] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:50:04,747] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:50:04,748] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-08-02 11:50:04,748] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-08-02 11:50:04,748] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,748] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:50:04,749] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-08-02 11:50:04,749] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,749] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-08-02 11:50:04,749] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-08-02 11:50:04,750] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:50:04,751] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-08-02 11:50:04,751] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-08-02 11:50:04,751] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,752] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-08-02 11:50:04,752] DEBUG: >> msg.memoization_label: 1
[2021-08-02 11:50:04,752] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:50:04,753] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-08-02 11:50:04,753] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-08-02 11:50:04,753] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-08-02 11:50:04,753] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,754] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-08-02 11:50:04,754] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,755] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,755] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:50:04,756] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-02 11:50:04,756] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:50:04,756] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,756] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-02 11:50:04,757] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-02 11:50:04,760] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:50:04,760] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-02 11:50:04,760] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:04,761] DEBUG: 
[2021-08-02 11:50:04,761] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:50:04,761] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,762] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:04,762] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:04,762] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-02 11:50:04,763] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:04,763] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-02 11:50:04,763] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,764] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:50:04,764] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,764] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-08-02 11:50:04,765] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-08-02 11:50:04,765] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000025AC77101C0>]>
[2021-08-02 11:50:04,765] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,766] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-02 11:50:04,766] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-08-02 11:50:04,767] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-02 11:50:04,767] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-08-02 11:50:04,768] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-02 11:50:04,768] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:50:04,768] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:04,768] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-02 11:50:04,768] DEBUG: Deliver end promised Results: 
[2021-08-02 11:50:04,769] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:04,769] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:50:04,770] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,771] DEBUG: 
[2021-08-02 11:50:04,771] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-08-02 11:50:04,772] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:50:04,772] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-08-02 11:50:04,772] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,773] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,773] DEBUG: channelMap keySet: . . . . . . . 
[2021-08-02 11:50:04,775] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,776] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,776] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-08-02 11:50:04,776] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-08-02 11:50:04,776] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-08-02 11:50:04,777] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-08-02 11:50:04,777] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-08-02 11:50:04,778] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,779] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-08-02 11:50:04,779] DEBUG: >> msg.memoization_label: 2
[2021-08-02 11:50:04,779] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-08-02 11:50:04,779] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-08-02 11:50:04,779] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-08-02 11:50:04,780] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,780] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-08-02 11:50:04,781] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-08-02 11:50:04,781] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-08-02 11:50:04,782] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-08-02 11:50:04,782] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:50:04,783] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-08-02 11:50:04,783] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:50:04,783] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:04,783] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-08-02 11:50:04,784] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-02 11:50:04,784] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:50:04,784] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-02 11:50:04,785] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-02 11:50:04,785] DEBUG: 
[2021-08-02 11:50:04,785] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:04,786] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-08-02 11:50:04,786] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:04,787] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:04,787] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-02 11:50:04,787] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:04,788] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-02 11:50:04,788] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-08-02 11:50:04,788] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:50:04,788] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-08-02 11:50:04,791] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-08-02 11:50:04,791] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-08-02 11:50:04,792] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:50:04,792] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-08-02 11:50:04,792] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:50:04,793] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-02 11:50:04,793] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,794] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-02 11:50:04,794] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-02 11:50:04,794] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:50:04,795] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-08-02 11:50:04,795] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:04,795] DEBUG: 
[2021-08-02 11:50:04,796] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:50:04,796] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-08-02 11:50:04,796] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:04,797] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:04,797] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-08-02 11:50:04,797] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:04,798] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-02 11:50:04,799] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-08-02 11:50:04,799] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:50:04,800] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-08-02 11:50:04,800] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-08-02 11:50:04,801] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-08-02 11:50:04,801] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-08-02 11:50:04,801] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-08-02 11:50:04,802] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-08-02 11:50:04,801] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-08-02 11:50:04,802] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-02 11:50:04,802] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,803] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-08-02 11:50:04,803] DEBUG: MemoizationController: pairing names after remove
[2021-08-02 11:50:04,803] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-08-02 11:50:04,804] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:04,804] DEBUG: Disabling memoization thread now...
[2021-08-02 11:50:04,807] DEBUG: MemoizationThread disabled.
[2021-08-02 11:50:04,808] DEBUG: 
[2021-08-02 11:50:04,808] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-08-02 11:50:04,808] DEBUG: 
[2021-08-02 11:50:04,808] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-08-02 11:50:06,813] DEBUG: Verified.
[2021-08-02 11:50:32,132] DEBUG: Running DivideandConquerFibonacci
[2021-08-02 11:50:32,132] DEBUG: INPUT_THRESHOLD is: 0
[2021-08-02 11:50:32,132] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-08-02 11:50:32,133] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-08-02 11:50:32,133] DEBUG: n: 4
[2021-08-02 11:50:32,133] DEBUG: memoize is: False
[2021-08-02 11:50:32,133] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,134] DEBUG: >> Starting Memoization Controller now...
[2021-08-02 11:50:32,135] DEBUG: Initial pairing name: "[0,1]"
[2021-08-02 11:50:32,135] DEBUG: >> Memoization Thread has started running...
[2021-08-02 11:50:32,135] DEBUG: >> Memoization Controller started successfully!
[2021-08-02 11:50:32,135] DEBUG: >> Memoization Thread awaiting message...
[2021-08-02 11:50:32,135] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-08-02 11:50:32,135] DEBUG: [0,1] Calling problem.divide()
[2021-08-02 11:50:32,135] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-08-02 11:50:32,135] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:50:32,135] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-08-02 11:50:32,136] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-08-02 11:50:32,136] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,136] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,136] DEBUG: [0,1] Calling problem.Fanout()
[2021-08-02 11:50:32,136] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-08-02 11:50:32,136] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,136] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-08-02 11:50:32,136] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,136] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-08-02 11:50:32,137] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,137] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-08-02 11:50:32,137] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-08-02 11:50:32,137] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-08-02 11:50:32,137] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,137] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-08-02 11:50:32,137] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:50:32,137] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-08-02 11:50:32,138] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:50:32,138] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-08-02 11:50:32,138] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,139] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-08-02 11:50:32,139] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-08-02 11:50:32,139] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:50:32,140] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,140] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-08-02 11:50:32,141] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,141] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,142] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-08-02 11:50:32,142] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,142] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,143] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-08-02 11:50:32,143] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-08-02 11:50:32,144] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,144] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,144] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-08-02 11:50:32,145] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,145] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-08-02 11:50:32,145] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,146] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,146] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,147] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-08-02 11:50:32,146] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-08-02 11:50:32,147] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-08-02 11:50:32,147] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,150] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-08-02 11:50:32,151] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-08-02 11:50:32,151] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,152] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-08-02 11:50:32,152] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,152] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-08-02 11:50:32,152] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:50:32,153] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-08-02 11:50:32,153] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-08-02 11:50:32,153] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-08-02 11:50:32,154] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-08-02 11:50:32,154] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-08-02 11:50:32,154] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:50:32,155] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,155] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-08-02 11:50:32,156] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-08-02 11:50:32,156] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-08-02 11:50:32,156] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-08-02 11:50:32,157] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,157] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:50:32,157] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-08-02 11:50:32,158] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-08-02 11:50:32,158] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-08-02 11:50:32,159] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:50:32,159] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-08-02 11:50:32,159] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:50:32,159] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,160] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,160] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-08-02 11:50:32,160] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-08-02 11:50:32,160] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:50:32,161] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,161] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:50:32,162] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,163] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-08-02 11:50:32,162] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-08-02 11:50:32,163] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:50:32,163] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:50:32,164] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,167] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-08-02 11:50:32,167] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:50:32,167] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-08-02 11:50:32,168] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-08-02 11:50:32,169] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-08-02 11:50:32,169] DEBUG: 
[2021-08-02 11:50:32,169] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,169] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:50:32,169] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:32,170] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-08-02 11:50:32,171] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:50:32,171] DEBUG: 
[2021-08-02 11:50:32,172] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,172] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-08-02 11:50:32,172] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:32,172] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,173] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,174] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-08-02 11:50:32,174] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:32,174] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:32,175] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,175] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-08-02 11:50:32,175] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-08-02 11:50:32,176] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-08-02 11:50:32,175] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-08-02 11:50:32,177] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-08-02 11:50:32,177] DEBUG: [0,1][1,2][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-08-02 11:50:32,177] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:32,178] DEBUG: 
[2021-08-02 11:50:32,178] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,178] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-08-02 11:50:32,178] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:32,179] WARNING: MemoizationController already initialized.
[2021-08-02 11:50:32,179] DEBUG: [0,1][1,2][1,2][0,2]: **********************Start Fanin operation:
[2021-08-02 11:50:32,182] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-08-02 11:50:32,182] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2]
[2021-08-02 11:50:32,182] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-08-02 11:50:32,183] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: become_executor: False
[2021-08-02 11:50:32,183] DEBUG: [0,1][1,2][1,2][1,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-08-02 11:50:32,184] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,184] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][0,2]"
[2021-08-02 11:50:32,184] DEBUG: [0,1][1,2][1,2][1,2]: **********************Start Fanin operation:
[2021-08-02 11:50:32,184] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][0,2]", x = 1, y = 2
[2021-08-02 11:50:32,185] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2]
[2021-08-02 11:50:32,185] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: become_executor: True
[2021-08-02 11:50:32,186] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-08-02 11:50:32,186] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][1,2]"
[2021-08-02 11:50:32,186] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:32,186] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][1,2]", x = 1, y = 2
[2021-08-02 11:50:32,187] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-08-02 11:50:32,187] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-08-02 11:50:32,188] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:32,188] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-02 11:50:32,188] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] parentProblem ID: [0,1][1,2][1,2]
[2021-08-02 11:50:32,189] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:32,189] DEBUG: [0,1][1,2][1,2][0,2]: faninId: [0,1][1,2][3,2]
[2021-08-02 11:50:32,189] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-08-02 11:50:32,191] DEBUG: 
[2021-08-02 11:50:32,191] DEBUG: [0,1][1,2][1,2][0,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,191] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2][1,2]
[2021-08-02 11:50:32,191] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-08-02 11:50:32,192] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][1,2][3,2]
[2021-08-02 11:50:32,192] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-02 11:50:32,193] DEBUG: 
[2021-08-02 11:50:32,193] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,193] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-08-02 11:50:32,193] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-08-02 11:50:32,194] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-08-02 11:50:32,194] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-08-02 11:50:32,194] DEBUG: Fan-In: ID: [0,1][1,2][1,2][0,2]: FanInID: [0,1][1,2][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-08-02 11:50:32,197] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:50:32,197] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-08-02 11:50:32,198] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:32,198] DEBUG: 
[2021-08-02 11:50:32,198] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:50:32,198] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][1,2][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:32,199] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:32,199] DEBUG: Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-08-02 11:50:32,200] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-02 11:50:32,200] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:32,200] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-08-02 11:50:32,200] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:32,201] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-08-02 11:50:32,202] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2][1,2]"
[2021-08-02 11:50:32,202] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2][1,2]"
[2021-08-02 11:50:32,202] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-08-02 11:50:32,203] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-08-02 11:50:32,203] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][3,2]
[2021-08-02 11:50:32,204] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-08-02 11:50:32,204] DEBUG: 
[2021-08-02 11:50:32,204] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-08-02 11:50:32,205] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-08-02 11:50:32,205] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:32,205] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-08-02 11:50:32,206] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-02 11:50:32,207] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:32,207] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-08-02 11:50:32,207] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 2)
[2021-08-02 11:50:32,207] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-08-02 11:50:32,208] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-08-02 11:50:32,208] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-08-02 11:50:32,208] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1]
[2021-08-02 11:50:32,209] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [1,1]
[2021-08-02 11:50:32,209] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-08-02 11:50:32,209] DEBUG: 
[2021-08-02 11:50:32,210] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-08-02 11:50:32,210] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 2)
[2021-08-02 11:50:32,210] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-08-02 11:50:32,213] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-08-02 11:50:32,213] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-08-02 11:50:32,214] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-08-02 11:50:32,214] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-08-02 11:50:32,214] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 3)
[2021-08-02 11:50:32,215] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-08-02 11:50:32,215] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-08-02 11:50:32,215] DEBUG: Disabling memoization thread now...
[2021-08-02 11:50:32,216] DEBUG: MemoizationThread disabled.
[2021-08-02 11:50:32,216] DEBUG: 
[2021-08-02 11:50:32,216] DEBUG: [0,1][1,2][1,2][1,2]: Fibonacci(4) = 3
[2021-08-02 11:50:32,217] DEBUG: 
[2021-08-02 11:50:32,217] DEBUG: [0,1][1,2][1,2][1,2]: Verifying ....... 
[2021-08-02 11:50:34,233] DEBUG: Verified.
[2021-11-29 10:52:12,433] DEBUG: Running DivideandConquerFibonacci
[2021-11-29 10:52:12,434] DEBUG: INPUT_THRESHOLD is: 0
[2021-11-29 10:52:12,434] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-11-29 10:52:12,434] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-11-29 10:52:12,434] DEBUG: n: 4
[2021-11-29 10:52:12,434] DEBUG: memoize is: True
[2021-11-29 10:52:12,434] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,435] DEBUG: >> Starting Memoization Controller now...
[2021-11-29 10:52:12,435] DEBUG: Initial pairing name: "[0,1]"
[2021-11-29 10:52:12,435] DEBUG: >> Memoization Thread has started running...
[2021-11-29 10:52:12,435] DEBUG: >> Memoization Controller started successfully!
[2021-11-29 10:52:12,435] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,436] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-11-29 10:52:12,477] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-11-29 10:52:12,487] DEBUG: MemoizationController: pair: [0,1]
[2021-11-29 10:52:12,487] DEBUG: channelMap keySet: . 
[2021-11-29 10:52:12,489] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,490] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:12,490] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-11-29 10:52:12,503] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-11-29 10:52:12,504] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-11-29 10:52:12,505] DEBUG: >> msg.memoization_label: 4
[2021-11-29 10:52:12,505] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-11-29 10:52:12,505] DEBUG: MemoizationThread: promise by: [0,1]
[2021-11-29 10:52:12,506] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,506] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-11-29 10:52:12,506] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-11-29 10:52:12,507] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-11-29 10:52:12,507] DEBUG: [0,1] Calling problem.divide()
[2021-11-29 10:52:12,507] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-11-29 10:52:12,508] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:52:12,508] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-11-29 10:52:12,508] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:52:12,509] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,509] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,509] DEBUG: [0,1] Calling problem.Fanout()
[2021-11-29 10:52:12,510] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-11-29 10:52:12,511] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,511] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-11-29 10:52:12,512] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,512] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,521] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-11-29 10:52:12,521] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,522] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:52:12,522] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,522] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,522] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-11-29 10:52:12,524] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,524] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-11-29 10:52:12,524] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-11-29 10:52:12,524] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-11-29 10:52:12,525] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-11-29 10:52:12,525] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,526] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-11-29 10:52:12,526] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,526] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:52:12,526] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:12,527] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,527] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,527] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-11-29 10:52:12,528] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,528] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:52:12,528] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-11-29 10:52:12,529] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-11-29 10:52:12,529] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,529] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,530] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-11-29 10:52:12,530] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-11-29 10:52:12,532] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-11-29 10:52:12,532] DEBUG: channelMap keySet: . . 
[2021-11-29 10:52:12,533] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-11-29 10:52:12,533] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,533] DEBUG: channelMap keySet: . . . 
[2021-11-29 10:52:12,534] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:12,534] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-11-29 10:52:12,535] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,535] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-11-29 10:52:12,535] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-11-29 10:52:12,535] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:12,535] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:12,538] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-11-29 10:52:12,538] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-11-29 10:52:12,539] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-11-29 10:52:12,539] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-11-29 10:52:12,540] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,540] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-11-29 10:52:12,541] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-11-29 10:52:12,541] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-11-29 10:52:12,541] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-11-29 10:52:12,541] DEBUG: >> msg.memoization_label: 3
[2021-11-29 10:52:12,542] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-11-29 10:52:12,542] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-11-29 10:52:12,542] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-11-29 10:52:12,543] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-11-29 10:52:12,543] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:52:12,544] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,544] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,544] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-11-29 10:52:12,545] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-11-29 10:52:12,545] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:52:12,545] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-11-29 10:52:12,545] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,546] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-11-29 10:52:12,546] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,546] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-11-29 10:52:12,546] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-11-29 10:52:12,547] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:52:12,548] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,548] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-11-29 10:52:12,548] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:52:12,549] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,549] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,550] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,550] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,550] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,551] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-11-29 10:52:12,551] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,551] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-11-29 10:52:12,552] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-11-29 10:52:12,554] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:12,554] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,555] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,555] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:12,556] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:12,556] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,557] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,557] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,557] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-11-29 10:52:12,558] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,558] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-11-29 10:52:12,558] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,558] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-11-29 10:52:12,558] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-11-29 10:52:12,559] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-11-29 10:52:12,560] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,560] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-11-29 10:52:12,560] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:12,561] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-11-29 10:52:12,561] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:12,561] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:12,562] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,562] DEBUG: channelMap keySet: . . . . 
[2021-11-29 10:52:12,562] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,563] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-11-29 10:52:12,563] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,563] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,564] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-11-29 10:52:12,564] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:52:12,564] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-11-29 10:52:12,564] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,565] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-11-29 10:52:12,565] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-11-29 10:52:12,565] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,565] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-11-29 10:52:12,566] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-11-29 10:52:12,566] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:52:12,566] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-11-29 10:52:12,567] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:12,568] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-11-29 10:52:12,568] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:12,571] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:12,571] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,571] DEBUG: channelMap keySet: . . . . . 
[2021-11-29 10:52:12,572] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,572] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:52:12,572] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,573] DEBUG: >> msg.memoization_label: 0
[2021-11-29 10:52:12,573] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-11-29 10:52:12,573] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-11-29 10:52:12,574] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-11-29 10:52:12,574] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-11-29 10:52:12,575] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-11-29 10:52:12,575] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,575] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-11-29 10:52:12,575] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,576] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-11-29 10:52:12,576] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-11-29 10:52:12,576] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-11-29 10:52:12,577] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-11-29 10:52:12,577] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:12,578] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:52:12,578] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:52:12,578] DEBUG: result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:12,578] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:12,579] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-11-29 10:52:12,579] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:12,580] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:12,580] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:12,580] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,581] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,581] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-11-29 10:52:12,581] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,582] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:12,582] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:12,582] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:12,583] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:52:12,583] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-11-29 10:52:12,583] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-11-29 10:52:12,584] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,584] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,586] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:52:12,586] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-11-29 10:52:12,587] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-11-29 10:52:12,587] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:12,588] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-11-29 10:52:12,588] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-11-29 10:52:12,588] DEBUG: channelMap keySet: . . . . . . 
[2021-11-29 10:52:12,589] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-11-29 10:52:12,589] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,589] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,589] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-11-29 10:52:12,590] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:52:12,590] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-11-29 10:52:12,590] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-11-29 10:52:12,591] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:12,591] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-11-29 10:52:12,592] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:12,592] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-11-29 10:52:12,592] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:12,592] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:52:12,592] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-11-29 10:52:12,593] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-11-29 10:52:12,593] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,594] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:52:12,594] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:52:12,594] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,594] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-11-29 10:52:12,595] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-11-29 10:52:12,595] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,595] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,596] DEBUG: result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:12,596] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:12,596] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-11-29 10:52:12,597] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:12,598] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-11-29 10:52:12,598] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:12,598] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-11-29 10:52:12,598] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:52:12,599] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-11-29 10:52:12,599] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-11-29 10:52:12,599] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,599] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,602] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-11-29 10:52:12,602] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:52:12,603] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:52:12,603] DEBUG: 
[2021-11-29 10:52:12,604] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-11-29 10:52:12,604] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:12,605] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:12,605] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:52:12,605] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-11-29 10:52:12,606] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:12,606] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-11-29 10:52:12,606] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:12,606] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:12,607] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-11-29 10:52:12,608] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:12,608] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,608] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-11-29 10:52:12,608] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-11-29 10:52:12,608] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:52:12,609] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-11-29 10:52:12,610] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000290579A0310>]>
[2021-11-29 10:52:12,609] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-11-29 10:52:12,617] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:12,617] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-11-29 10:52:12,617] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:52:12,618] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-11-29 10:52:12,618] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-11-29 10:52:12,619] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:52:12,619] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,619] DEBUG: Deliver end promised Results: 
[2021-11-29 10:52:12,619] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,619] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-11-29 10:52:12,620] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,620] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-11-29 10:52:12,621] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-11-29 10:52:12,621] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,621] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-11-29 10:52:12,621] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-11-29 10:52:12,622] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,622] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:52:12,623] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-11-29 10:52:12,623] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:12,624] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-11-29 10:52:12,624] DEBUG: 
[2021-11-29 10:52:12,624] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:12,625] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:52:12,625] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:12,625] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:12,626] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:12,625] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-11-29 10:52:12,626] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,627] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:12,627] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:12,627] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:12,628] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-11-29 10:52:12,628] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-11-29 10:52:12,628] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-11-29 10:52:12,628] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,629] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:12,629] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-11-29 10:52:12,630] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,630] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:12,630] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:12,631] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-11-29 10:52:12,631] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,641] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-11-29 10:52:12,642] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:12,642] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-11-29 10:52:12,643] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-11-29 10:52:12,643] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-11-29 10:52:12,643] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:52:12,644] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:12,644] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:12,644] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-11-29 10:52:12,645] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-11-29 10:52:12,645] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,645] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-11-29 10:52:12,646] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-11-29 10:52:12,646] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,646] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,647] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:52:12,647] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-11-29 10:52:12,647] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:52:12,648] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,649] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-11-29 10:52:12,649] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-11-29 10:52:12,650] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:52:12,650] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-11-29 10:52:12,650] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:12,651] DEBUG: 
[2021-11-29 10:52:12,651] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:52:12,652] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,652] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:12,652] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:12,653] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-11-29 10:52:12,653] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:12,653] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-11-29 10:52:12,654] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,654] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:12,655] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,655] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:12,655] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:12,656] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000029057985460>]>
[2021-11-29 10:52:12,656] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,656] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-11-29 10:52:12,656] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-11-29 10:52:12,657] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-11-29 10:52:12,657] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-11-29 10:52:12,658] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-11-29 10:52:12,658] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:52:12,658] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:12,658] DEBUG: Deliver end promised Results: 
[2021-11-29 10:52:12,659] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-11-29 10:52:12,659] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:52:12,659] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,660] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-11-29 10:52:12,660] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:12,661] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-11-29 10:52:12,661] DEBUG: 
[2021-11-29 10:52:12,661] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:52:12,661] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:12,662] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,662] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,663] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
zationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,663] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-11-29 10:52:12,663] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,667] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:12,667] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-11-29 10:52:12,667] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-11-29 10:52:12,667] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,668] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:12,668] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:12,668] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:12,669] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-11-29 10:52:12,669] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-11-29 10:52:12,670] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-11-29 10:52:12,669] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,670] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-11-29 10:52:12,670] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:12,671] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:12,671] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:52:12,672] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-11-29 10:52:12,672] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:52:12,672] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:12,673] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-11-29 10:52:12,673] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-11-29 10:52:12,673] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:52:12,674] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-11-29 10:52:12,674] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-11-29 10:52:12,674] DEBUG: 
[2021-11-29 10:52:12,675] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:52:12,675] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:12,675] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:12,675] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:12,676] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:52:12,676] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:12,677] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-11-29 10:52:12,677] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:12,677] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:12,678] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:12,678] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:12,678] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-11-29 10:52:12,679] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:12,679] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:12,679] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:12,680] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-11-29 10:52:12,682] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,682] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-11-29 10:52:12,683] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-11-29 10:52:12,683] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:52:12,684] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-11-29 10:52:12,684] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:12,684] DEBUG: 
[2021-11-29 10:52:12,685] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:52:12,685] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:12,685] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:12,686] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:12,686] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:52:12,686] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:12,687] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-11-29 10:52:12,688] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:12,688] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:12,688] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:12,688] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:12,689] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-11-29 10:52:12,689] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:12,689] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:12,690] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-11-29 10:52:12,689] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:12,690] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-11-29 10:52:12,690] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,691] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:12,691] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:12,691] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-11-29 10:52:12,692] DEBUG: Disabling memoization thread now...
[2021-11-29 10:52:12,692] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:12,692] DEBUG: MemoizationThread disabled.
[2021-11-29 10:52:12,693] DEBUG: 
[2021-11-29 10:52:12,693] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-11-29 10:52:12,693] DEBUG: 
[2021-11-29 10:52:12,694] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-11-29 10:52:14,699] DEBUG: Verified.
[2021-11-29 10:52:16,464] DEBUG: Running DivideandConquerFibonacci
[2021-11-29 10:52:16,464] DEBUG: INPUT_THRESHOLD is: 0
[2021-11-29 10:52:16,464] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-11-29 10:52:16,464] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-11-29 10:52:16,464] DEBUG: n: 4
[2021-11-29 10:52:16,464] DEBUG: memoize is: True
[2021-11-29 10:52:16,465] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,465] DEBUG: >> Starting Memoization Controller now...
[2021-11-29 10:52:16,465] DEBUG: Initial pairing name: "[0,1]"
[2021-11-29 10:52:16,465] DEBUG: >> Memoization Thread has started running...
[2021-11-29 10:52:16,465] DEBUG: >> Memoization Controller started successfully!
[2021-11-29 10:52:16,466] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-11-29 10:52:16,465] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,466] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-11-29 10:52:16,466] DEBUG: MemoizationController: pair: [0,1]
[2021-11-29 10:52:16,466] DEBUG: channelMap keySet: . 
[2021-11-29 10:52:16,466] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,467] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:16,467] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-11-29 10:52:16,467] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-11-29 10:52:16,467] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-11-29 10:52:16,467] DEBUG: >> msg.memoization_label: 4
[2021-11-29 10:52:16,467] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-11-29 10:52:16,467] DEBUG: MemoizationThread: promise by: [0,1]
[2021-11-29 10:52:16,467] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,468] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-11-29 10:52:16,468] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-11-29 10:52:16,468] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-11-29 10:52:16,468] DEBUG: [0,1] Calling problem.divide()
[2021-11-29 10:52:16,468] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-11-29 10:52:16,468] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:52:16,468] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-11-29 10:52:16,468] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:52:16,468] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,468] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,468] DEBUG: [0,1] Calling problem.Fanout()
[2021-11-29 10:52:16,469] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-11-29 10:52:16,469] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,469] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-11-29 10:52:16,469] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,469] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,469] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-11-29 10:52:16,469] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,469] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,469] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:52:16,469] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,470] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-11-29 10:52:16,470] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,470] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-11-29 10:52:16,470] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-11-29 10:52:16,470] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-11-29 10:52:16,470] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-11-29 10:52:16,470] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,471] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-11-29 10:52:16,471] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-11-29 10:52:16,471] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,472] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,472] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:16,472] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:52:16,473] DEBUG: channelMap keySet: . . 
[2021-11-29 10:52:16,473] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,473] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,474] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-11-29 10:52:16,474] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:16,474] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,474] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-11-29 10:52:16,475] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-11-29 10:52:16,475] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-11-29 10:52:16,475] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:52:16,476] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-11-29 10:52:16,476] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,476] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,477] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-11-29 10:52:16,477] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-11-29 10:52:16,478] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:16,478] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-11-29 10:52:16,478] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-11-29 10:52:16,479] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-11-29 10:52:16,479] DEBUG: channelMap keySet: . . . 
[2021-11-29 10:52:16,479] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-11-29 10:52:16,480] DEBUG: >> Memoization Thread awaiting message...
ia `memoizeIDLabeler()`
[2021-11-29 10:52:16,480] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-11-29 10:52:16,480] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:16,481] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-11-29 10:52:16,481] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-11-29 10:52:16,482] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-11-29 10:52:16,481] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-11-29 10:52:16,482] DEBUG: >> msg.memoization_label: 3
[2021-11-29 10:52:16,482] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-11-29 10:52:16,482] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-11-29 10:52:16,483] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-11-29 10:52:16,484] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-11-29 10:52:16,484] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-11-29 10:52:16,484] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:52:16,485] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,485] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,485] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-11-29 10:52:16,486] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:52:16,486] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-11-29 10:52:16,486] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-11-29 10:52:16,486] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,487] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,487] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-11-29 10:52:16,488] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-11-29 10:52:16,488] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-11-29 10:52:16,491] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:52:16,492] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-11-29 10:52:16,492] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,492] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,493] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:52:16,493] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,494] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,494] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,495] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,495] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,495] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-11-29 10:52:16,495] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-11-29 10:52:16,496] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,496] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-11-29 10:52:16,497] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,497] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:52:16,497] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,497] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:16,498] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,498] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:16,499] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,499] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-11-29 10:52:16,499] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,500] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-11-29 10:52:16,500] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,500] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-11-29 10:52:16,500] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-11-29 10:52:16,501] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-11-29 10:52:16,501] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-11-29 10:52:16,501] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,502] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,502] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-11-29 10:52:16,502] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:16,503] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:16,503] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:16,504] DEBUG: channelMap keySet: . . . . 
[2021-11-29 10:52:16,506] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,506] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-11-29 10:52:16,507] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,507] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,508] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-11-29 10:52:16,508] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:52:16,508] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-11-29 10:52:16,508] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,509] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-11-29 10:52:16,509] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-11-29 10:52:16,509] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-11-29 10:52:16,508] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,510] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-11-29 10:52:16,510] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,510] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-11-29 10:52:16,511] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:16,512] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:16,512] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-11-29 10:52:16,513] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:16,514] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:52:16,514] DEBUG: channelMap keySet: . . . . . 
[2021-11-29 10:52:16,515] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,515] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,516] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-11-29 10:52:16,515] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:52:16,516] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-11-29 10:52:16,516] DEBUG: >> msg.memoization_label: 0
[2021-11-29 10:52:16,517] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-11-29 10:52:16,517] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-11-29 10:52:16,518] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,518] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-11-29 10:52:16,518] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-11-29 10:52:16,518] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,519] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-11-29 10:52:16,519] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-11-29 10:52:16,520] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-11-29 10:52:16,520] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:52:16,522] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-11-29 10:52:16,522] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:52:16,523] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:52:16,523] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:52:16,523] DEBUG: result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:16,524] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-11-29 10:52:16,524] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:52:16,525] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:52:16,525] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:52:16,525] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,526] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-11-29 10:52:16,526] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,526] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,527] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:16,527] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:16,527] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:52:16,528] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-11-29 10:52:16,528] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:16,528] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-11-29 10:52:16,529] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,529] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,529] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
e_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:52:16,530] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:16,530] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-11-29 10:52:16,531] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-11-29 10:52:16,531] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-11-29 10:52:16,531] DEBUG: channelMap keySet: . . . . . . 
[2021-11-29 10:52:16,532] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-11-29 10:52:16,532] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,532] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,532] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-11-29 10:52:16,533] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-11-29 10:52:16,533] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-11-29 10:52:16,533] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:52:16,534] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-11-29 10:52:16,534] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:16,534] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-11-29 10:52:16,535] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:16,535] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-11-29 10:52:16,536] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:16,536] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:52:16,538] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:52:16,538] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,539] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-11-29 10:52:16,539] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-11-29 10:52:16,540] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,540] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-11-29 10:52:16,540] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:52:16,541] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,540] DEBUG: result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:16,541] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:16,541] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,542] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:16,543] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-11-29 10:52:16,543] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-11-29 10:52:16,543] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-11-29 10:52:16,543] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:16,544] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:52:16,544] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-11-29 10:52:16,545] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-11-29 10:52:16,545] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,545] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,545] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-11-29 10:52:16,545] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:52:16,546] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:52:16,546] DEBUG: 
[2021-11-29 10:52:16,547] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:16,547] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-11-29 10:52:16,547] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:52:16,548] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:16,548] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-11-29 10:52:16,548] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:16,548] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-11-29 10:52:16,549] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:16,549] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:16,550] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-11-29 10:52:16,550] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,551] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:52:16,551] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-11-29 10:52:16,551] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-11-29 10:52:16,551] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:52:16,551] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-11-29 10:52:16,554] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-11-29 10:52:16,555] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000214DC36A400>]>
[2021-11-29 10:52:16,555] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:16,556] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:52:16,556] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-11-29 10:52:16,556] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-11-29 10:52:16,556] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-11-29 10:52:16,557] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:52:16,557] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,557] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,557] DEBUG: Deliver end promised Results: 
[2021-11-29 10:52:16,558] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-11-29 10:52:16,558] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-11-29 10:52:16,559] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,559] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-11-29 10:52:16,559] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-11-29 10:52:16,560] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,560] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-11-29 10:52:16,560] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:52:16,560] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-11-29 10:52:16,561] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-11-29 10:52:16,561] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,562] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-11-29 10:52:16,562] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:52:16,562] DEBUG: 
[2021-11-29 10:52:16,563] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:16,563] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:52:16,564] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:16,564] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:16,564] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:16,564] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-11-29 10:52:16,564] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:16,565] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,566] DEBUG: [0,1][0,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-11-29 10:52:16,566] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:16,566] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:16,566] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-11-29 10:52:16,567] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:16,567] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-11-29 10:52:16,568] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-11-29 10:52:16,570] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,570] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-11-29 10:52:16,571] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-11-29 10:52:16,571] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:52:16,571] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-11-29 10:52:16,572] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,573] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:16,573] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:52:16,573] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-11-29 10:52:16,573] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,574] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:52:16,574] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:52:16,574] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:16,575] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][1,2][0,2]
[2021-11-29 10:52:16,575] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-11-29 10:52:16,575] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,576] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-11-29 10:52:16,576] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-11-29 10:52:16,576] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,577] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,577] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:52:16,577] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-11-29 10:52:16,578] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:52:16,578] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,579] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-11-29 10:52:16,579] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-11-29 10:52:16,579] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:52:16,580] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-11-29 10:52:16,580] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:16,580] DEBUG: 
[2021-11-29 10:52:16,581] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:52:16,581] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,581] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:16,582] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:52:16,582] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-11-29 10:52:16,582] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:16,583] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-11-29 10:52:16,583] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,583] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:16,584] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,586] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:52:16,587] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:16,587] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000214DC366820>]>
[2021-11-29 10:52:16,587] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,588] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-11-29 10:52:16,588] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-11-29 10:52:16,589] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-11-29 10:52:16,589] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-11-29 10:52:16,589] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-11-29 10:52:16,589] WARNING: MemoizationController already initialized.
[2021-11-29 10:52:16,590] DEBUG: Deliver end promised Results: 
[2021-11-29 10:52:16,590] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:52:16,590] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:52:16,591] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-11-29 10:52:16,591] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,591] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-11-29 10:52:16,592] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:16,592] DEBUG: 
[2021-11-29 10:52:16,592] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-11-29 10:52:16,593] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:52:16,593] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:52:16,594] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,594] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,594] DEBUG: [0,1][1,2][1,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-11-29 10:52:16,594] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,595] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-11-29 10:52:16,595] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,595] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-11-29 10:52:16,596] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:52:16,596] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-11-29 10:52:16,597] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,597] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-11-29 10:52:16,597] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:52:16,598] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:52:16,598] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-11-29 10:52:16,598] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-11-29 10:52:16,599] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-11-29 10:52:16,599] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-11-29 10:52:16,602] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:16,603] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0, < WukongProblem < memoization_label_on_restart = 2> >) Memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:16,603] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:52:16,603] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-11-29 10:52:16,604] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:52:16,604] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:52:16,605] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-11-29 10:52:16,605] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-11-29 10:52:16,605] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:52:16,606] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-11-29 10:52:16,606] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-11-29 10:52:16,606] DEBUG: 
[2021-11-29 10:52:16,607] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:52:16,607] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:52:16,608] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:16,608] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:52:16,608] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:52:16,609] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:16,609] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-11-29 10:52:16,609] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:16,610] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:16,610] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:16,610] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:52:16,611] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-11-29 10:52:16,611] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:16,612] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:16,612] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-11-29 10:52:16,612] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:16,613] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-11-29 10:52:16,613] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,613] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-11-29 10:52:16,614] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:52:16,614] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-11-29 10:52:16,614] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:52:16,615] DEBUG: 
[2021-11-29 10:52:16,615] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:52:16,615] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:52:16,616] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:52:16,618] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:52:16,619] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:52:16,619] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:52:16,619] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-11-29 10:52:16,620] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:16,620] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:16,620] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:16,621] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:52:16,621] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-11-29 10:52:16,621] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:52:16,622] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:52:16,622] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-11-29 10:52:16,622] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:52:16,623] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-11-29 10:52:16,623] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,624] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:52:16,624] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:52:16,624] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-11-29 10:52:16,624] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:52:16,625] DEBUG: Disabling memoization thread now...
[2021-11-29 10:52:16,625] DEBUG: MemoizationThread disabled.
[2021-11-29 10:52:16,626] DEBUG: 
[2021-11-29 10:52:16,626] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-11-29 10:52:16,626] DEBUG: 
[2021-11-29 10:52:16,627] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-11-29 10:52:18,636] DEBUG: Verified.
[2021-11-29 10:53:55,919] DEBUG: Running DivideandConquerFibonacci
[2021-11-29 10:53:55,920] DEBUG: INPUT_THRESHOLD is: 0
[2021-11-29 10:53:55,920] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-11-29 10:53:55,920] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-11-29 10:53:55,920] DEBUG: n: 4
[2021-11-29 10:53:55,920] DEBUG: memoize is: True
[2021-11-29 10:53:55,920] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,921] DEBUG: >> Starting Memoization Controller now...
[2021-11-29 10:53:55,921] DEBUG: Initial pairing name: "[0,1]"
[2021-11-29 10:53:55,921] DEBUG: >> Memoization Thread has started running...
[2021-11-29 10:53:55,921] DEBUG: >> Memoization Controller started successfully!
[2021-11-29 10:53:55,921] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,921] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-11-29 10:53:55,921] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-11-29 10:53:55,921] DEBUG: MemoizationController: pair: [0,1]
[2021-11-29 10:53:55,921] DEBUG: channelMap keySet: . 
[2021-11-29 10:53:55,922] DEBUG: [0,1]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,922] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:53:55,922] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-11-29 10:53:55,922] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-11-29 10:53:55,922] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-11-29 10:53:55,923] DEBUG: >> msg.memoization_label: 4
[2021-11-29 10:53:55,923] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-11-29 10:53:55,923] DEBUG: MemoizationThread: promise by: [0,1]
[2021-11-29 10:53:55,923] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,923] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-11-29 10:53:55,923] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-11-29 10:53:55,923] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-11-29 10:53:55,923] DEBUG: [0,1] Calling problem.divide()
[2021-11-29 10:53:55,923] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-11-29 10:53:55,923] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:53:55,923] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-11-29 10:53:55,923] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:53:55,924] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,924] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,924] DEBUG: [0,1] Calling problem.Fanout()
[2021-11-29 10:53:55,924] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-11-29 10:53:55,924] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,924] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-11-29 10:53:55,924] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,924] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:53:55,924] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-11-29 10:53:55,925] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,925] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:53:55,925] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:53:55,925] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,925] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-11-29 10:53:55,925] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:55,925] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-11-29 10:53:55,925] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-11-29 10:53:55,925] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-11-29 10:53:55,926] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-11-29 10:53:55,926] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:53:55,926] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-11-29 10:53:55,926] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-11-29 10:53:55,926] DEBUG: channelMap keySet: . . 
[2021-11-29 10:53:55,927] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,928] DEBUG: [0,1][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,928] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:53:55,928] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:53:55,928] DEBUG: 	MemoizationController: [0,1]
[2021-11-29 10:53:55,929] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-11-29 10:53:55,929] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:53:55,929] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-11-29 10:53:55,930] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,930] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-11-29 10:53:55,930] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:53:55,931] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-11-29 10:53:55,931] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-11-29 10:53:55,932] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-11-29 10:53:55,932] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,933] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-11-29 10:53:55,933] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-11-29 10:53:55,933] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-11-29 10:53:55,934] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:55,934] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-11-29 10:53:55,935] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-11-29 10:53:55,935] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-11-29 10:53:55,938] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:53:55,938] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:53:55,939] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,939] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-11-29 10:53:55,939] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:53:55,939] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,939] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:55,940] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,940] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-11-29 10:53:55,940] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,941] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-11-29 10:53:55,941] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-11-29 10:53:55,941] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-11-29 10:53:55,942] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-11-29 10:53:55,942] DEBUG: channelMap keySet: . . . 
[2021-11-29 10:53:55,943] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,943] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,944] DEBUG: [0,1][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,944] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,945] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:53:55,945] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:53:55,945] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-11-29 10:53:55,945] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-11-29 10:53:55,946] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-11-29 10:53:55,946] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,947] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:53:55,948] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:53:55,948] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:53:55,949] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-11-29 10:53:55,949] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,950] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-11-29 10:53:55,950] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-11-29 10:53:55,950] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:55,950] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-11-29 10:53:55,950] DEBUG: >> msg.memoization_label: 3
[2021-11-29 10:53:55,953] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-11-29 10:53:55,955] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-11-29 10:53:55,955] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-11-29 10:53:55,956] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,956] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-11-29 10:53:55,957] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-11-29 10:53:55,956] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-11-29 10:53:55,957] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:53:55,957] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-11-29 10:53:55,957] DEBUG: channelMap keySet: . . . . 
[2021-11-29 10:53:55,958] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-11-29 10:53:55,958] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-11-29 10:53:55,959] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-11-29 10:53:55,959] DEBUG: [0,1][0,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,959] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,960] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:53:55,960] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:53:55,960] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:53:55,961] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-11-29 10:53:55,961] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-11-29 10:53:55,960] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,961] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:53:55,962] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-11-29 10:53:55,962] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:53:55,963] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:53:55,963] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,963] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,964] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,964] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:53:55,964] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-11-29 10:53:55,965] DEBUG: >> msg.memoization_label: 0
[2021-11-29 10:53:55,966] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-11-29 10:53:55,966] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-11-29 10:53:55,966] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:53:55,966] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-11-29 10:53:55,969] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,969] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,969] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-11-29 10:53:55,970] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,970] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-11-29 10:53:55,970] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-11-29 10:53:55,971] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:55,971] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-11-29 10:53:55,971] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-11-29 10:53:55,972] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-11-29 10:53:55,972] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:53:55,973] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-11-29 10:53:55,973] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:53:55,973] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-11-29 10:53:55,973] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 3
[2021-11-29 10:53:55,973] DEBUG: result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:53:55,974] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,974] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:55,975] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-11-29 10:53:55,975] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:53:55,976] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-11-29 10:53:55,976] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-11-29 10:53:55,976] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,976] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-11-29 10:53:55,977] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:53:55,977] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:53:55,978] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:53:55,978] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:53:55,978] DEBUG: channelMap keySet: . . . . . 
[2021-11-29 10:53:55,979] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,979] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-11-29 10:53:55,979] DEBUG: [0,1][0,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,979] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-11-29 10:53:55,980] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-11-29 10:53:55,980] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:53:55,980] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-11-29 10:53:55,981] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-11-29 10:53:55,980] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:55,981] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-11-29 10:53:55,982] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-11-29 10:53:55,981] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:53:55,982] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-11-29 10:53:55,983] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:53:55,985] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-11-29 10:53:55,983] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:53:55,986] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,986] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-11-29 10:53:55,986] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-11-29 10:53:55,987] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:53:55,987] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:53:55,987] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:55,987] DEBUG: channelMap keySet: . . . . . . 
[2021-11-29 10:53:55,988] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-11-29 10:53:55,989] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-11-29 10:53:55,989] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:53:55,989] DEBUG: [0,1][1,2][0,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:55,989] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:53:55,989] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-11-29 10:53:55,990] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-11-29 10:53:55,990] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-11-29 10:53:55,991] DEBUG: MemoizationThread: promise by: [0,1][0,2][1,2]
[2021-11-29 10:53:55,991] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-11-29 10:53:55,991] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-11-29 10:53:55,992] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:55,992] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-11-29 10:53:55,992] DEBUG: 
[2021-11-29 10:53:55,993] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:53:55,993] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:53:55,993] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-11-29 10:53:55,994] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:53:55,994] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-11-29 10:53:55,993] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was None result.
[2021-11-29 10:53:55,995] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:53:55,995] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 1 memoized result: None
[2021-11-29 10:53:55,995] DEBUG: MemoizationController: pairing names after add
[2021-11-29 10:53:55,996] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-11-29 10:53:55,996] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-11-29 10:53:55,997] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:53:55,997] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-11-29 10:53:55,997] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-11-29 10:53:55,998] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-11-29 10:53:55,998] DEBUG: result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:55,998] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-11-29 10:53:55,999] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-11-29 10:53:56,001] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,001] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:53:56,002] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:53:56,002] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:53:56,002] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][0,2]
[2021-11-29 10:53:56,003] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][0,2]
[2021-11-29 10:53:56,003] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,003] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-11-29 10:53:56,004] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was stop.
[2021-11-29 10:53:56,004] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-11-29 10:53:56,005] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:56,005] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:53:56,006] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-11-29 10:53:56,006] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:53:56,006] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:53:56,007] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 4
[2021-11-29 10:53:56,007] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,007] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-11-29 10:53:56,008] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][1,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000257F0905FA0>]>
[2021-11-29 10:53:56,008] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 1 delivered result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,008] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-11-29 10:53:56,009] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:53:56,009] DEBUG: Deliver starting Executor for: [0,1][1,2][0,2] problem.become_executor: False problem.did_input: True
[2021-11-29 10:53:56,009] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-11-29 10:53:56,010] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:56,010] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:53:56,010] DEBUG: Deliver end promised Results: 
[2021-11-29 10:53:56,011] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-11-29 10:53:56,011] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:56,011] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,012] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-11-29 10:53:56,012] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-11-29 10:53:56,012] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-11-29 10:53:56,013] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-11-29 10:53:56,013] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-11-29 10:53:56,014] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:53:56,013] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:56,014] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-11-29 10:53:56,014] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:53:56,017] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:53:56,017] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:53:56,018] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-11-29 10:53:56,018] DEBUG: 
[2021-11-29 10:53:56,018] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:53:56,018] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 3
[2021-11-29 10:53:56,019] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,018] DEBUG: channelMap keySet: . . . . . . 
[2021-11-29 10:53:56,020] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:53:56,020] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,020] DEBUG: [0,1][1,2][0,2]: >> Using `memoization_label_on_restart` for memoization label.
[2021-11-29 10:53:56,020] WARNING: MemoizationController already initialized.
[2021-11-29 10:53:56,020] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:53:56,021] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-11-29 10:53:56,021] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:53:56,022] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-11-29 10:53:56,022] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-11-29 10:53:56,022] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-11-29 10:53:56,023] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:53:56,023] DEBUG: >> msg.memoization_label: 1
[2021-11-29 10:53:56,022] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-11-29 10:53:56,024] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-11-29 10:53:56,024] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:53:56,024] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-11-29 10:53:56,025] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,025] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][0,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-11-29 10:53:56,026] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:53:56,026] DEBUG: channelMap keySet: . . . . . . . 
[2021-11-29 10:53:56,026] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,027] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][0,2]
[2021-11-29 10:53:56,027] DEBUG: [0,1][1,2][1,2]: >> Creating memoization label via `memoizeIDLabeler()`
[2021-11-29 10:53:56,027] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-11-29 10:53:56,027] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,027] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-11-29 10:53:56,028] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-11-29 10:53:56,029] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-11-29 10:53:56,029] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][0,2] was memoized result
[2021-11-29 10:53:56,030] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:53:56,029] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-11-29 10:53:56,030] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:53:56,030] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,030] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-11-29 10:53:56,033] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:53:56,033] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-11-29 10:53:56,033] DEBUG: else in template: For Problem: (ID: [0,1][1,2][0,2], value: 0, < WukongProblem < memoization_label_on_restart = 1> >) Memoized result: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:53:56,034] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-11-29 10:53:56,034] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,035] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-11-29 10:53:56,035] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-11-29 10:53:56,035] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:53:56,036] DEBUG: >> msg.memoization_label: 2
[2021-11-29 10:53:56,036] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-11-29 10:53:56,036] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-11-29 10:53:56,037] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:53:56,037] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][1,2]
[2021-11-29 10:53:56,037] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:56,038] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-11-29 10:53:56,038] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-11-29 10:53:56,039] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,038] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:53:56,039] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-11-29 10:53:56,040] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-11-29 10:53:56,039] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-11-29 10:53:56,040] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-11-29 10:53:56,041] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 2 memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:53:56,041] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) Memoized result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:53:56,041] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:53:56,042] DEBUG: 
[2021-11-29 10:53:56,042] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:53:56,042] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:53:56,043] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,043] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-11-29 10:53:56,043] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-11-29 10:53:56,044] DEBUG: 
[2021-11-29 10:53:56,044] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:53:56,044] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:53:56,044] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:53:56,045] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-11-29 10:53:56,046] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:53:56,046] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:53:56,046] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2]"
[2021-11-29 10:53:56,046] DEBUG: Fan-In: ID: [0,1][0,2][1,2]: FanInID: [1,1]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,047] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-11-29 10:53:56,049] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-11-29 10:53:56,049] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:53:56,050] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:56,051] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:53:56,050] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:53:56,051] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-11-29 10:53:56,051] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-11-29 10:53:56,052] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-11-29 10:53:56,052] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 2
[2021-11-29 10:53:56,053] DEBUG: 
[2021-11-29 10:53:56,053] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,053] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:53:56,054] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 1)
[2021-11-29 10:53:56,054] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-11-29 10:53:56,054] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:53:56,055] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:53:56,055] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:56,055] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:53:56,055] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-11-29 10:53:56,056] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:53:56,056] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-11-29 10:53:56,056] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 1
[2021-11-29 10:53:56,057] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:53:56,057] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,058] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:53:56,058] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:53:56,058] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-11-29 10:53:56,059] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-11-29 10:53:56,059] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:53:56,059] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:53:56,060] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
 
[2021-11-29 10:53:56,061] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,061] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-11-29 10:53:56,061] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-11-29 10:53:56,062] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:53:56,062] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-11-29 10:53:56,062] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:53:56,063] DEBUG: 
[2021-11-29 10:53:56,065] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:53:56,065] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2] /value: 2)
[2021-11-29 10:53:56,066] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:53:56,066] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:53:56,066] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-11-29 10:53:56,067] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:53:56,067] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-11-29 10:53:56,067] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:53:56,068] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:53:56,068] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:53:56,068] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-11-29 10:53:56,069] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-11-29 10:53:56,069] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-11-29 10:53:56,069] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: Wukong Result: (ID: [0,1][1,2][1,2] /value: 3)
[2021-11-29 10:53:56,070] DEBUG: [0,1][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-11-29 10:53:56,070] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-11-29 10:53:56,070] DEBUG: [0,1][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-11-29 10:53:56,071] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,071] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-11-29 10:53:56,072] DEBUG: MemoizationController: pairing names after remove
[2021-11-29 10:53:56,072] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][1,2] pairingNames.size: 0
[2021-11-29 10:53:56,072] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:53:56,072] DEBUG: Disabling memoization thread now...
[2021-11-29 10:53:56,073] DEBUG: MemoizationThread disabled.
[2021-11-29 10:53:56,073] DEBUG: 
[2021-11-29 10:53:56,074] DEBUG: [0,1][1,2][1,2]: Fibonacci(4) = 3
[2021-11-29 10:53:56,074] DEBUG: 
[2021-11-29 10:53:56,074] DEBUG: [0,1][1,2][1,2]: Verifying ....... 
[2021-11-29 10:53:58,089] DEBUG: Verified.
[2021-11-29 10:54:37,687] DEBUG: Running DivideandConquerFibonacci
[2021-11-29 10:54:37,687] DEBUG: INPUT_THRESHOLD is: 0
[2021-11-29 10:54:37,687] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-11-29 10:54:37,687] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-11-29 10:54:37,687] DEBUG: n: 4
[2021-11-29 10:54:37,687] DEBUG: memoize is: False
[2021-11-29 10:54:37,687] DEBUG: Root Problem: (ID: None, value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,688] DEBUG: >> Starting Memoization Controller now...
[2021-11-29 10:54:37,688] DEBUG: Initial pairing name: "[0,1]"
[2021-11-29 10:54:37,688] DEBUG: >> Memoization Thread has started running...
[2021-11-29 10:54:37,688] DEBUG: >> Memoization Controller started successfully!
[2021-11-29 10:54:37,688] DEBUG: >> Memoization Thread awaiting message...
[2021-11-29 10:54:37,688] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-11-29 10:54:37,688] DEBUG: [0,1] Calling problem.divide()
[2021-11-29 10:54:37,688] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-11-29 10:54:37,689] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:54:37,689] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-11-29 10:54:37,689] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-11-29 10:54:37,689] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,689] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,689] DEBUG: [0,1] Calling problem.Fanout()
[2021-11-29 10:54:37,689] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-11-29 10:54:37,689] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,689] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-11-29 10:54:37,689] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,690] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-11-29 10:54:37,690] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,690] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-11-29 10:54:37,690] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-11-29 10:54:37,690] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-11-29 10:54:37,690] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,690] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-11-29 10:54:37,690] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-11-29 10:54:37,690] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-11-29 10:54:37,690] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-11-29 10:54:37,690] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:54:37,691] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,691] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-11-29 10:54:37,691] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,691] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,691] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,691] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-11-29 10:54:37,691] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,692] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,692] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-11-29 10:54:37,692] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,692] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-11-29 10:54:37,692] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,692] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-11-29 10:54:37,692] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,693] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,693] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,694] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-11-29 10:54:37,693] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-11-29 10:54:37,694] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,695] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-11-29 10:54:37,695] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-11-29 10:54:37,695] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-11-29 10:54:37,695] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-11-29 10:54:37,696] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:54:37,696] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,697] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,697] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-11-29 10:54:37,697] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-11-29 10:54:37,697] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-11-29 10:54:37,698] DEBUG: [0,1][0,2][1,2]: Sequential: [0,1][0,2][1,2] result.value: 1
[2021-11-29 10:54:37,698] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-11-29 10:54:37,699] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:54:37,699] DEBUG: [0,1][0,2][1,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:54:37,699] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-11-29 10:54:37,699] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,701] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:54:37,701] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][0,2]"
[2021-11-29 10:54:37,701] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-11-29 10:54:37,704] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-11-29 10:54:37,704] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,705] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-11-29 10:54:37,704] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:54:37,706] DEBUG: [0,1][1,2][1,2] Calling problem.divide()
[2021-11-29 10:54:37,706] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-11-29 10:54:37,706] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:54:37,706] DEBUG: [0,1][1,2][1,2]: Divide: fibonacci run: value: 2
[2021-11-29 10:54:37,706] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-11-29 10:54:37,706] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][0,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,707] DEBUG: [0,1][1,2][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,707] DEBUG: >> Local problem label start of Fanin: "[0,1][0,2][1,2]"
[2021-11-29 10:54:37,707] DEBUG: [0,1][1,2][1,2]: Divide: problem_id: [0,1][1,2][1,2]
[2021-11-29 10:54:37,707] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:54:37,708] DEBUG: [0,1][1,2][1,2]: divide: minus_1: (ID: None, value: 1, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,708] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-11-29 10:54:37,709] DEBUG: [0,1][1,2][1,2]: divide: minus_2: (ID: None, value: 0, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,708] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-11-29 10:54:37,710] DEBUG: [0,1][1,2][1,2] Calling problem.Fanout()
[2021-11-29 10:54:37,710] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:54:37,711] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,711] DEBUG: >> [0,1][1,2][1,2]: generated fan-out ID "[0,1][1,2][1,2][0,2]"
[2021-11-29 10:54:37,712] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][0,2]"
[2021-11-29 10:54:37,712] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:54:37,713] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-11-29 10:54:37,713] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-11-29 10:54:37,714] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-11-29 10:54:37,715] DEBUG: 
[2021-11-29 10:54:37,715] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,715] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-11-29 10:54:37,715] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:54:37,716] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-11-29 10:54:37,718] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:54:37,718] DEBUG: 
[2021-11-29 10:54:37,719] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,719] INFO: [0,1][1,2][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >)
[2021-11-29 10:54:37,719] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:54:37,719] DEBUG: [0,1][1,2][1,2]: Fanout: parent stack (len = 2): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,720] DEBUG: [0,1][1,2][1,2]: Fanout: subProblem stack (len = 3): (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,720] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] invoking new right executor: [0,1][1,2][1,2][0,2]
[2021-11-29 10:54:37,721] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:54:37,721] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:54:37,721] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,722] DEBUG: >> [0,1][1,2][1,2]: Become fanout ID: [0,1][1,2][1,2][1,2]
[2021-11-29 10:54:37,723] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][0,2] has started running!
[2021-11-29 10:54:37,723] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-11-29 10:54:37,723] DEBUG: [0,1][1,2][1,2][0,2]: Sequential: [0,1][1,2][1,2][0,2] result.value: 0
[2021-11-29 10:54:37,724] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-11-29 10:54:37,724] DEBUG: [0,1][1,2][1,2][0,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 0)
[2021-11-29 10:54:37,724] DEBUG: 
[2021-11-29 10:54:37,725] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,725] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:54:37,725] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:54:37,725] DEBUG: Wukong Result: (ID: [0,1][0,2][0,2] /value: 0)
[2021-11-29 10:54:37,726] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-11-29 10:54:37,726] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:54:37,727] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-11-29 10:54:37,726] DEBUG: [0,1][1,2][1,2]: Fanout: ID: [0,1][1,2][1,2] becoming left executor: [0,1][1,2][1,2][1,2]
[2021-11-29 10:54:37,728] WARNING: MemoizationController already initialized.
[2021-11-29 10:54:37,728] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:54:37,728] DEBUG: [0,1][1,2][1,2][0,2]: **********************Start Fanin operation:
[2021-11-29 10:54:37,728] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2][1,2] has started running!
[2021-11-29 10:54:37,729] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2]
[2021-11-29 10:54:37,729] DEBUG: [0,1][1,2][1,2][1,2]: Sequential: [0,1][1,2][1,2][1,2] result.value: 1
[2021-11-29 10:54:37,730] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: become_executor: False
[2021-11-29 10:54:37,730] DEBUG: [0,1][1,2][1,2][1,2] base case: result before ProcessBaseCase(): Wukong Result: (ID: None /value: 1)
[2021-11-29 10:54:37,730] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,731] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][0,2]"
[2021-11-29 10:54:37,731] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1) and after put is Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:54:37,731] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][0,2]", x = 1, y = 2
[2021-11-29 10:54:37,731] DEBUG: [0,1][1,2][1,2][1,2]: **********************Start Fanin operation:
[2021-11-29 10:54:37,734] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2]
[2021-11-29 10:54:37,734] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: become_executor: True
[2021-11-29 10:54:37,735] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2], value: 3, < WukongProblem < memoization_label_on_restart = None> >) (ID: [0,1][1,2][1,2], value: 2, < WukongProblem < memoization_label_on_restart = None> >) 
[2021-11-29 10:54:37,735] DEBUG: >> Local problem label start of Fanin: "[0,1][1,2][1,2][1,2]"
[2021-11-29 10:54:37,735] DEBUG: [0,1][0,2][1,2]: Local problem label BEFORE chopping: "[0,1][0,2][1,2]"
[2021-11-29 10:54:37,735] DEBUG: >> returning fanin label "[0,1][1,2][3,2]", parent problem label = "[0,1][1,2][1,2][1,2]", x = 1, y = 2
[2021-11-29 10:54:37,736] DEBUG: [0,1][0,2][1,2]: Local problem label AFTER chopping: "[0,1][0,2]"
[2021-11-29 10:54:37,736] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-11-29 10:54:37,736] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] parentProblem ID: [0,1][1,2][1,2]
[2021-11-29 10:54:37,737] DEBUG: [0,1][1,2][1,2][0,2]: faninId: [0,1][1,2][3,2]
[2021-11-29 10:54:37,737] DEBUG: [0,1][1,2][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-11-29 10:54:37,738] DEBUG: 
[2021-11-29 10:54:37,738] DEBUG: [0,1][1,2][1,2][0,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,738] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2][1,2]
[2021-11-29 10:54:37,738] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-11-29 10:54:37,739] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][1,2][3,2]
[2021-11-29 10:54:37,739] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-11-29 10:54:37,740] DEBUG: 
[2021-11-29 10:54:37,740] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2][1,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,740] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:54:37,741] DEBUG: isLastFanInExecutor: Writing to [0,1][1,2][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-11-29 10:54:37,741] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-11-29 10:54:37,742] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:54:37,742] DEBUG: 
[2021-11-29 10:54:37,742] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:54:37,742] DEBUG: Fan-In: ID: [0,1][1,2][1,2][0,2]: FanInID: [0,1][1,2][3,2]: is not become Executor and its value was: Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0) and after put is Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-11-29 10:54:37,743] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:54:37,743] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][1,2][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:54:37,744] DEBUG: Wukong Result: (ID: [0,1][1,2][1,2][0,2] /value: 0)
[2021-11-29 10:54:37,744] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-11-29 10:54:37,744] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:54:37,745] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
was: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1) and after put is Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:54:37,745] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-11-29 10:54:37,746] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2][1,2]"
[2021-11-29 10:54:37,746] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2][1,2]"
[2021-11-29 10:54:37,746] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-11-29 10:54:37,747] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-11-29 10:54:37,747] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [0,1][3,2]
[2021-11-29 10:54:37,747] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-11-29 10:54:37,748] DEBUG: 
[2021-11-29 10:54:37,750] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-11-29 10:54:37,750] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 1)
[2021-11-29 10:54:37,751] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:54:37,751] DEBUG: Wukong Result: (ID: [0,1][1,2][0,2] /value: 1)
[2021-11-29 10:54:37,751] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-11-29 10:54:37,752] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:54:37,752] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-11-29 10:54:37,752] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 2)
[2021-11-29 10:54:37,753] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2][1,2]"
[2021-11-29 10:54:37,753] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1][1,2]"
[2021-11-29 10:54:37,753] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-11-29 10:54:37,754] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] parentProblem ID: [0,1]
[2021-11-29 10:54:37,754] DEBUG: [0,1][1,2][1,2][1,2]: faninId: [1,1]
[2021-11-29 10:54:37,754] DEBUG: [0,1][1,2][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-11-29 10:54:37,755] DEBUG: 
[2021-11-29 10:54:37,755] DEBUG: [0,1][1,2][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-11-29 10:54:37,756] DEBUG: isLastFanInExecutor: Writing to [1,1] the value Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 2)
[2021-11-29 10:54:37,756] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-11-29 10:54:37,756] DEBUG: Wukong Result: (ID: [0,1][0,2][1,2] /value: 1)
[2021-11-29 10:54:37,757] DEBUG: [0,1][1,2][1,2][1,2]: ID: [0,1][1,2][1,2][1,2]: call combine ***************
[2021-11-29 10:54:37,757] DEBUG: [0,1][1,2][1,2][1,2]: CALLING COMBINE NOW...
[2021-11-29 10:54:37,757] DEBUG: [0,1][1,2][1,2][1,2]: combine: firstValue: 1 secondValue: 2 combination.value: 3
[2021-11-29 10:54:37,758] DEBUG: [0,1][1,2][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2][1,2], result: Wukong Result: (ID: [0,1][1,2][1,2][1,2] /value: 3)
[2021-11-29 10:54:37,758] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label BEFORE chopping: "[0,1][1,2]"
[2021-11-29 10:54:37,758] DEBUG: [0,1][1,2][1,2][1,2]: Local problem label AFTER chopping: "[0,1]"
[2021-11-29 10:54:37,759] DEBUG: Disabling memoization thread now...
[2021-11-29 10:54:37,759] DEBUG: MemoizationThread disabled.
[2021-11-29 10:54:37,759] DEBUG: 
[2021-11-29 10:54:37,760] DEBUG: [0,1][1,2][1,2][1,2]: Fibonacci(4) = 3
[2021-11-29 10:54:37,760] DEBUG: 
[2021-11-29 10:54:37,761] DEBUG: [0,1][1,2][1,2][1,2]: Verifying ....... 
[2021-11-29 10:54:39,775] DEBUG: Verified.

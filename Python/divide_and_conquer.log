[2021-07-30 14:43:56,956] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 14:43:56,956] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 14:43:56,956] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 14:43:56,956] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 14:43:56,957] DEBUG: n: 4
[2021-07-30 14:43:56,957] DEBUG: memoize is: True
[2021-07-30 14:43:56,957] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 14:43:56,958] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 14:43:56,958] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 14:43:56,959] DEBUG: >> Memoization Thread has started running...
[2021-07-30 14:43:56,959] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 14:43:56,959] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:56,959] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 14:43:56,960] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 14:43:56,960] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 14:43:56,960] DEBUG: channelMap keySet: . 
[2021-07-30 14:43:56,961] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:43:56,961] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 14:43:56,962] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 14:43:56,962] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1], problem_or_result_id = [0,1], memoization_label: 4>
[2021-07-30 14:43:56,962] DEBUG: >> msg.memoization_label: 4
[2021-07-30 14:43:56,962] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 14:43:56,962] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 14:43:56,963] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:56,963] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 14:43:56,963] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 14:43:56,963] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 14:43:56,963] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 14:43:56,963] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 14:43:56,964] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:43:56,964] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 14:43:56,964] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:43:56,964] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 14:43:56,964] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 14:43:56,964] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 14:43:56,964] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 14:43:56,965] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 14:43:56,965] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 14:43:56,965] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:43:56,965] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1][0,2], memoization_label: None>
[2021-07-30 14:43:56,966] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 14:43:56,966] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:56,966] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:43:56,966] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:43:56,966] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 14:43:56,967] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
zed.
[2021-07-30 14:43:56,967] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]

[2021-07-30 14:43:56,968] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1][1,2], memoization_label: None>
[2021-07-30 14:43:56,969] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 14:43:56,969] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 14:43:56,969] DEBUG: channelMap keySet: . . 
[2021-07-30 14:43:56,969] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:56,970] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:43:56,971] DEBUG: 	MemoizationController: [0,1][1,2]
0,1][0,2] memoized_label: 2
[2021-07-30 14:43:56,971] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 14:43:56,972] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:56,972] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2], memoization_label: 2>
[2021-07-30 14:43:56,973] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:43:56,973] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 14:43:56,973] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 14:43:56,974] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 14:43:56,975] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
ge_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1], memoization_label: None>
[2021-07-30 14:43:56,975] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:43:56,976] DEBUG: 	Memoization Controller: [0,1][1,2]
][0,2] memoized_label: 2 memoized result: None
[2021-07-30 14:43:56,976] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 14:43:56,981] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 14:43:56,983] DEBUG: >> Memoization Thread awaiting message...

[2021-07-30 14:43:56,983] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]

[2021-07-30 14:43:56,984] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
ng!
[2021-07-30 14:43:56,985] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
name "[0,1][1,2]"...
[2021-07-30 14:43:56,986] DEBUG: MemoizationController: pair: [0,1][1,2]
alue: 1)
[2021-07-30 14:43:56,986] DEBUG: channelMap keySet: . . . 
: (ID: None, value: 0)
[2021-07-30 14:43:56,987] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 14:43:56,988] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
,2]"
[2021-07-30 14:43:56,989] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 14:43:56,990] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 14:43:56,990] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2], memoization_label: 3>
[2021-07-30 14:43:56,991] DEBUG: >> msg.memoization_label: 3
m stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:43:56,991] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 14:43:56,992] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 14:43:56,993] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 14:43:56,996] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
ge_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: None>
[2021-07-30 14:43:56,996] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 14:43:56,997] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:56,998] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 14:43:56,999] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 14:43:56,999] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:43:57,000] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,000] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 14:43:57,001] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:43:57,001] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 14:43:57,001] WARNING: MemoizationController already initialized.
[2021-07-30 14:43:57,001] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 14:43:57,001] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 14:43:57,002] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 14:43:57,003] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 14:43:57,004] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 14:43:57,005] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
age < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: None>
[2021-07-30 14:43:57,006] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 14:43:57,006] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:43:57,007] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:43:57,008] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:57,009] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:43:57,012] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 14:43:57,013] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:43:57,013] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:43:57,013] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,014] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
ssage_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: None>
[2021-07-30 14:43:57,014] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 14:43:57,015] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:57,015] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:43:57,015] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:43:57,016] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:43:57,016] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:43:57,016] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:43:57,017] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 14:43:57,018] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: 0>
[2021-07-30 14:43:57,018] WARNING: MemoizationController already initialized.
2]
[2021-07-30 14:43:57,018] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:43:57,019] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 14:43:57,019] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 14:43:57,019] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 14:43:57,021] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 14:43:57,021] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 14:43:57,022] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 14:43:57,023] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
sageType.REMOVEPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2], memoization_label: None>
[2021-07-30 14:43:57,023] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 14:43:57,024] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:43:57,024] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 14:43:57,027] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:43:57,028] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:43:57,028] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
rocessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 14:43:57,028] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 14:43:57,029] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:43:57,030] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:43:57,031] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 4
[2021-07-30 14:43:57,031] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,031] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 14:43:57,031] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2][1,2], memoization_label: None>
[2021-07-30 14:43:57,032] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
unning!
[2021-07-30 14:43:57,033] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:43:57,033] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:43:57,034] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 14:43:57,034] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:43:57,035] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:43:57,035] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:43:57,035] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:43:57,036] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 14:43:57,036] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,037] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
sage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 1>
[2021-07-30 14:43:57,038] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 14:43:57,038] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 14:43:57,039] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 14:43:57,039] DEBUG: >> Memoization Thread awaiting message...
[0,2] got ack.
[2021-07-30 14:43:57,040] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 14:43:57,040] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: 0>
[2021-07-30 14:43:57,043] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:43:57,044] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:43:57,045] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 14:43:57,045] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:43:57,045] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:43:57,045] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 14:43:57,046] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,046] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2]
[2021-07-30 14:43:57,047] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2], memoization_label: None>
[2021-07-30 14:43:57,047] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:43:57,048] DEBUG: MemoizationController: pairing names after remove
: 1)
[2021-07-30 14:43:57,047] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:43:57,048] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:43:57,049] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:43:57,050] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:43:57,051] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:43:57,051] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
2] parentProblem ID: [1,1]
[2021-07-30 14:43:57,052] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
arentProblem.become_executor: False
[2021-07-30 14:43:57,052] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,053] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:43:57,053] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 1>
[2021-07-30 14:43:57,054] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:43:57,054] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:43:57,054] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:43:57,055] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:43:57,055] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:43:57,055] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:43:57,059] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:43:57,059] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 14:43:57,059] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:43:57,060] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 14:43:57,061] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 14:43:57,061] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,061] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:43:57,061] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 1>
[2021-07-30 14:43:57,062] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000019F30FE5670>]>
[2021-07-30 14:43:57,062] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 14:43:57,063] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,063] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:43:57,064] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:43:57,065] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:43:57,065] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:43:57,065] DEBUG: Deliver end promised Results: 
[2021-07-30 14:43:57,066] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:43:57,066] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:43:57,066] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,067] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:43:57,067] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:43:57,068] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: None>
[2021-07-30 14:43:57,068] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 14:43:57,068] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:43:57,069] DEBUG: 
moizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:43:57,069] DEBUG: MemoizationController: pairing names after remove
ing isLastFanInExector() now...
[2021-07-30 14:43:57,071] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,071] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:43:57,074] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:43:57,075] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
e: 0)
[2021-07-30 14:43:57,075] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
ames.size: 3
[2021-07-30 14:43:57,076] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:43:57,077] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,077] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 14:43:57,077] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2][1,2], problem_or_result_id = [0,1][1,2][1,2], memoization_label: 2>
[2021-07-30 14:43:57,078] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 14:43:57,078] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,078] DEBUG: >> msg.memoization_label: 2
em_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 14:43:57,079] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:43:57,080] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:43:57,081] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,082] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
][1,2][1,2]
[2021-07-30 14:43:57,083] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:43:57,084] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
sage_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 0>
[2021-07-30 14:43:57,085] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:43:57,085] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:43:57,085] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:43:57,086] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 14:43:57,086] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:43:57,087] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 3>
[2021-07-30 14:43:57,089] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:43:57,090] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:43:57,090] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,091] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:43:57,091] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:43:57,092] DEBUG: >> Memoization Thread awaiting message...
label = "[0,1]"
[2021-07-30 14:43:57,093] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 14:43:57,093] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2]
[2021-07-30 14:43:57,093] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:43:57,094] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:43:57,094] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:43:57,094] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:43:57,095] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:43:57,095] DEBUG: 
[2021-07-30 14:43:57,096] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:43:57,096] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:43:57,096] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,096] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:43:57,097] DEBUG: 
[2021-07-30 14:43:57,097] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:43:57,097] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:43:57,098] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:43:57,098] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,099] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:43:57,099] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:43:57,099] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
put: executor isLastFanInExecutor 
[2021-07-30 14:43:57,100] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:43:57,100] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:43:57,100] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:43:57,101] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
"
[2021-07-30 14:43:57,103] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:43:57,103] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 14:43:57,104] DEBUG: >> [0,1]: returning memoization label: "4"
 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:43:57,105] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
onMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 4>
[2021-07-30 14:43:57,106] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:43:57,106] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:43:57,107] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:43:57,107] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
 for 0 promised results: 
[2021-07-30 14:43:57,108] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,109] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 2>
[2021-07-30 14:43:57,109] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000019F30FD1760>]>
[2021-07-30 14:43:57,110] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:43:57,110] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
ised results: 
[2021-07-30 14:43:57,111] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
: True problem.did_input: True
[2021-07-30 14:43:57,111] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:43:57,112] DEBUG: 
MemoizationController already initialized.
[2021-07-30 14:43:57,112] DEBUG: Deliver end promised Results: 
[2021-07-30 14:43:57,112] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:43:57,112] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:43:57,113] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,115] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:43:57,115] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:43:57,115] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
AME, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: None>
[2021-07-30 14:43:57,116] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:43:57,116] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:43:57,117] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:43:57,120] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...

[2021-07-30 14:43:57,120] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 14:43:57,121] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:43:57,121] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:43:57,122] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:43:57,123] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:43:57,123] DEBUG: Disabling memoization thread now...
lem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:43:57,124] DEBUG: MemoizationThread disabled.
 memoization label: "0"
[2021-07-30 14:43:57,125] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 14:43:57,126] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 4>
[2021-07-30 14:43:57,126] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:43:57,127] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1], memoization_label: None, result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2), promised_results = []>
[2021-07-30 14:43:57,128] ERROR: Internal Error: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 4 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2) delivered twice.
[2021-07-30 14:43:57,128] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 14:43:59,135] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 14:44:01,202] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 14:44:01,204] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:01,204] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 14:44:01,204] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:44:01,204] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:01,204] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:31,705] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 14:44:31,706] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 14:44:31,706] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 14:44:31,706] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 14:44:31,706] DEBUG: n: 4
[2021-07-30 14:44:31,706] DEBUG: memoize is: True
[2021-07-30 14:44:31,706] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 14:44:31,707] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 14:44:31,708] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 14:44:31,708] DEBUG: >> Memoization Thread has started running...
[2021-07-30 14:44:31,708] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 14:44:31,708] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,708] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 14:44:31,708] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 14:44:31,708] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 14:44:31,709] DEBUG: channelMap keySet: . 
[2021-07-30 14:44:31,709] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:44:31,709] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 14:44:31,709] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 14:44:31,710] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1], problem_or_result_id = [0,1], memoization_label: 4>
[2021-07-30 14:44:31,710] DEBUG: >> msg.memoization_label: 4
[2021-07-30 14:44:31,710] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 14:44:31,710] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 14:44:31,710] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,710] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 14:44:31,710] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 14:44:31,710] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 14:44:31,711] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 14:44:31,711] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 14:44:31,711] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:44:31,711] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 14:44:31,711] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:44:31,711] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 14:44:31,711] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 14:44:31,712] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 14:44:31,712] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 14:44:31,712] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 14:44:31,713] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 14:44:31,713] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:44:31,714] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1][0,2], memoization_label: None>
[2021-07-30 14:44:31,714] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 14:44:31,715] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:44:31,715] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:44:31,715] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:44:31,716] DEBUG: >> Memoization Thread awaiting message...
 executor: [0,1][0,2]
[2021-07-30 14:44:31,717] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
zed.
[2021-07-30 14:44:31,717] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]

[2021-07-30 14:44:31,718] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1][1,2], memoization_label: None>
[2021-07-30 14:44:31,719] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 14:44:31,719] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 14:44:31,719] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:44:31,720] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:44:31,720] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:44:31,721] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:44:31,721] DEBUG: channelMap keySet: . . 
[2021-07-30 14:44:31,721] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,722] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
onMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1], problem_or_result_id = [0,1], memoization_label: None>
[2021-07-30 14:44:31,723] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 14:44:31,724] DEBUG: 	Memoization Controller: [0,1][1,2]
][0,2] getting ack.
[2021-07-30 14:44:31,724] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 14:44:31,725] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 14:44:31,725] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,725] WARNING: MemoizationController already initialized.
[2021-07-30 14:44:31,726] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
essage_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2], memoization_label: 2>
[2021-07-30 14:44:31,726] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:44:31,729] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 14:44:31,729] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 14:44:31,731] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 14:44:31,731] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,731] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 14:44:31,732] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 14:44:31,732] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 14:44:31,734] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:44:31,735] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 14:44:31,735] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 14:44:31,735] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 14:44:31,736] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
e < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2], memoization_label: 3>
[2021-07-30 14:44:31,737] DEBUG: >> msg.memoization_label: 3
[2021-07-30 14:44:31,737] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
]
[2021-07-30 14:44:31,738] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 14:44:31,738] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,738] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
.
[2021-07-30 14:44:31,739] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 14:44:31,739] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 14:44:31,740] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 14:44:31,741] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 14:44:31,742] DEBUG: [0,1][1,2] Calling problem.divide()
Stack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 14:44:31,746] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:44:31,746] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:44:31,747] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:44:31,747] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: None>
[2021-07-30 14:44:31,748] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 14:44:31,749] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
dd
[2021-07-30 14:44:31,749] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 14:44:31,750] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 14:44:31,751] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 14:44:31,751] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,751] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 14:44:31,752] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 14:44:31,752] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 14:44:31,753] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 14:44:31,753] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:44:31,754] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:44:31,755] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 14:44:31,755] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: None>
[2021-07-30 14:44:31,755] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 14:44:31,756] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 14:44:31,757] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 14:44:31,757] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:44:31,758] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:44:31,761] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:44:31,761] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:44:31,762] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:44:31,762] DEBUG: channelMap keySet: . . . . 
[2021-07-30 14:44:31,762] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,763] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 14:44:31,763] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
sage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: None>
[2021-07-30 14:44:31,764] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 14:44:31,764] WARNING: MemoizationController already initialized.
[2021-07-30 14:44:31,764] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 14:44:31,765] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 14:44:31,764] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 14:44:31,765] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 14:44:31,767] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:44:31,766] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 14:44:31,768] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 14:44:31,768] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:44:31,769] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 14:44:31,769] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:44:31,770] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:44:31,770] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:44:31,770] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 14:44:31,771] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,771] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: 0>
[2021-07-30 14:44:31,772] DEBUG: >> msg.memoization_label: 0
 memoization label: "1"
[2021-07-30 14:44:31,772] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
emoized_label: 1
[2021-07-30 14:44:31,773] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 14:44:31,773] DEBUG: >> Memoization Thread awaiting message...
[0,2] got ack.
[2021-07-30 14:44:31,777] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
pe = MemoizationMessageType.ADDPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2][1,2], memoization_label: None>
[2021-07-30 14:44:31,778] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 14:44:31,778] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:44:31,779] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
,2] result.value: 0
[2021-07-30 14:44:31,780] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 14:44:31,781] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:44:31,781] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
0,2]/value: 0)
[2021-07-30 14:44:31,782] DEBUG: 	MemoizationController: [0,1][0,2]
ation label: "0"
[2021-07-30 14:44:31,783] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:44:31,783] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,784] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
ssage_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][0,2], problem_or_result_id = [0,1][0,2], memoization_label: None>
[2021-07-30 14:44:31,784] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:44:31,784] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:44:31,785] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:44:31,785] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:44:31,786] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:44:31,786] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:44:31,786] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 14:44:31,787] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,787] WARNING: MemoizationController already initialized.
[2021-07-30 14:44:31,787] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
e_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 1>
[2021-07-30 14:44:31,788] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:44:31,789] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
,2][1,2]"...
[2021-07-30 14:44:31,792] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 14:44:31,793] DEBUG: >> Memoization Thread awaiting message...
[0,2] got ack.
[2021-07-30 14:44:31,793] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 14:44:31,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: 0>
[2021-07-30 14:44:31,794] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 14:44:31,794] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 14:44:31,795] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:44:31,796] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 14:44:31,796] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:44:31,797] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 14:44:31,797] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 14:44:31,797] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:44:31,798] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:44:31,798] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 14:44:31,799] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2]
[2021-07-30 14:44:31,799] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,800] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][1,2], problem_or_result_id = [0,1][1,2], memoization_label: None>
[2021-07-30 14:44:31,800] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:44:31,800] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:44:31,800] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:44:31,802] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:44:31,802] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
_label = "[0,1][0,2]"
[2021-07-30 14:44:31,803] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
2] parentProblem ID: [1,1]
[2021-07-30 14:44:31,804] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:44:31,804] DEBUG: 
emoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:44:31,808] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
ow...
[2021-07-30 14:44:31,810] DEBUG: >> Memoization Thread awaiting message...
alue [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:44:31,810] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:44:31,810] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 1>
[2021-07-30 14:44:31,811] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:44:31,812] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:44:31,813] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
,2]"...
[2021-07-30 14:44:31,814] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 14:44:31,814] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:44:31,814] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:44:31,815] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 14:44:31,815] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,815] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 14:44:31,816] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 1>
[2021-07-30 14:44:31,816] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
rdType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000125271CDB20>]>
[2021-07-30 14:44:31,817] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,818] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:44:31,818] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:44:31,819] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2]
[2021-07-30 14:44:31,819] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:44:31,819] DEBUG: Deliver end promised Results: 
[2021-07-30 14:44:31,820] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:44:31,820] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:44:31,821] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,824] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:44:31,825] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][0,2][0,2], problem_or_result_id = [0,1][0,2][0,2], memoization_label: None>
[2021-07-30 14:44:31,825] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:44:31,826] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:44:31,825] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:44:31,827] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 14:44:31,827] DEBUG: 
moizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:44:31,827] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
,2], calling isLastFanInExector() now...
[2021-07-30 14:44:31,828] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,829] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:44:31,829] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
executor isLastFanInExecutor 
[2021-07-30 14:44:31,829] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:44:31,830] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:44:31,831] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,831] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:44:31,831] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2][1,2], problem_or_result_id = [0,1][1,2][1,2], memoization_label: 2>
[2021-07-30 14:44:31,832] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:44:31,832] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 14:44:31,832] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:44:31,833] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 14:44:31,833] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:44:31,834] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,835] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 14:44:31,835] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
][1,2][1,2]
[2021-07-30 14:44:31,839] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,839] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,839] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:44:31,840] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 0>
[2021-07-30 14:44:31,840] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 14:44:31,841] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:44:31,841] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:44:31,842] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:44:31,842] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:44:31,842] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 14:44:31,843] DEBUG: >> Memoization Thread awaiting message...
[1,2] got ack.
[2021-07-30 14:44:31,843] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 3>
[2021-07-30 14:44:31,844] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:44:31,845] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,846] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:44:31,846] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
ised results: 
[2021-07-30 14:44:31,847] DEBUG: >> Memoization Thread awaiting message...
t Fanin operation:
[2021-07-30 14:44:31,848] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2]
[2021-07-30 14:44:31,848] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:44:31,848] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:44:31,849] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:44:31,849] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:44:31,850] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:44:31,850] DEBUG: 
[2021-07-30 14:44:31,850] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:44:31,850] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:44:31,851] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,851] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:44:31,852] DEBUG: 
[2021-07-30 14:44:31,855] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:44:31,855] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:44:31,856] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:44:31,856] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,857] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:44:31,857] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:44:31,857] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
put: executor isLastFanInExecutor 
[2021-07-30 14:44:31,858] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:44:31,858] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:44:31,858] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:44:31,859] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
"
[2021-07-30 14:44:31,860] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
l: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:44:31,861] DEBUG: >> [0,1]: returning memoization label: "4"
 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:44:31,862] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: 4>
[2021-07-30 14:44:31,863] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:44:31,864] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
m/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:44:31,865] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:44:31,865] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,866] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = [0,1][0,2][1,2], problem_or_result_id = [0,1][0,2][1,2], memoization_label: 2>
[2021-07-30 14:44:31,866] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000125271D24F0>]>
[2021-07-30 14:44:31,866] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:44:31,867] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
ised results: 
[2021-07-30 14:44:31,867] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
: True problem.did_input: True
[2021-07-30 14:44:31,872] WARNING: MemoizationController already initialized.
[2021-07-30 14:44:31,871] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:44:31,872] DEBUG: Deliver end promised Results: 
[2021-07-30 14:44:31,872] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:44:31,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,873] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:44:31,874] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = [0,1][1,2][0,2], problem_or_result_id = [0,1][1,2][0,2], memoization_label: None>
[2021-07-30 14:44:31,874] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
0,1][0,2][1,2]/value: 1)
[2021-07-30 14:44:31,875] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:44:31,876] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
anInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:44:31,876] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:44:31,877] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:44:31,878] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
e: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 14:44:31,879] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 14:44:31,879] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:44:31,879] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:31,879] DEBUG: Disabling memoization thread now...
[2021-07-30 14:44:31,881] DEBUG: MemoizationThread disabled.
 memoization label: "0"
[2021-07-30 14:44:31,882] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 14:44:31,882] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:31,882] DEBUG: 
[2021-07-30 14:44:31,882] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = [0,1][1,2][1,2], problem_or_result_id = [0,1][1,2][1,2], memoization_label: 0>
[2021-07-30 14:44:31,882] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:44:31,883] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 14:44:31,888] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:44:31,888] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:44:31,889] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 14:44:31,889] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 14:44:31,890] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:44:31,891] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 14:44:31,891] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:44:31,892] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:44:31,893] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 14:44:31,893] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2]
[2021-07-30 14:44:31,893] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:44:31,894] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:44:31,894] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:44:31,894] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:44:31,895] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 14:44:31,895] DEBUG: 
[2021-07-30 14:44:31,895] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 14:44:31,896] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:44:31,896] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:44:31,896] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:31,897] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 14:44:31,897] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:44:31,898] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 14:44:31,898] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:44:31,899] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:44:31,899] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:44:31,900] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:44:33,892] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 14:44:33,892] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 14:44:33,893] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:44:33,893] DEBUG: 
[2021-07-30 14:44:33,894] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 14:44:33,894] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:44:33,895] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:44:33,895] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,453] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 14:49:47,453] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 14:49:47,453] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 14:49:47,453] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 14:49:47,454] DEBUG: n: 4
[2021-07-30 14:49:47,454] DEBUG: memoize is: True
[2021-07-30 14:49:47,454] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 14:49:47,455] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 14:49:47,455] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 14:49:47,455] DEBUG: >> Memoization Thread has started running...
[2021-07-30 14:49:47,455] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 14:49:47,455] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,455] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 14:49:47,456] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 14:49:47,456] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 14:49:47,456] DEBUG: channelMap keySet: . 
[2021-07-30 14:49:47,456] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:49:47,456] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 14:49:47,457] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 14:49:47,457] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 14:49:47,457] DEBUG: >> msg.memoization_label: 4
[2021-07-30 14:49:47,457] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 14:49:47,457] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 14:49:47,457] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,457] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 14:49:47,457] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 14:49:47,457] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 14:49:47,457] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 14:49:47,458] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 14:49:47,458] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:49:47,458] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 14:49:47,458] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:49:47,458] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 14:49:47,458] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 14:49:47,458] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 14:49:47,458] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 14:49:47,459] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 14:49:47,459] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 14:49:47,459] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:49:47,460] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,460] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 14:49:47,461] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,461] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,461] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:49:47,462] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,462] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 14:49:47,463] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,463] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 14:49:47,463] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 14:49:47,463] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 14:49:47,465] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 14:49:47,464] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 14:49:47,465] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 14:49:47,465] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 14:49:47,466] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,466] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,467] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:49:47,467] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:49:47,467] DEBUG: channelMap keySet: . . 
[2021-07-30 14:49:47,468] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,468] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 14:49:47,468] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:49:47,473] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:49:47,473] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 14:49:47,474] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 14:49:47,474] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 14:49:47,474] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:49:47,475] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 14:49:47,475] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,475] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,475] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 14:49:47,476] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 14:49:47,476] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:49:47,477] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 14:49:47,477] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 14:49:47,478] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 14:49:47,478] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,478] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 14:49:47,478] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 14:49:47,479] DEBUG: channelMap keySet: . . . 
[2021-07-30 14:49:47,479] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 14:49:47,480] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 14:49:47,480] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:49:47,481] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 14:49:47,481] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 14:49:47,482] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 14:49:47,482] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 14:49:47,482] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 14:49:47,483] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 14:49:47,483] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 14:49:47,483] DEBUG: >> msg.memoization_label: 3
[2021-07-30 14:49:47,484] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 14:49:47,484] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 14:49:47,485] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 14:49:47,485] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 14:49:47,488] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 14:49:47,488] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 14:49:47,488] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,489] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 14:49:47,489] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 14:49:47,490] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 14:49:47,490] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 14:49:47,491] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 14:49:47,492] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:49:47,492] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 14:49:47,492] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:49:47,492] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 14:49:47,493] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,493] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:49:47,494] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 14:49:47,494] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 14:49:47,495] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:49:47,495] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,495] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,495] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 14:49:47,496] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 14:49:47,496] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:49:47,497] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 14:49:47,497] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:49:47,498] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 14:49:47,498] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,498] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 14:49:47,499] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 14:49:47,499] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 14:49:47,499] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,499] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:49:47,503] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 14:49:47,504] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:49:47,504] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 14:49:47,504] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 14:49:47,505] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,505] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 14:49:47,506] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 14:49:47,506] DEBUG: channelMap keySet: . . . . 
[2021-07-30 14:49:47,507] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,507] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,508] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:49:47,508] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:49:47,508] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 14:49:47,509] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:49:47,509] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:49:47,509] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,510] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 14:49:47,510] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 14:49:47,510] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 14:49:47,510] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,511] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 14:49:47,511] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 14:49:47,512] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 14:49:47,512] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 14:49:47,512] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,513] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 14:49:47,513] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,514] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 14:49:47,514] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:49:47,515] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:49:47,516] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:49:47,519] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:49:47,519] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 14:49:47,520] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,520] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 14:49:47,520] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:49:47,521] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:49:47,522] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 14:49:47,522] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 14:49:47,522] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 14:49:47,523] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 14:49:47,523] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 14:49:47,523] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 14:49:47,524] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 14:49:47,524] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 14:49:47,525] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:49:47,525] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 14:49:47,526] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:49:47,526] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 14:49:47,527] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:49:47,527] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:49:47,527] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:49:47,528] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:49:47,528] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:49:47,528] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:49:47,529] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 14:49:47,529] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,530] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,530] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 14:49:47,530] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:49:47,531] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:49:47,531] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:49:47,531] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:49:47,532] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:49:47,535] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:49:47,535] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 14:49:47,536] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,536] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,536] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 14:49:47,536] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:49:47,537] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:49:47,538] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 14:49:47,538] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:49:47,538] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 14:49:47,539] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,539] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 14:49:47,540] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 14:49:47,539] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:49:47,540] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 14:49:47,540] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 14:49:47,540] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 14:49:47,542] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 14:49:47,541] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:49:47,543] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 14:49:47,543] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 14:49:47,543] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:49:47,544] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:49:47,544] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 14:49:47,544] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:49:47,544] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:49:47,546] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,546] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,546] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 14:49:47,546] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:49:47,546] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2]
[2021-07-30 14:49:47,550] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:49:47,551] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:49:47,551] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:49:47,552] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:49:47,552] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:49:47,552] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:49:47,552] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:49:47,553] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:49:47,553] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:49:47,554] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 14:49:47,554] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,554] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:49:47,555] DEBUG: 
[2021-07-30 14:49:47,554] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,555] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 14:49:47,556] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:49:47,556] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:49:47,556] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:49:47,557] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:49:47,557] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:49:47,557] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:49:47,558] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:49:47,558] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:49:47,559] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 14:49:47,559] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:49:47,560] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 14:49:47,560] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,561] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 14:49:47,561] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:49:47,561] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 14:49:47,562] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 14:49:47,562] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001D25AE1C490>]>
[2021-07-30 14:49:47,563] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,562] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 14:49:47,567] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:49:47,567] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:49:47,568] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:49:47,568] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2]
[2021-07-30 14:49:47,568] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:49:47,568] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,569] DEBUG: Deliver end promised Results: 
[2021-07-30 14:49:47,569] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:49:47,569] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:49:47,570] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,570] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:49:47,571] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,571] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:49:47,572] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:49:47,571] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:49:47,571] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:49:47,572] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:49:47,572] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 14:49:47,573] DEBUG: 
moizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:49:47,574] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 14:49:47,573] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:49:47,575] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,575] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:49:47,575] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 14:49:47,575] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:49:47,575] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:49:47,576] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:49:47,577] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:49:47,577] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,577] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:49:47,578] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 14:49:47,578] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 14:49:47,578] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 14:49:47,579] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 14:49:47,579] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:49:47,583] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,583] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:49:47,583] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:49:47,584] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 14:49:47,584] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:49:47,585] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,585] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 14:49:47,586] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,586] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:49:47,587] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 14:49:47,586] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:49:47,587] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 14:49:47,587] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:49:47,587] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:49:47,587] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:49:47,588] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 14:49:47,588] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:49:47,588] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,589] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 14:49:47,589] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 14:49:47,589] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:49:47,589] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:49:47,590] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,590] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:49:47,591] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 14:49:47,591] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:49:47,591] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,592] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:49:47,593] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:49:47,593] DEBUG: 
[2021-07-30 14:49:47,593] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:49:47,593] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 14:49:47,594] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,597] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2]
[2021-07-30 14:49:47,598] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:49:47,598] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:49:47,599] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:49:47,599] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:49:47,599] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:49:47,600] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:49:47,600] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:49:47,600] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:49:47,600] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 14:49:47,601] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:49:47,601] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:49:47,601] DEBUG: 
[2021-07-30 14:49:47,602] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:49:47,602] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:49:47,603] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:49:47,603] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:49:47,604] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:49:47,604] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:49:47,605] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 14:49:47,605] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:49:47,605] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:49:47,606] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:49:47,606] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:49:47,606] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:49:47,607] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:49:47,607] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 14:49:47,607] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,608] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,608] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 14:49:47,609] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:49:47,612] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:49:47,613] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:49:47,613] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,614] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:49:47,614] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:49:47,614] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 14:49:47,615] DEBUG: Disabling memoization thread now...
[2021-07-30 14:49:47,615] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:49:47,616] DEBUG: MemoizationThread disabled.
[2021-07-30 14:49:47,616] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 14:49:47,616] DEBUG: 
[2021-07-30 14:49:47,617] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001D25AE0C550>]>
[2021-07-30 14:49:47,617] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 14:49:47,617] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,617] DEBUG: 
[2021-07-30 14:49:47,618] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:49:47,618] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 14:49:47,618] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 14:49:47,619] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:49:47,619] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:49:47,620] WARNING: MemoizationController already initialized.
[2021-07-30 14:49:47,620] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:49:47,620] DEBUG: Deliver end promised Results: 
[2021-07-30 14:49:47,620] DEBUG: 
[2021-07-30 14:49:47,620] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:49:47,621] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:49:47,622] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:49:47,623] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:49:47,622] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,623] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:49:47,623] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:49:47,624] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:49:47,624] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 14:49:47,624] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:49:47,629] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:49:47,629] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 14:49:47,630] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 2 secondValue: 2 combination.value: 4
[2021-07-30 14:49:47,630] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:49:47,631] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 14:49:47,632] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:49:47,632] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 14:49:47,633] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:49:49,623] DEBUG: Error. Expected value: 3, actual value: 4
[2021-07-30 14:49:49,623] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 14:49:49,624] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 14:49:49,624] DEBUG: 
[2021-07-30 14:49:49,625] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 14:49:49,625] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:49:49,626] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 14:49:49,626] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 14:50:22,028] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 14:50:22,028] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 14:50:22,028] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 14:50:22,028] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 14:50:22,028] DEBUG: n: 4
[2021-07-30 14:50:22,028] DEBUG: memoize is: True
[2021-07-30 14:50:22,029] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 14:50:22,030] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 14:50:22,030] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 14:50:22,030] DEBUG: >> Memoization Thread has started running...
[2021-07-30 14:50:22,030] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 14:50:22,030] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,030] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 14:50:22,030] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 14:50:22,031] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 14:50:22,031] DEBUG: channelMap keySet: . 
[2021-07-30 14:50:22,031] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:50:22,031] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 14:50:22,031] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 14:50:22,031] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 14:50:22,031] DEBUG: >> msg.memoization_label: 4
[2021-07-30 14:50:22,031] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 14:50:22,031] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 14:50:22,031] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 14:50:22,031] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,031] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 14:50:22,031] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 14:50:22,031] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 14:50:22,032] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 14:50:22,032] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:50:22,032] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 14:50:22,032] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 14:50:22,032] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 14:50:22,032] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 14:50:22,032] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 14:50:22,032] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 14:50:22,033] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 14:50:22,033] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 14:50:22,033] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:50:22,034] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,034] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 14:50:22,035] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,035] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,035] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:50:22,036] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,036] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 14:50:22,040] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,040] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 14:50:22,041] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 14:50:22,041] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 14:50:22,042] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 14:50:22,042] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 14:50:22,043] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 14:50:22,043] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 14:50:22,043] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,044] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:50:22,044] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,045] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 14:50:22,045] DEBUG: channelMap keySet: . . 
[2021-07-30 14:50:22,045] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,046] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:50:22,046] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 14:50:22,047] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 14:50:22,047] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:50:22,048] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 14:50:22,048] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:50:22,048] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 14:50:22,049] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 14:50:22,049] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,049] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,049] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 14:50:22,050] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 14:50:22,050] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:50:22,051] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 14:50:22,051] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 14:50:22,052] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 14:50:22,055] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,055] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 14:50:22,056] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 14:50:22,056] DEBUG: channelMap keySet: . . . 
[2021-07-30 14:50:22,056] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 14:50:22,058] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:50:22,058] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 14:50:22,059] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 14:50:22,059] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 14:50:22,059] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 14:50:22,059] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 14:50:22,060] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 14:50:22,060] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 14:50:22,061] DEBUG: >> msg.memoization_label: 3
[2021-07-30 14:50:22,061] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 14:50:22,061] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 14:50:22,062] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 14:50:22,062] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 14:50:22,063] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 14:50:22,063] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,063] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 14:50:22,063] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 14:50:22,064] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 14:50:22,065] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 14:50:22,065] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 14:50:22,065] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 14:50:22,066] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:50:22,066] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 14:50:22,067] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 14:50:22,067] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:50:22,068] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:50:22,071] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 14:50:22,071] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,072] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 14:50:22,072] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 14:50:22,073] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 14:50:22,073] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,073] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 14:50:22,074] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:50:22,074] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 14:50:22,074] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:50:22,075] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 14:50:22,075] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,076] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 14:50:22,076] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,076] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 14:50:22,076] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 14:50:22,077] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:50:22,077] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,077] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 14:50:22,078] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 14:50:22,079] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 14:50:22,079] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,081] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 14:50:22,081] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 14:50:22,082] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,082] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 14:50:22,082] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:50:22,083] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:50:22,083] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:50:22,083] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,084] DEBUG: channelMap keySet: . . . . 
[2021-07-30 14:50:22,087] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,087] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 14:50:22,088] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 14:50:22,088] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:50:22,089] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 14:50:22,089] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,089] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 14:50:22,089] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 14:50:22,089] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 14:50:22,090] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 14:50:22,091] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,090] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 14:50:22,092] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:50:22,092] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 14:50:22,093] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:50:22,093] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 14:50:22,093] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:50:22,094] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:50:22,094] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,094] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 14:50:22,095] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,095] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 14:50:22,095] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:50:22,096] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:50:22,096] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 14:50:22,097] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 14:50:22,097] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 14:50:22,098] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 14:50:22,098] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,098] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 14:50:22,098] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 14:50:22,102] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 14:50:22,102] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 14:50:22,103] DEBUG: MemoizationController: pairing names after add
[2021-07-30 14:50:22,104] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 14:50:22,104] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 14:50:22,104] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 14:50:22,104] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 14:50:22,105] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 14:50:22,105] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 14:50:22,106] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 14:50:22,106] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:50:22,107] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 14:50:22,107] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 14:50:22,107] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,108] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,108] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 14:50:22,108] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:50:22,109] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 14:50:22,109] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:50:22,109] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:50:22,110] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:50:22,110] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:50:22,110] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 14:50:22,111] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,111] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,111] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:50:22,111] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 14:50:22,112] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:50:22,112] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:50:22,113] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 14:50:22,113] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:50:22,114] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 14:50:22,114] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 14:50:22,114] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,115] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 14:50:22,115] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 14:50:22,119] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 14:50:22,120] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:50:22,119] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 14:50:22,120] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 14:50:22,120] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:50:22,121] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 14:50:22,121] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:50:22,121] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:50:22,122] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,123] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 14:50:22,122] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2]
[2021-07-30 14:50:22,123] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:50:22,123] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 14:50:22,125] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:50:22,125] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:50:22,125] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 14:50:22,125] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:50:22,126] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:50:22,126] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:50:22,127] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:50:22,126] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 14:50:22,128] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,127] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 14:50:22,128] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,128] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:50:22,128] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:50:22,129] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 14:50:22,130] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,130] DEBUG: 
[2021-07-30 14:50:22,130] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:50:22,130] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,130] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 14:50:22,133] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:50:22,133] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:50:22,134] DEBUG: >> msg.memoization_label: 1
[2021-07-30 14:50:22,134] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:50:22,135] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:50:22,135] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:50:22,136] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 14:50:22,136] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:50:22,137] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:50:22,137] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 14:50:22,138] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,138] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 14:50:22,138] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:50:22,139] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 14:50:22,139] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 14:50:22,139] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000268E7881F70>]>
[2021-07-30 14:50:22,140] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,139] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 14:50:22,141] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:50:22,141] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 14:50:22,141] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:50:22,142] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2]
[2021-07-30 14:50:22,143] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,142] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 14:50:22,143] DEBUG: Deliver end promised Results: 
[2021-07-30 14:50:22,143] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 14:50:22,144] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,143] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:50:22,144] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:50:22,144] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:50:22,144] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,149] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,145] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 14:50:22,149] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:50:22,150] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 14:50:22,150] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 14:50:22,151] DEBUG: 
[2021-07-30 14:50:22,151] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 14:50:22,150] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 14:50:22,152] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,152] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:50:22,153] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:50:22,153] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:50:22,153] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 14:50:22,153] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 14:50:22,153] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:50:22,154] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:50:22,154] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,155] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:50:22,155] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 14:50:22,155] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 14:50:22,156] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 14:50:22,156] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 14:50:22,156] DEBUG: >> msg.memoization_label: 2
[2021-07-30 14:50:22,157] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,157] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 14:50:22,158] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:50:22,159] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:50:22,159] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 14:50:22,159] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,159] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 14:50:22,160] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,160] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:50:22,160] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:50:22,164] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 14:50:22,165] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 14:50:22,165] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:50:22,166] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:50:22,166] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:50:22,167] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 14:50:22,167] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 14:50:22,167] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,168] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 14:50:22,168] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 14:50:22,168] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:50:22,168] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:50:22,169] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,170] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:50:22,170] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:50:22,170] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 14:50:22,171] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,171] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 14:50:22,172] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2]
[2021-07-30 14:50:22,172] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:50:22,173] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 14:50:22,173] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 14:50:22,173] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,174] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 14:50:22,174] DEBUG: 
[2021-07-30 14:50:22,174] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:50:22,174] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,175] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,175] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:50:22,176] DEBUG: 
[2021-07-30 14:50:22,179] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 14:50:22,179] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:50:22,179] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 14:50:22,180] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,180] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 14:50:22,181] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 14:50:22,181] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:50:22,181] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 14:50:22,181] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 14:50:22,182] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:50:22,182] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:50:22,183] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:50:22,183] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:50:22,184] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 14:50:22,184] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:50:22,185] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:50:22,185] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:50:22,186] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:50:22,186] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 14:50:22,187] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 14:50:22,187] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:50:22,187] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 14:50:22,188] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 14:50:22,188] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 14:50:22,189] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,190] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 14:50:22,190] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000268E7876B50>]>
[2021-07-30 14:50:22,190] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:50:22,191] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 14:50:22,191] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 14:50:22,191] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,191] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 14:50:22,195] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 14:50:22,196] WARNING: MemoizationController already initialized.
[2021-07-30 14:50:22,196] DEBUG: 
[2021-07-30 14:50:22,196] DEBUG: Deliver end promised Results: 
[2021-07-30 14:50:22,197] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 14:50:22,197] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 14:50:22,197] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,198] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:50:22,198] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 14:50:22,198] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 14:50:22,199] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:50:22,199] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 14:50:22,200] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 14:50:22,200] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 14:50:22,200] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 14:50:22,201] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 14:50:22,201] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:50:22,202] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 14:50:22,202] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 14:50:22,202] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 14:50:22,203] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:50:22,202] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 14:50:22,204] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 14:50:22,204] DEBUG: Disabling memoization thread now...
[2021-07-30 14:50:22,204] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:50:22,205] DEBUG: MemoizationThread disabled.
[2021-07-30 14:50:22,205] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 14:50:22,206] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:50:22,206] DEBUG: 
[2021-07-30 14:50:22,206] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 14:50:22,207] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 14:50:22,207] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 14:50:22,207] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 14:50:22,207] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 14:50:22,208] DEBUG: 
[2021-07-30 14:50:22,212] DEBUG: >> msg.memoization_label: 0
[2021-07-30 14:50:22,212] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 14:50:22,212] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 14:50:22,213] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 14:50:22,213] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 14:50:22,213] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 14:50:22,214] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 14:50:22,214] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:50:22,215] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:50:22,215] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 14:50:22,216] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2]
[2021-07-30 14:50:22,216] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 14:50:22,216] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 14:50:22,217] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 14:50:22,217] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] parentProblem ID: [1,1]
[2021-07-30 14:50:22,217] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 14:50:22,218] DEBUG: 
[2021-07-30 14:50:22,218] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 14:50:22,218] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 14:50:22,219] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 14:50:22,219] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:50:22,219] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 14:50:22,220] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 14:50:22,220] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 14:50:22,221] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:50:22,221] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:50:22,222] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:50:22,222] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 14:50:24,227] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 14:50:24,227] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 14:50:24,228] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:50:24,228] DEBUG: 
[2021-07-30 14:50:24,229] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 14:50:24,229] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 14:50:24,229] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 14:50:24,230] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:32,338] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:06:32,338] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:06:32,338] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:06:32,338] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:06:32,338] DEBUG: n: 4
[2021-07-30 15:06:32,338] DEBUG: memoize is: True
[2021-07-30 15:06:32,338] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:06:32,339] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:06:32,340] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:06:32,340] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:06:32,340] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:06:32,340] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,340] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:06:32,340] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:06:32,340] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:06:32,340] DEBUG: channelMap keySet: . 
[2021-07-30 15:06:32,341] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:32,341] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:06:32,341] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:06:32,341] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:06:32,341] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:06:32,341] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:06:32,342] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:06:32,342] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,342] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:06:32,342] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:06:32,342] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:06:32,342] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:06:32,342] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:06:32,342] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:06:32,342] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:06:32,343] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:06:32,343] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:06:32,343] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:06:32,343] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:06:32,343] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:06:32,343] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:06:32,344] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:06:32,344] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:32,345] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:06:32,345] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:06:32,346] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,346] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:06:32,346] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,347] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,347] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:06:32,351] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:06:32,351] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,352] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:06:32,352] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:06:32,353] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:06:32,353] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:06:32,354] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:06:32,354] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:06:32,354] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,355] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:06:32,355] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:32,355] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,356] DEBUG: channelMap keySet: . . 
[2021-07-30 15:06:32,356] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,356] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:06:32,356] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:06:32,357] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:06:32,357] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:32,358] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:06:32,358] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:06:32,359] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:06:32,359] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:06:32,359] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,359] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,360] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:06:32,360] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:06:32,361] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:06:32,364] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:06:32,364] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:06:32,365] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:06:32,365] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,366] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:06:32,366] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:06:32,366] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:06:32,367] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:06:32,367] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:06:32,368] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:06:32,369] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:06:32,369] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:06:32,370] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:06:32,370] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:06:32,370] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:06:32,370] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:06:32,371] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:06:32,372] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:06:32,372] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:06:32,372] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:06:32,373] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:06:32,373] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:06:32,373] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:06:32,373] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,373] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:06:32,374] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:06:32,374] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:06:32,375] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:06:32,375] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:06:32,376] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:06:32,377] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:32,377] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:06:32,381] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:32,381] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:06:32,382] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:06:32,382] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:32,383] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:06:32,383] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:06:32,384] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:06:32,384] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,384] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:06:32,384] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:32,385] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:06:32,385] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:32,386] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:06:32,386] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,386] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,386] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:06:32,387] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:06:32,388] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,388] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:06:32,388] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:06:32,388] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:06:32,389] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:06:32,389] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:32,390] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:06:32,391] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:06:32,391] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:06:32,391] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:32,396] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:06:32,397] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:06:32,397] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,397] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:06:32,398] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:32,398] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,398] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:32,399] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:32,399] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,399] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:06:32,400] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:06:32,400] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:06:32,400] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:06:32,400] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,400] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:06:32,401] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:06:32,401] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:06:32,402] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,403] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:32,403] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:06:32,404] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:06:32,404] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:06:32,404] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,405] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:32,405] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:32,405] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:06:32,406] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,406] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:06:32,406] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:06:32,408] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:06:32,408] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:06:32,411] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:06:32,412] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:06:32,412] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,412] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:06:32,413] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:06:32,413] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:06:32,413] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:06:32,414] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:06:32,415] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:06:32,415] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:32,415] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:06:32,416] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:32,416] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:06:32,416] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:06:32,417] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:32,417] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:06:32,418] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:32,418] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:32,418] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:32,419] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,419] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:06:32,419] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:06:32,420] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:32,420] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:06:32,420] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:32,421] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:32,421] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:06:32,421] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:06:32,422] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:06:32,422] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,422] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,422] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:06:32,423] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:06:32,423] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:06:32,427] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:06:32,427] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:06:32,428] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:06:32,429] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,429] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:06:32,429] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:06:32,429] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:06:32,429] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:06:32,430] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:06:32,430] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:06:32,430] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:06:32,431] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:32,432] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:06:32,432] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:06:32,432] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:06:32,434] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,433] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:06:32,433] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:06:32,434] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:06:32,434] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:06:32,434] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:06:32,435] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:06:32,436] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:06:32,436] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:32,436] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:32,436] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:06:32,438] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:06:32,438] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:06:32,438] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:32,438] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:32,438] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:06:32,439] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:32,443] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:06:32,443] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:06:32,444] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,444] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,444] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:06:32,445] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:06:32,446] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:06:32,447] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:06:32,447] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:32,449] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:06:32,449] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:06:32,449] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:06:32,449] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:06:32,449] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,449] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:06:32,450] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:06:32,449] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:06:32,450] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:06:32,451] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000197E7E6DC70>]>
[2021-07-30 15:06:32,451] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:06:32,452] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:32,451] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:06:32,452] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:06:32,452] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:06:32,453] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:06:32,453] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:06:32,454] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:06:32,458] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:32,458] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:06:32,458] DEBUG: Deliver end promised Results: 
[2021-07-30 15:06:32,459] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:06:32,459] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:06:32,460] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,460] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:06:32,461] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:06:32,460] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:06:32,462] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:06:32,462] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:06:32,462] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:32,464] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:06:32,464] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:06:32,465] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:06:32,466] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:06:32,466] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,466] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:06:32,468] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:06:32,468] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:06:32,468] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:06:32,468] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:06:32,469] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:06:32,470] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:32,473] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:06:32,474] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:06:32,474] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:32,474] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:06:32,474] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:06:32,475] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:06:32,476] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:06:32,476] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:06:32,476] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:06:32,477] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:06:32,477] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:32,477] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:06:32,478] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:06:34,502] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:36,533] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,728] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:06:49,728] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:06:49,728] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:06:49,728] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:06:49,728] DEBUG: n: 4
[2021-07-30 15:06:49,728] DEBUG: memoize is: True
[2021-07-30 15:06:49,728] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:06:49,729] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:06:49,730] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:06:49,730] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:06:49,730] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:06:49,730] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,730] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:06:49,730] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:06:49,730] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:06:49,730] DEBUG: channelMap keySet: . 
[2021-07-30 15:06:49,731] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:49,731] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:06:49,731] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:06:49,731] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:06:49,731] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:06:49,732] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:06:49,732] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:06:49,732] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,732] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:06:49,732] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:06:49,732] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:06:49,732] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:06:49,732] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:06:49,732] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:06:49,732] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:06:49,733] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:06:49,733] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:06:49,733] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:06:49,733] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:06:49,733] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:06:49,733] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:06:49,734] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:06:49,734] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:49,735] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,736] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:06:49,736] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,736] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:06:49,736] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,737] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:06:49,737] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,738] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:06:49,738] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,738] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:06:49,738] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:06:49,739] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:06:49,740] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:06:49,740] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:06:49,740] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:06:49,741] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,741] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:49,742] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:06:49,742] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,742] DEBUG: channelMap keySet: . . 
[2021-07-30 15:06:49,743] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,743] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:06:49,743] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:06:49,744] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:49,744] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:06:49,745] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:06:49,745] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:06:49,745] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:06:49,746] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:06:49,746] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,746] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,747] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:06:49,747] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:06:49,748] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:06:49,748] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:06:49,748] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:06:49,749] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:06:49,749] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,749] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:06:49,753] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:06:49,749] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:06:49,754] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:06:49,754] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:06:49,756] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:06:49,756] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:06:49,756] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:06:49,757] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:06:49,757] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:06:49,757] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:06:49,758] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:06:49,758] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:06:49,759] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:06:49,759] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:06:49,760] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:06:49,759] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:06:49,760] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:06:49,760] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,760] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:06:49,761] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:06:49,761] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:06:49,761] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:06:49,762] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:06:49,763] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:06:49,763] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:06:49,764] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:49,764] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:06:49,765] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:49,765] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:06:49,766] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:06:49,768] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,769] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:06:49,769] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:06:49,769] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:06:49,770] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,770] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:06:49,770] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:49,770] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:06:49,771] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:49,771] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:06:49,771] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,772] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:06:49,772] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,772] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:06:49,773] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:06:49,773] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,774] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:06:49,774] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:06:49,774] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:06:49,775] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:06:49,775] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:06:49,776] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,776] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:06:49,777] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:06:49,777] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:06:49,778] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:06:49,778] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,779] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:06:49,779] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,780] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:49,780] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:06:49,780] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:49,781] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:49,784] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,784] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:06:49,785] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:06:49,785] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:06:49,785] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,785] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:06:49,786] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:06:49,786] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:06:49,786] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:06:49,787] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,788] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,788] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:06:49,789] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:49,789] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:06:49,789] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:49,790] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:49,790] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:06:49,791] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:06:49,791] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,791] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:06:49,792] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:06:49,792] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:06:49,792] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:06:49,793] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:06:49,793] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:06:49,794] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,794] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:06:49,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:06:49,795] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:06:49,795] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:06:49,796] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:06:49,796] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:06:49,799] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:06:49,800] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:06:49,800] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:06:49,801] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:06:49,801] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:06:49,802] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:06:49,801] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:06:49,802] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:49,803] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:06:49,803] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:06:49,803] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,804] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,804] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:06:49,805] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:49,805] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:06:49,805] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:06:49,806] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:06:49,806] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:49,806] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:49,807] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:06:49,807] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,807] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,807] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:06:49,808] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:06:49,808] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:06:49,809] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:06:49,809] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:06:49,810] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:06:49,810] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,810] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:06:49,810] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:06:49,811] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:06:49,810] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:06:49,812] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:06:49,811] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:06:49,812] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:06:49,816] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:49,817] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:06:49,817] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:06:49,818] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:06:49,818] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:06:49,818] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:06:49,819] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:06:49,819] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,819] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:06:49,820] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:06:49,820] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:06:49,821] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:06:49,821] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:06:49,821] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,822] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:49,823] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:06:49,822] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:49,823] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:06:49,823] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:06:49,824] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:49,824] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:06:49,824] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:49,825] DEBUG: [0,1][0,2][0,2]: faninId
[2021-07-30 15:06:49,825] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:06:49,825] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:06:49,826] DEBUG: 
[2021-07-30 15:06:49,826] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:06:49,826] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,826] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,827] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:49,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:06:49,827] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:06:49,831] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:06:49,827] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:49,832] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:49,832] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:06:49,833] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:06:49,833] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:06:49,834] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:06:49,834] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:06:49,835] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,835] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:06:49,835] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:06:49,836] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:06:49,836] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000262A0CCF490>]>
[2021-07-30 15:06:49,836] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:06:49,837] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,836] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:06:49,838] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:06:49,838] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:06:49,838] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:06:49,838] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:06:49,839] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:06:49,839] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,840] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:06:49,839] DEBUG: Deliver end promised Results: 
[2021-07-30 15:06:49,840] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:06:49,841] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:06:49,841] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,841] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:06:49,842] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:06:49,842] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,842] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:06:49,842] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:06:49,843] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:06:49,847] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:06:49,846] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:49,848] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:06:49,848] DEBUG: 
[2021-07-30 15:06:49,849] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:49,849] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:06:49,849] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:49,850] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,850] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:06:49,850] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:06:49,851] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:06:49,852] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,852] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:06:49,852] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:06:49,852] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:06:49,853] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:06:49,853] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:06:49,854] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:06:49,854] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:06:49,855] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:06:49,854] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:49,855] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:06:49,855] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:06:49,856] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,856] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:06:49,857] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,857] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:06:49,858] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:06:49,857] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:06:49,858] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,858] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:06:49,859] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:06:49,862] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:06:49,863] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:06:49,863] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:06:49,864] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:06:49,864] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,864] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:06:49,865] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:06:49,865] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:06:49,865] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:06:49,865] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:06:49,865] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,866] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:06:49,866] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:06:49,866] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,866] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:06:49,867] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:06:49,868] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:06:49,868] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:06:49,869] DEBUG: 
[2021-07-30 15:06:49,869] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:06:49,869] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:06:49,869] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,870] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:06:49,870] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:06:49,871] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:06:49,871] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:06:49,871] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:06:49,872] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:06:49,872] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:06:49,872] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:06:49,872] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:06:49,873] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:06:49,873] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:06:49,874] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:06:49,874] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:06:49,878] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:49,878] DEBUG: 
[2021-07-30 15:06:49,879] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:06:49,879] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:06:49,880] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:49,880] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:06:49,880] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:06:49,881] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:06:49,881] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:06:49,881] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:06:49,882] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:06:49,882] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:06:49,882] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:06:49,883] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:06:49,883] DEBUG: >> Memoization Thread awaiting message...
ondValue: 0 combination.value: 2
[2021-07-30 15:06:49,884] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:49,884] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:06:49,885] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:06:49,885] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:06:49,886] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:49,886] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:06:49,887] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:06:49,887] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:06:49,887] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:06:49,888] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:06:49,888] DEBUG: Disabling memoization thread now...
[2021-07-30 15:06:49,889] DEBUG: MemoizationThread disabled.
[2021-07-30 15:06:49,892] DEBUG: 
[2021-07-30 15:06:49,889] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:06:49,893] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:06:49,893] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x00000262A0CB44F0>]>
[2021-07-30 15:06:49,893] DEBUG: 
[2021-07-30 15:06:49,893] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:49,894] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:06:49,894] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:06:49,894] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:06:49,895] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:06:49,895] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:06:49,896] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:06:49,896] WARNING: MemoizationController already initialized.
[2021-07-30 15:06:49,896] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:06:49,897] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:06:49,896] DEBUG: Deliver end promised Results: 
[2021-07-30 15:06:49,897] DEBUG: 
[2021-07-30 15:06:49,898] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:06:49,898] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:06:49,899] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:49,899] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:06:49,899] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:06:49,899] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:06:49,900] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:06:49,900] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:06:49,901] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:06:49,901] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:06:49,902] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:06:49,902] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 2 secondValue: 2 combination.value: 4
[2021-07-30 15:06:49,903] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:06:49,903] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:06:49,903] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:49,904] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:06:49,907] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:06:51,902] DEBUG: Error. Expected value: 3, actual value: 4
[2021-07-30 15:06:51,902] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:06:51,903] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:06:51,903] DEBUG: 
[2021-07-30 15:06:51,904] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:06:51,904] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:06:51,904] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:06:51,905] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:07:32,017] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:07:32,017] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:07:32,017] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:07:32,017] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:07:32,017] DEBUG: n: 4
[2021-07-30 15:07:32,017] DEBUG: memoize is: True
[2021-07-30 15:07:32,018] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:07:32,019] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:07:32,019] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:07:32,019] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:07:32,019] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:07:32,019] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,019] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:07:32,019] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:07:32,019] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:07:32,020] DEBUG: channelMap keySet: . 
[2021-07-30 15:07:32,020] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:07:32,020] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:07:32,020] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:07:32,020] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:07:32,021] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:07:32,021] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:07:32,021] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:07:32,021] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,021] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:07:32,021] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:07:32,021] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:07:32,021] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:07:32,021] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:07:32,021] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:07:32,021] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:07:32,022] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:07:32,022] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:07:32,022] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:07:32,022] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:07:32,022] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:07:32,022] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:07:32,023] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:07:32,023] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:07:32,024] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,024] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:07:32,025] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,025] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:07:32,025] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,026] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:07:32,026] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,027] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,027] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:07:32,027] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:07:32,027] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:07:32,028] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:07:32,029] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:07:32,029] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:07:32,029] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:07:32,030] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,030] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:07:32,031] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:07:32,034] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,035] DEBUG: channelMap keySet: . . 
[2021-07-30 15:07:32,035] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,036] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:07:32,036] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:07:32,037] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:07:32,037] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:07:32,038] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:07:32,038] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:07:32,038] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:07:32,039] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:07:32,039] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,039] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,039] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:07:32,040] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:07:32,040] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:07:32,041] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:07:32,041] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:07:32,042] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:07:32,042] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,042] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:07:32,042] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:07:32,043] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:07:32,043] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:07:32,044] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:07:32,045] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:07:32,045] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:07:32,046] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:07:32,046] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:07:32,047] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:07:32,047] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:07:32,047] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:07:32,051] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:07:32,051] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:07:32,052] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:07:32,051] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:07:32,052] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:07:32,052] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:07:32,053] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,053] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:07:32,053] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:07:32,054] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:07:32,054] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:07:32,054] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:07:32,055] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:07:32,056] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:07:32,056] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:07:32,057] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:07:32,057] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:07:32,057] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:07:32,058] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:07:32,058] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:07:32,058] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:07:32,059] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,060] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:07:32,060] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:07:32,060] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:07:32,061] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:07:32,061] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,061] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:07:32,062] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:07:32,062] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,062] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:07:32,066] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:07:32,066] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:07:32,067] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:07:32,067] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,067] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:07:32,068] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,068] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:07:32,068] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,069] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:07:32,069] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:07:32,069] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:07:32,070] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,071] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:07:32,071] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,072] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:07:32,072] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:07:32,072] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:07:32,073] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:07:32,073] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:07:32,073] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,074] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:07:32,074] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:07:32,074] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:07:32,075] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:07:32,075] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:07:32,075] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,076] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:07:32,076] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:07:32,075] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:07:32,076] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:07:32,077] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,078] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:07:32,078] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,081] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:07:32,081] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:07:32,082] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:07:32,083] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:07:32,083] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:07:32,083] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:07:32,084] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,084] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:07:32,084] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:07:32,085] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:07:32,085] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:07:32,086] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:07:32,086] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:07:32,087] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:07:32,087] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,087] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:07:32,087] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:07:32,088] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:07:32,088] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:07:32,089] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:07:32,089] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:07:32,090] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:07:32,090] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:07:32,091] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:07:32,091] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:07:32,091] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:07:32,092] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:07:32,092] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:07:32,093] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:07:32,093] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:07:32,093] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,094] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:07:32,094] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,097] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:07:32,098] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:07:32,098] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:07:32,098] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:07:32,099] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:07:32,099] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:07:32,099] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:07:32,100] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,100] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,100] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:07:32,100] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:07:32,101] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:07:32,102] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:07:32,102] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:07:32,102] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:07:32,103] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:07:32,103] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,103] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:07:32,104] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:07:32,104] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
sageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:07:32,104] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:07:32,105] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:07:32,106] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:07:32,107] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:07:32,107] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:07:32,107] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:07:32,108] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:07:32,108] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:07:32,108] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:07:32,109] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,109] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:07:32,109] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:07:32,113] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:07:32,113] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:07:32,114] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,115] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:07:32,114] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:07:32,115] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:07:32,116] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:07:32,116] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:07:32,117] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:07:32,117] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:07:32,117] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:07:32,117] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:07:32,118] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:07:32,118] DEBUG: [0,1][0,2][0,2]: faninId
[2021-07-30 15:07:32,119] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,119] DEBUG: [0,1][0,2][0,2]: Fan-in: ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:07:32,119] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,120] DEBUG: 
[2021-07-30 15:07:32,120] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:07:32,120] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:07:32,121] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:07:32,121] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:07:32,122] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:07:32,122] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:07:32,122] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:07:32,123] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:07:32,123] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:07:32,123] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:07:32,124] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:07:32,125] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:07:32,125] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,125] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:07:32,125] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:07:32,129] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:07:32,130] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000025DC8240E50>]>
[2021-07-30 15:07:32,129] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:07:32,130] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,130] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:07:32,130] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:07:32,131] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:07:32,132] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:07:32,132] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:07:32,132] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:07:32,133] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,133] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:07:32,133] DEBUG: Deliver end promised Results: 
[2021-07-30 15:07:32,133] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:07:32,133] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:07:32,134] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,135] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,134] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:07:32,135] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:07:32,136] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:07:32,135] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:07:32,136] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:07:32,137] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:07:32,137] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:07:32,137] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:07:32,138] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:07:32,138] DEBUG: 
[2021-07-30 15:07:32,139] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:07:32,139] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:07:32,139] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,140] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:07:32,140] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:07:32,141] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:07:32,141] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,141] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:07:32,142] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:07:32,142] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:07:32,146] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:07:32,146] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:07:32,146] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:07:32,147] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:07:32,147] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:07:32,148] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,147] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:07:32,148] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:07:32,149] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:07:32,149] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:07:32,150] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,150] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,150] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:07:32,151] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:07:32,151] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:07:32,151] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:07:32,152] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:07:32,152] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:07:32,153] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:07:32,153] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:07:32,153] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,153] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:07:32,154] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:07:32,154] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:07:32,155] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:07:32,155] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:07:32,155] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,156] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:07:32,156] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:07:32,156] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:07:32,157] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,157] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:07:32,161] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:07:32,162] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:07:32,162] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:07:32,162] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:07:32,163] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:07:32,163] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:07:32,164] DEBUG: [0,1][1,2][0,2]: Fan-in: ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:07:32,164] DEBUG: 
[2021-07-30 15:07:32,164] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:07:32,164] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:07:32,165] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,165] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:07:32,166] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:07:32,166] DEBUG: 
[2021-07-30 15:07:32,166] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:07:32,166] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:07:32,167] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:07:32,167] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,168] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:07:32,168] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:07:32,168] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:07:32,168] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:07:32,169] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:07:32,169] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:07:32,169] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:07:32,170] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:07:32,170] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:07:32,171] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:07:32,171] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:07:32,172] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:07:32,172] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:07:32,173] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:07:32,173] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:07:32,177] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:07:32,177] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:07:32,177] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:07:32,178] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:07:32,178] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:07:32,179] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,179] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:07:32,179] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000025DC823DB50>]>
[2021-07-30 15:07:32,179] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:07:32,180] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:07:32,180] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:07:32,180] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:07:32,180] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:07:32,181] WARNING: MemoizationController already initialized.
[2021-07-30 15:07:32,181] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:07:32,181] DEBUG: Deliver end promised Results: 
[2021-07-30 15:07:32,182] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:07:32,182] DEBUG: [0,1][0,2][1,2]: Fan-in: ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:07:32,182] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,183] DEBUG: 
[2021-07-30 15:07:32,183] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:07:32,183] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:07:32,184] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:07:32,184] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:07:32,185] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:07:32,185] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:07:32,185] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:07:32,186] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:07:32,186] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:07:32,186] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:07:32,187] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:07:32,187] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:07:32,188] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:07:32,187] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:07:32,188] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:07:32,189] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:07:32,192] DEBUG: Disabling memoization thread now...
[2021-07-30 15:07:32,192] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:07:32,193] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:07:32,194] DEBUG: MemoizationThread disabled.
[2021-07-30 15:07:32,194] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:07:32,194] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:07:32,195] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:07:32,195] DEBUG: 
[2021-07-30 15:07:32,195] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:07:32,195] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:07:32,196] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:07:32,197] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:07:32,197] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:07:32,197] DEBUG: 
[2021-07-30 15:07:32,198] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:07:32,199] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:07:32,199] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:07:32,199] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:07:32,200] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:07:32,200] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:07:32,200] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:07:32,201] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:07:32,202] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:07:32,202] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:07:32,202] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:07:32,203] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:07:32,203] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:07:32,204] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:07:32,204] DEBUG: [0,1][1,2][1,2]: faninId
[2021-07-30 15:07:32,204] DEBUG: [0,1][1,2][1,2]: Fan-in: ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:07:32,205] DEBUG: 
[2021-07-30 15:07:32,207] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:07:32,208] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:07:32,208] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:07:32,209] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:07:32,209] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:07:32,209] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:07:32,210] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:07:32,210] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:07:32,211] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:07:32,211] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:07:32,212] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:07:34,205] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:07:34,205] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:07:34,206] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:07:34,206] DEBUG: 
[2021-07-30 15:07:34,207] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:07:34,207] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:07:34,207] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:07:34,208] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:22,669] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:08:22,670] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:08:22,670] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:08:22,670] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:08:22,670] DEBUG: n: 4
[2021-07-30 15:08:22,670] DEBUG: memoize is: True
[2021-07-30 15:08:22,670] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:08:22,671] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:08:22,671] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:08:22,671] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:08:22,672] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:08:22,672] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,672] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:08:22,672] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:08:22,672] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:08:22,672] DEBUG: channelMap keySet: . 
[2021-07-30 15:08:22,673] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:22,673] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:08:22,673] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:08:22,673] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:08:22,673] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:08:22,673] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:08:22,673] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:08:22,673] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,673] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:08:22,674] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:08:22,674] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:08:22,674] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:08:22,674] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:08:22,674] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:08:22,674] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:08:22,674] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:08:22,674] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:08:22,674] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:08:22,674] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:08:22,675] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:08:22,675] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:08:22,675] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:08:22,676] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:22,677] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,677] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:08:22,677] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,678] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,678] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:08:22,678] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,678] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:08:22,679] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,679] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:08:22,680] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:08:22,680] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:08:22,681] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:08:22,681] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:08:22,682] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:08:22,682] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:08:22,682] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,683] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,683] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:08:22,683] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:22,684] DEBUG: channelMap keySet: . . 
[2021-07-30 15:08:22,684] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,685] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:22,685] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:08:22,686] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:22,686] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:08:22,686] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:08:22,686] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:08:22,686] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:08:22,687] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:08:22,687] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,688] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,688] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:08:22,688] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:08:22,689] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:08:22,689] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:08:22,690] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:08:22,690] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:08:22,690] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:08:22,691] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:08:22,695] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:22,695] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,695] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:08:22,696] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:08:22,697] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:08:22,697] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:08:22,698] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:08:22,698] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:08:22,698] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:08:22,699] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:08:22,700] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:08:22,700] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,700] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:08:22,701] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:08:22,701] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:08:22,701] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:08:22,701] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:08:22,702] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:08:22,702] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:08:22,703] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:08:22,704] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:08:22,704] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:08:22,705] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:08:22,705] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:08:22,705] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:08:22,706] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:08:22,708] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:08:22,708] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:08:22,709] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:08:22,710] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:08:22,710] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:08:22,711] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:08:22,711] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:08:22,711] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:22,712] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:22,713] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,712] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:08:22,714] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:08:22,714] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:22,714] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,714] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:08:22,715] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:22,716] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,716] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:22,716] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,716] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:08:22,716] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,717] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:08:22,717] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,718] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:08:22,718] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,718] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:08:22,718] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:08:22,719] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,720] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:08:22,720] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:22,721] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:22,721] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:08:22,721] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:22,725] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:08:22,726] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,726] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:08:22,726] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:08:22,727] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:08:22,727] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,727] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:08:22,728] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:08:22,728] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:08:22,728] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:08:22,728] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:08:22,729] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,729] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:08:22,730] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:08:22,731] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:08:22,731] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,732] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:08:22,732] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:22,732] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:22,733] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:22,733] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:08:22,733] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,734] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:08:22,734] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:08:22,735] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:08:22,735] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:08:22,735] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:08:22,736] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:08:22,736] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:08:22,736] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,737] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:08:22,737] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:08:22,737] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:08:22,737] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:08:22,741] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:22,743] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:08:22,743] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:08:22,743] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:22,743] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:08:22,744] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:08:22,744] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:22,745] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:08:22,745] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:22,745] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:22,746] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:22,746] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,747] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,747] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:08:22,747] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:22,748] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:22,748] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:22,749] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:08:22,749] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:08:22,749] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:22,750] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:08:22,750] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,750] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,750] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:08:22,751] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:08:22,751] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:08:22,752] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:08:22,752] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:08:22,753] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:08:22,753] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,753] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:08:22,753] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:08:22,754] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:08:22,757] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:08:22,758] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:08:22,757] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:08:22,758] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:22,759] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:22,760] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:08:22,760] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:08:22,760] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:22,761] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:08:22,761] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:08:22,762] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,761] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:08:22,763] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:08:22,762] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:08:22,762] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:08:22,764] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:22,764] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:22,764] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:08:22,765] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:08:22,765] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:22,765] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:08:22,766] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,766] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:22,766] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:08:22,767] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:08:22,768] DEBUG: [0,1][0,2][0,2]: faninId
[2021-07-30 15:08:22,768] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:22,769] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:08:22,769] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:08:22,769] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,769] DEBUG: 
[2021-07-30 15:08:22,769] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,773] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:08:22,773] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:08:22,773] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:08:22,774] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:22,774] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:08:22,775] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:08:22,775] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:22,775] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:22,776] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:08:22,777] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:08:22,777] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:22,778] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:08:22,778] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,778] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:08:22,778] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:08:22,779] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:08:22,780] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002983B3EA2E0>]>
[2021-07-30 15:08:22,779] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:08:22,780] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:08:22,781] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,781] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:08:22,781] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:08:22,782] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:08:22,782] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:08:22,783] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:08:22,783] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:08:22,783] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,783] DEBUG: Deliver end promised Results: 
[2021-07-30 15:08:22,784] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:08:22,784] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:08:22,784] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,785] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:08:22,788] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,788] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:08:22,789] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:08:22,789] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:22,790] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:08:22,789] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:08:22,791] DEBUG: 
[2021-07-30 15:08:22,790] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:22,791] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:08:22,791] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:08:22,791] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:22,792] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:22,792] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,793] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:08:22,793] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:22,793] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:22,794] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:22,794] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:08:22,795] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,795] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:22,795] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:08:22,795] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:08:22,796] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:08:22,796] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:08:22,797] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:08:22,797] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,797] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:22,798] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:08:22,799] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:22,799] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:08:22,799] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:08:22,799] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,799] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,800] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:22,799] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:08:22,800] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:08:22,804] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:08:22,805] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:08:22,805] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:22,806] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:08:22,806] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:08:22,806] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:08:22,806] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,807] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:08:22,807] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:08:22,808] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:22,808] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:22,809] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,810] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:22,810] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:22,810] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:08:22,811] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,810] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:08:22,811] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:08:22,812] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:08:22,812] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:22,812] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:08:22,812] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:08:22,813] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:08:22,813] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:08:22,814] DEBUG: 
[2021-07-30 15:08:22,814] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:08:22,814] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:08:22,814] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,815] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:08:22,815] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:08:22,816] DEBUG: 
[2021-07-30 15:08:22,819] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:08:22,819] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:22,820] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:22,820] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,821] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:08:22,821] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:22,821] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:22,821] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:08:22,822] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:22,822] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:22,822] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:08:22,823] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:22,823] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:22,824] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:08:22,824] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:22,825] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:22,826] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:22,826] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:22,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:08:22,827] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:22,827] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:22,828] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:22,828] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:22,829] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:22,829] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,830] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:22,830] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:22,831] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:22,831] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:22,831] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:08:22,832] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:22,832] DEBUG: Disabling memoization thread now...
[2021-07-30 15:08:22,836] DEBUG: MemoizationThread disabled.
[2021-07-30 15:08:22,836] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:08:22,836] DEBUG: 
[2021-07-30 15:08:22,836] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002983B3DE520>]>
[2021-07-30 15:08:22,837] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 1
[2021-07-30 15:08:22,837] DEBUG: 
[2021-07-30 15:08:22,837] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:22,838] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:08:22,838] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:08:22,838] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:08:22,839] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:08:22,839] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:08:22,840] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:08:22,840] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:22,841] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:08:22,840] DEBUG: Deliver end promised Results: 
[2021-07-30 15:08:22,841] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:08:22,841] DEBUG: 
[2021-07-30 15:08:22,842] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:08:22,842] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:08:22,843] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:22,843] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:08:22,844] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:22,844] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:22,844] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:22,845] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:08:22,846] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:08:22,846] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:22,846] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:08:22,846] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:08:22,847] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:22,847] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:08:22,851] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:22,852] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:22,852] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:24,845] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:08:24,845] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:08:24,846] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:24,846] DEBUG: 
[2021-07-30 15:08:24,847] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:08:24,847] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:24,847] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:24,848] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:27,217] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:08:27,218] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:08:27,218] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:08:27,218] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:08:27,218] DEBUG: n: 4
[2021-07-30 15:08:27,218] DEBUG: memoize is: True
[2021-07-30 15:08:27,218] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:08:27,219] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:08:27,219] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:08:27,219] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:08:27,219] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:08:27,220] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,220] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:08:27,220] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:08:27,220] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:08:27,220] DEBUG: channelMap keySet: . 
[2021-07-30 15:08:27,221] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:27,221] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:08:27,221] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:08:27,221] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:08:27,221] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:08:27,221] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:08:27,221] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:08:27,221] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,222] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:08:27,222] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:08:27,222] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:08:27,222] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:08:27,222] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:08:27,222] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:08:27,222] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:08:27,222] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:08:27,222] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:08:27,222] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:08:27,222] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:08:27,223] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:08:27,223] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:08:27,223] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:08:27,224] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:27,225] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,225] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:08:27,225] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,226] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,226] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:08:27,226] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,226] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:08:27,227] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,227] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:08:27,228] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:08:27,227] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:08:27,229] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:08:27,229] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:08:27,230] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:08:27,230] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:08:27,230] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,231] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,231] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:27,231] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:08:27,232] DEBUG: channelMap keySet: . . 
[2021-07-30 15:08:27,236] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,236] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:08:27,237] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:27,237] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:27,237] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:08:27,238] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:08:27,238] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:08:27,238] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:08:27,239] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:08:27,239] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,239] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,240] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:08:27,240] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:08:27,241] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:08:27,241] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:08:27,241] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:08:27,242] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:08:27,243] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:08:27,243] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,243] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:08:27,243] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:08:27,244] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:08:27,244] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:08:27,246] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:27,245] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:08:27,246] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:08:27,246] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:08:27,247] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:08:27,247] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:08:27,247] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:08:27,251] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:08:27,251] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:08:27,252] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:08:27,252] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:08:27,252] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:08:27,253] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,252] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:08:27,253] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:08:27,253] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:08:27,254] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:08:27,254] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:08:27,255] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:08:27,256] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:08:27,256] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:08:27,257] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:08:27,257] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:27,258] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:08:27,258] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:27,258] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:08:27,259] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:08:27,259] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,260] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:08:27,260] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:08:27,260] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:08:27,260] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,261] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:08:27,261] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,261] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:08:27,262] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:27,263] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:27,263] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:08:27,266] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:08:27,267] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:08:27,267] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:08:27,268] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:08:27,268] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,268] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:08:27,269] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:08:27,269] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:08:27,270] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,271] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:08:27,271] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:08:27,272] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,272] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:08:27,272] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,272] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:27,272] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:27,272] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:27,273] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:08:27,273] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,273] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:08:27,274] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:08:27,274] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:08:27,275] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:08:27,275] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,275] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:08:27,275] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:08:27,275] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:08:27,276] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:08:27,277] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,276] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:08:27,278] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,281] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:08:27,281] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:27,282] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:27,282] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:08:27,282] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:08:27,283] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:27,283] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:08:27,284] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,284] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:08:27,284] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:08:27,285] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:08:27,285] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:08:27,286] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:08:27,286] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:08:27,287] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,287] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:08:27,287] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:08:27,287] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:08:27,288] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:08:27,288] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:08:27,289] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:08:27,289] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:08:27,290] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:08:27,290] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:08:27,291] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:08:27,291] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:08:27,292] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:08:27,292] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:08:27,292] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:27,293] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:08:27,293] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:08:27,294] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,297] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,297] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:08:27,298] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:27,298] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:27,299] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:27,299] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:08:27,299] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:27,300] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:08:27,300] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:08:27,300] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,300] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,301] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:08:27,301] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:08:27,302] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:08:27,302] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:08:27,303] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:08:27,303] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:08:27,303] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:08:27,304] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:08:27,304] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:08:27,304] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,305] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:08:27,304] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:08:27,305] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:08:27,306] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:27,306] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:08:27,307] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:27,307] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:08:27,308] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:27,308] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:08:27,308] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,309] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:08:27,309] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:08:27,310] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:08:27,310] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:08:27,314] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:08:27,314] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:27,313] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:08:27,315] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:27,315] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:27,316] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:08:27,316] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:27,316] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:08:27,317] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:08:27,318] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:27,318] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,318] DEBUG: [0,1][0,2][0,2]: faninId
[2021-07-30 15:08:27,318] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:08:27,319] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:08:27,319] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:08:27,320] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,320] DEBUG: 
[2021-07-30 15:08:27,320] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,320] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:08:27,320] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:08:27,321] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:27,321] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:08:27,321] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:08:27,322] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:27,323] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:27,323] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:08:27,323] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:08:27,324] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:08:27,325] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:27,328] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:08:27,328] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:08:27,328] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,329] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:08:27,328] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:08:27,329] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:08:27,330] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000020777241FA0>]>
[2021-07-30 15:08:27,330] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:08:27,331] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,331] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:08:27,332] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:08:27,332] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:08:27,332] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:08:27,333] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:08:27,333] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,333] DEBUG: Deliver end promised Results: 
[2021-07-30 15:08:27,334] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:08:27,334] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:08:27,334] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,334] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:08:27,335] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,335] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:08:27,336] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:08:27,336] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:27,335] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:08:27,337] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:08:27,337] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:08:27,338] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:08:27,338] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:08:27,338] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:27,339] DEBUG: 
[2021-07-30 15:08:27,340] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:27,340] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:08:27,340] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:08:27,341] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,340] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:27,345] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:27,345] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,346] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:08:27,346] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:08:27,346] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:08:27,346] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:08:27,347] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:08:27,347] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:08:27,347] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:27,348] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:27,348] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:08:27,349] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:08:27,349] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:08:27,350] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:08:27,350] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,350] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,351] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:08:27,351] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:27,351] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:08:27,352] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:08:27,352] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,352] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:08:27,353] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:27,353] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:27,354] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:08:27,354] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:08:27,355] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,355] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:08:27,356] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:08:27,355] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:08:27,359] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:27,359] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:27,360] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,360] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:27,361] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:27,360] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:08:27,361] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,362] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:08:27,362] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:08:27,363] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:08:27,363] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:08:27,363] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:08:27,363] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:08:27,364] DEBUG: [0,1][1,2][0,2]: faninId
[2021-07-30 15:08:27,364] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:08:27,365] DEBUG: 
[2021-07-30 15:08:27,365] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:08:27,365] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:08:27,366] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,366] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:08:27,367] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:08:27,367] DEBUG: 
[2021-07-30 15:08:27,367] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:08:27,367] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:27,368] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:08:27,368] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,369] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:08:27,369] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:27,369] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:27,369] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:08:27,370] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:08:27,370] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:27,370] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:08:27,370] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:27,370] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:27,374] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:27,374] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:08:27,375] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:27,375] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:27,376] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:08:27,376] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:27,378] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:08:27,378] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:27,378] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:08:27,379] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:08:27,379] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:08:27,380] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,380] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:08:27,381] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000020777236100>]>
[2021-07-30 15:08:27,381] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:27,381] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:08:27,381] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:08:27,382] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:08:27,382] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:08:27,383] DEBUG: [0,1][0,2][1,2]: faninId
[2021-07-30 15:08:27,383] WARNING: MemoizationController already initialized.
[2021-07-30 15:08:27,383] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:08:27,384] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:08:27,383] DEBUG: Deliver end promised Results: 
[2021-07-30 15:08:27,384] DEBUG: 
[2021-07-30 15:08:27,385] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,385] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:08:27,385] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:08:27,386] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:08:27,386] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:08:27,387] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:27,387] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:08:27,390] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:27,391] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:08:27,391] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:08:27,392] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:08:27,392] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:08:27,393] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:08:27,393] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:27,394] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:08:27,393] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:08:27,394] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:27,395] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:08:27,395] DEBUG: Disabling memoization thread now...
[2021-07-30 15:08:27,396] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:08:27,396] DEBUG: MemoizationThread disabled.
[2021-07-30 15:08:27,397] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:08:27,396] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:27,398] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:08:27,397] DEBUG: 
[2021-07-30 15:08:27,397] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:08:27,397] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:27,398] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:08:27,399] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:08:27,399] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:08:27,400] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:08:27,400] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:08:27,401] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:08:27,400] DEBUG: 
[2021-07-30 15:08:27,401] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:08:27,401] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:08:27,402] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:08:27,402] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:08:27,406] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:08:27,406] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:08:27,407] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:08:27,407] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:08:27,408] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:08:27,408] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:08:27,408] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:08:27,409] DEBUG: [0,1][1,2][1,2]: faninId
[2021-07-30 15:08:27,409] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:08:27,409] DEBUG: 
[2021-07-30 15:08:27,410] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:08:27,410] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:08:27,410] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:08:27,411] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:27,411] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:08:27,411] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:08:27,412] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:08:27,412] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:08:27,413] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:27,413] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:08:27,414] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:08:29,416] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:08:29,416] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:08:29,417] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:08:29,417] DEBUG: 
[2021-07-30 15:08:29,418] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:08:29,418] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:08:29,419] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:08:29,419] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:23,847] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:11:23,847] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:11:23,847] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:11:23,847] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:11:23,848] DEBUG: n: 4
[2021-07-30 15:11:23,848] DEBUG: memoize is: True
[2021-07-30 15:11:23,848] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:11:23,849] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:11:23,849] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:11:23,849] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:11:23,849] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:11:23,849] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,849] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:11:23,850] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:11:23,850] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:11:23,850] DEBUG: channelMap keySet: . 
[2021-07-30 15:11:23,850] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:23,850] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:11:23,851] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:11:23,851] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:11:23,851] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:11:23,851] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:11:23,851] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:11:23,851] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,851] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:11:23,851] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:11:23,852] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:11:23,852] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:11:23,852] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:11:23,852] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:23,852] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:11:23,852] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:23,852] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:11:23,852] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:11:23,852] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:11:23,852] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:11:23,853] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:11:23,853] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:11:23,854] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:23,854] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:23,855] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:11:23,855] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,855] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,856] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:23,856] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,856] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:11:23,856] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:11:23,856] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,857] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:11:23,857] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:11:23,858] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:23,858] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:11:23,859] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:11:23,859] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:11:23,859] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,860] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,860] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:23,861] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:23,861] DEBUG: channelMap keySet: . . 
[2021-07-30 15:11:23,861] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,862] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:11:23,862] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:23,863] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:23,863] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:11:23,863] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:11:23,863] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:11:23,864] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:23,864] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:11:23,865] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,865] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,869] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:11:23,868] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:11:23,870] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:23,870] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:11:23,871] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:11:23,872] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:11:23,872] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:11:23,872] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:11:23,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,873] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:11:23,873] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:23,874] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:11:23,874] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:11:23,874] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:11:23,875] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:11:23,875] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:11:23,876] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:11:23,877] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:11:23,877] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:11:23,878] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:11:23,878] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:11:23,879] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,879] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:23,879] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:11:23,880] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:23,880] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:11:23,883] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:23,883] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:11:23,884] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:11:23,885] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:11:23,885] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:11:23,886] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:11:23,886] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:11:23,886] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:23,887] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:11:23,887] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:23,888] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:11:23,888] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:23,888] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:11:23,888] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:23,889] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:11:23,889] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:23,890] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:11:23,891] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:23,892] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:11:23,892] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:11:23,893] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,893] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:11:23,893] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,893] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:23,894] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:23,894] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:23,895] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:23,898] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,898] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:11:23,899] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:23,899] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:11:23,900] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:11:23,899] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,900] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:11:23,901] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:11:23,901] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,902] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:11:23,902] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,903] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:23,903] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:11:23,903] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:23,904] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:23,904] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:11:23,905] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:11:23,905] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,906] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:23,906] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:23,906] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:11:23,906] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,907] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:11:23,907] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:11:23,907] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:11:23,907] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:11:23,908] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,908] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:11:23,910] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:11:23,909] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,910] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:23,911] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:11:23,911] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:23,915] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:23,915] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:23,915] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:11:23,916] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,916] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:23,916] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:23,917] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:23,917] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:11:23,918] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:11:23,918] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:11:23,918] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,918] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:11:23,919] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:11:23,919] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:23,919] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:11:23,920] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:11:23,921] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:23,921] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:11:23,922] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:11:23,922] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:23,923] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:23,922] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:23,924] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:23,924] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:11:23,924] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:23,924] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:23,925] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:23,925] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,926] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:11:23,926] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:23,926] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:23,927] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:23,930] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:23,930] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:23,931] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:23,931] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:23,932] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:11:23,932] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,932] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,932] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:23,933] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:23,933] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:23,934] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:11:23,934] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:23,934] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:11:23,935] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,935] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:11:23,935] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:11:23,935] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:11:23,936] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:23,936] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:11:23,936] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:11:23,937] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:23,938] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:11:23,938] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:23,939] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:23,938] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:11:23,939] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:11:23,939] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:23,941] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:11:23,941] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,941] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:11:23,942] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:23,942] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:23,942] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:23,942] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:23,942] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,947] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:23,946] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:23,948] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:23,949] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:23,949] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:23,950] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:23,950] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:23,951] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:23,952] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:23,952] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:23,952] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:11:23,953] DEBUG: 
[2021-07-30 15:11:23,953] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,953] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:23,953] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,954] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:23,954] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:11:23,955] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:23,955] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:23,955] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:23,956] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:23,956] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:23,960] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:11:23,960] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:23,960] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:23,961] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:11:23,962] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:11:23,961] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,961] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:23,963] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:23,962] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:11:23,963] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:11:23,963] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001EF7F8FDF40>]>
[2021-07-30 15:11:23,964] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,965] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:23,965] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:23,965] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:23,966] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:11:23,966] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:23,966] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:23,967] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:23,967] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:23,967] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:23,967] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,968] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:11:23,969] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:23,969] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:23,969] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:11:23,969] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:23,970] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:23,971] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:23,971] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:23,972] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:11:23,972] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:11:23,973] DEBUG: 
[2021-07-30 15:11:23,972] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:23,976] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
,2], calling isLastFanInExector() now...
[2021-07-30 15:11:23,977] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,977] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:11:23,977] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:23,978] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:23,979] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:23,979] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,979] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:23,980] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:23,980] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:23,980] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:23,981] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:23,981] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:11:23,981] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:11:23,982] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:23,982] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:23,982] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,983] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:11:23,983] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:11:23,984] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:23,984] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,984] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,985] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:11:23,985] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:11:23,986] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:23,986] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:23,986] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:11:23,986] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:23,987] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:11:23,988] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:11:23,988] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,988] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:23,989] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:11:23,989] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:11:23,992] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:23,992] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:23,993] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,994] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:23,994] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:23,995] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:23,995] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:11:23,995] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:23,996] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:11:23,996] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:11:23,997] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:23,997] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:23,997] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:11:23,998] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:23,998] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:23,998] DEBUG: 
[2021-07-30 15:11:23,999] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:23,999] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:23,999] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:23,999] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:24,000] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:24,000] DEBUG: 
[2021-07-30 15:11:24,001] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:24,001] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:24,001] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:24,002] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:24,002] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:24,003] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:24,003] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:24,003] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:11:24,003] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:24,007] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:24,007] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:24,008] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:24,008] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:24,009] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:11:24,009] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:24,009] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:24,010] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:24,011] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
onMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:11:24,011] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:24,012] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:24,012] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:24,012] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:24,013] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:24,013] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:24,014] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:24,014] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:24,015] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:24,015] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:24,015] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:11:24,016] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:24,016] DEBUG: Disabling memoization thread now...
[2021-07-30 15:11:24,017] DEBUG: MemoizationThread disabled.
[2021-07-30 15:11:24,017] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:24,017] DEBUG: 
[2021-07-30 15:11:24,017] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001EF7F907820>]>
[2021-07-30 15:11:24,019] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:24,019] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 1
[2021-07-30 15:11:24,019] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:24,019] DEBUG: 
[2021-07-30 15:11:24,019] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:24,020] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:24,024] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:11:24,023] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:11:24,024] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:24,025] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:24,025] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:24,025] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:24,025] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:24,026] DEBUG: 
[2021-07-30 15:11:24,026] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:24,027] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:24,027] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:24,028] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:24,028] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:24,028] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:24,029] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:24,029] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:24,030] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:24,030] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:24,030] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:11:24,031] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:11:24,031] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:24,032] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:24,033] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:24,033] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:24,034] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:26,032] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:11:26,032] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:11:26,033] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:26,033] DEBUG: 
[2021-07-30 15:11:26,034] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:11:26,034] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:26,035] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:26,035] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,279] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:11:28,279] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:11:28,279] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:11:28,279] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:11:28,279] DEBUG: n: 4
[2021-07-30 15:11:28,279] DEBUG: memoize is: True
[2021-07-30 15:11:28,279] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:11:28,280] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:11:28,280] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:11:28,281] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:11:28,281] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:11:28,281] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,281] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:11:28,281] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:11:28,281] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:11:28,281] DEBUG: channelMap keySet: . 
[2021-07-30 15:11:28,282] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:28,282] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:11:28,282] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:11:28,282] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:11:28,282] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:11:28,282] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:11:28,282] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:11:28,283] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,283] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:11:28,283] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:11:28,283] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:11:28,283] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:11:28,283] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:11:28,283] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:28,283] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:11:28,284] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:28,284] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:11:28,284] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:11:28,284] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:11:28,284] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:11:28,284] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:11:28,285] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:11:28,285] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:28,286] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,286] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:11:28,286] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,287] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:28,287] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:28,287] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:11:28,287] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,288] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,288] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:11:28,289] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:11:28,289] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:11:28,290] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:28,290] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:11:28,291] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:11:28,291] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:11:28,291] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,292] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:28,292] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:28,293] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:28,293] DEBUG: channelMap keySet: . . 
[2021-07-30 15:11:28,293] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,294] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:11:28,294] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:28,295] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:28,295] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:11:28,299] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:11:28,299] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:28,299] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:11:28,299] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:11:28,300] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,300] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,301] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
essage_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:11:28,301] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:28,302] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:11:28,302] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:11:28,303] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:11:28,303] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,303] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:11:28,303] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:11:28,304] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:11:28,304] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:11:28,304] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:11:28,306] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:11:28,306] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:28,307] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:11:28,307] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:11:28,307] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:28,307] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:11:28,307] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:11:28,308] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:28,308] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:11:28,309] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:28,309] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:11:28,310] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:11:28,310] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:11:28,314] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:11:28,314] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,314] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:11:28,314] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:11:28,315] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:11:28,316] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:11:28,316] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:11:28,316] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:11:28,317] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:11:28,317] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:28,318] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:11:28,318] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:28,319] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:28,319] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,319] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:28,320] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:11:28,320] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:28,321] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,321] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:11:28,321] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:11:28,321] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:28,322] DEBUG: 	MemoizationController: [0,1][0,2]

[2021-07-30 15:11:28,323] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:28,323] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:11:28,324] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:11:28,324] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,324] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:11:28,324] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:28,328] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:28,328] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,328] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:11:28,329] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:11:28,330] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:11:28,330] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,331] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:11:28,331] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:11:28,332] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,332] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:11:28,333] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:28,333] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:28,334] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:28,334] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:28,334] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:11:28,335] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,335] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:11:28,335] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:28,336] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:28,337] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:11:28,337] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,337] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:11:28,337] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:11:28,338] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:11:28,337] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:11:28,338] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:11:28,339] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,343] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:28,343] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:11:28,344] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:28,344] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:11:28,344] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:28,345] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:28,345] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:28,346] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:11:28,346] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,347] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:28,346] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:28,347] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:28,347] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:11:28,348] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:11:28,348] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:11:28,349] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,349] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:11:28,349] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:11:28,349] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:28,351] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:11:28,351] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:11:28,351] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:28,352] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:11:28,352] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:11:28,352] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:11:28,353] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:28,353] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:28,354] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:28,354] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:28,354] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:28,355] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:28,358] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:28,359] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,359] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,359] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:11:28,360] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:28,361] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:28,361] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:28,361] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:28,362] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:28,362] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:28,362] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:11:28,363] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,363] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,363] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:28,363] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:28,364] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:28,364] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:28,365] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:11:28,365] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:11:28,366] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:11:28,366] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:11:28,367] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,367] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:11:28,367] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:28,367] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:11:28,368] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:11:28,368] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:28,368] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:11:28,369] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:28,369] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:11:28,370] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:28,370] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:28,374] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,374] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:11:28,375] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:28,375] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:11:28,375] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:28,375] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:28,377] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:11:28,377] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:28,377] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:28,378] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:28,378] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:28,378] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:28,378] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:28,379] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,379] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:28,379] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:28,380] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:28,380] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:28,381] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:28,381] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:11:28,381] DEBUG: 
[2021-07-30 15:11:28,382] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,382] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:28,382] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,383] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:28,383] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:11:28,383] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:28,383] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:28,383] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:28,385] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:28,387] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:28,388] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:11:28,389] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:28,389] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:28,390] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:11:28,390] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,390] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:28,390] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:11:28,391] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:28,392] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:11:28,392] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:11:28,392] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001C7A3A71FA0>]>
[2021-07-30 15:11:28,393] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,393] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:28,393] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:28,394] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:28,394] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:11:28,395] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,395] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:28,395] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:28,396] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:28,396] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,396] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:28,397] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:28,397] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:11:28,397] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,398] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:11:28,397] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:28,398] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:28,398] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:28,399] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:11:28,399] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:28,402] DEBUG: 
[2021-07-30 15:11:28,403] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:28,403] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:11:28,403] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:28,404] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:11:28,404] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,404] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:28,404] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:28,405] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:28,405] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,406] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:28,406] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:28,406] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:28,406] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:28,407] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:28,407] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:11:28,408] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:11:28,408] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:28,408] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,409] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:28,409] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:11:28,410] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:11:28,410] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:28,411] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,411] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,412] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:11:28,411] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:11:28,412] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:28,413] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:28,413] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:11:28,413] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:28,414] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:11:28,414] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:11:28,415] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,415] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:28,419] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:11:28,419] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:11:28,420] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:28,420] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:28,420] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,421] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:28,422] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:28,421] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:28,422] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,422] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:11:28,423] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:28,423] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:28,424] DEBUG: 
[2021-07-30 15:11:28,424] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:28,424] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:11:28,424] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,425] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:11:28,425] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:11:28,426] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:28,426] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:28,426] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:28,427] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:28,427] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:28,427] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:28,427] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:28,428] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:11:28,429] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:28,429] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:28,429] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:28,430] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:28,430] DEBUG: 
[2021-07-30 15:11:28,430] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:28,431] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:28,434] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:28,434] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:28,435] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:28,436] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:28,436] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:11:28,436] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:28,436] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:28,437] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:28,437] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:28,437] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:11:28,438] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:28,438] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,438] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,439] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:28,440] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:28,440] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,440] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:28,441] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:28,441] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:28,442] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:28,442] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:11:28,443] DEBUG: Disabling memoization thread now...
[2021-07-30 15:11:28,443] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:28,443] DEBUG: MemoizationThread disabled.
[2021-07-30 15:11:28,443] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:28,444] DEBUG: 
[2021-07-30 15:11:28,444] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001C7A3A6CBE0>]>
[2021-07-30 15:11:28,444] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:11:28,445] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,445] DEBUG: 
[2021-07-30 15:11:28,445] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:28,445] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:28,446] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:11:28,447] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:11:28,446] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:28,451] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:28,451] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:28,451] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:28,451] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:28,452] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:28,452] DEBUG: 
[2021-07-30 15:11:28,453] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:28,453] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:28,454] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,454] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:28,455] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:28,455] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:28,455] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:28,456] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:28,456] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:28,456] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:28,457] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:11:28,457] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 2 secondValue: 2 combination.value: 4
[2021-07-30 15:11:28,458] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:28,458] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:11:28,459] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:28,459] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:11:28,460] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:30,455] DEBUG: Error. Expected value: 3, actual value: 4
[2021-07-30 15:11:30,455] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:11:30,456] DEBUG: 	[1,1]: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:11:30,456] DEBUG: 
[2021-07-30 15:11:30,457] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:11:30,457] DEBUG: 	3: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:30,458] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:11:30,458] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 4)
[2021-07-30 15:11:33,462] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:11:33,462] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:11:33,463] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:11:33,463] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:11:33,463] DEBUG: n: 4
[2021-07-30 15:11:33,463] DEBUG: memoize is: True
[2021-07-30 15:11:33,463] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:11:33,464] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:11:33,464] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:11:33,464] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:11:33,464] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:11:33,464] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,465] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:11:33,465] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:11:33,465] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:11:33,465] DEBUG: channelMap keySet: . 
[2021-07-30 15:11:33,465] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:33,465] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:11:33,466] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:11:33,466] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:11:33,466] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:11:33,466] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:11:33,466] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:11:33,466] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,466] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:11:33,467] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:11:33,467] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:11:33,467] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:11:33,467] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:11:33,467] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:33,467] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:11:33,467] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:11:33,467] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:11:33,467] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:11:33,467] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:11:33,468] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:11:33,468] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:11:33,468] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:11:33,469] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:33,469] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,470] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:11:33,470] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,471] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,471] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:33,471] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,471] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:11:33,472] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,472] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:11:33,473] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:11:33,473] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:11:33,474] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:33,474] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:11:33,475] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:11:33,475] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:11:33,475] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,476] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,476] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:33,477] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:11:33,477] DEBUG: channelMap keySet: . . 
[2021-07-30 15:11:33,478] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,478] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:11:33,478] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:33,479] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:33,479] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:11:33,479] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:11:33,480] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:33,480] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:11:33,481] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:11:33,481] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,481] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,481] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:11:33,482] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:11:33,486] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:33,487] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:11:33,487] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:11:33,488] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:11:33,488] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,488] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:11:33,488] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:11:33,488] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:11:33,489] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:11:33,488] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:11:33,490] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:11:33,490] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:33,491] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:11:33,491] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:11:33,492] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:33,492] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:11:33,492] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:11:33,492] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:33,493] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:11:33,493] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:11:33,493] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:11:33,494] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:11:33,494] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:11:33,494] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:11:33,495] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:11:33,494] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,495] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:11:33,496] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:11:33,497] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:11:33,497] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:11:33,500] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:11:33,501] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:33,501] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:11:33,502] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:11:33,502] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:33,503] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:33,503] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,503] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:11:33,504] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:11:33,504] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:11:33,504] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,505] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:11:33,505] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,505] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:11:33,506] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:33,506] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:11:33,506] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:33,507] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:11:33,507] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,507] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:11:33,508] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:11:33,508] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,508] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:11:33,508] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:11:33,509] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:11:33,510] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:33,510] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:11:33,510] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:11:33,511] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,511] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:11:33,512] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:11:33,512] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:11:33,516] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,517] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,517] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:33,518] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:33,518] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:11:33,519] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:33,519] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:33,519] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,519] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:11:33,520] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:11:33,520] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:33,520] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:11:33,520] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,521] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:11:33,521] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:11:33,522] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:11:33,522] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,523] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,523] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:11:33,524] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:33,524] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:11:33,525] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:33,525] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:33,526] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:33,526] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:11:33,526] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,527] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:33,527] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:33,527] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:33,528] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:11:33,528] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:11:33,529] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:11:33,532] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,532] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:11:33,532] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:11:33,533] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:11:33,533] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:11:33,534] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:11:33,534] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:11:33,534] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:11:33,535] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:11:33,535] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:11:33,536] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:11:33,536] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:11:33,537] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:11:33,537] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:11:33,538] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:11:33,538] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:33,538] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:11:33,539] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,539] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,539] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:11:33,540] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:33,540] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:33,540] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:33,541] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:33,541] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:11:33,541] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:33,542] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:11:33,542] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,542] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,542] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:33,543] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:33,543] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:33,544] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:33,544] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:11:33,545] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:11:33,548] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:11:33,548] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,549] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:11:33,548] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:11:33,549] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:11:33,550] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:11:33,550] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:11:33,551] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:33,552] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:11:33,552] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:33,553] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:11:33,553] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:11:33,553] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:33,553] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:33,554] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:11:33,555] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,556] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:11:33,555] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:11:33,555] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:11:33,556] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:33,557] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:33,557] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:33,557] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:33,557] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,558] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:33,559] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:33,558] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:33,559] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:11:33,559] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:33,560] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:11:33,560] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:33,561] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,561] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:33,561] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,565] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:33,565] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:11:33,566] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:33,566] DEBUG: 
[2021-07-30 15:11:33,566] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:11:33,567] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:33,567] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:33,567] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:33,568] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:33,568] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:11:33,569] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:33,569] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:33,569] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:33,570] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:11:33,571] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,571] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:11:33,571] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:33,572] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:11:33,572] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002385E9F0E50>]>
[2021-07-30 15:11:33,572] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:11:33,572] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:11:33,573] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,574] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:33,574] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:11:33,575] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:33,575] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:11:33,575] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:11:33,575] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,575] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:33,576] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:33,576] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:11:33,577] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,577] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:11:33,582] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,582] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:11:33,582] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:33,583] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:33,583] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:33,582] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:11:33,584] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:11:33,584] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:11:33,584] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:11:33,585] DEBUG: 
[2021-07-30 15:11:33,585] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:33,586] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:11:33,586] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:33,586] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,586] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:11:33,587] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:33,586] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:33,587] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:11:33,587] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,588] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:33,588] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:33,588] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:33,589] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:33,589] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:11:33,589] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:11:33,590] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:11:33,590] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:11:33,590] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:33,591] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,591] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:11:33,595] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:33,595] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:11:33,596] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,596] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,596] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:11:33,597] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:11:33,597] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:33,597] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:11:33,598] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:33,598] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:33,599] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:11:33,599] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:11:33,599] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,599] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:11:33,600] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:11:33,600] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:11:33,601] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:33,601] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:33,601] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,602] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:33,602] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:33,602] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:33,603] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,604] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:11:33,604] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:11:33,605] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:11:33,605] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:11:33,605] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:11:33,605] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:11:33,606] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:11:33,606] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:11:33,607] DEBUG: 
[2021-07-30 15:11:33,607] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:33,607] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:11:33,607] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,608] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:33,612] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:33,612] DEBUG: 
[2021-07-30 15:11:33,613] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:11:33,613] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:33,613] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:11:33,613] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,614] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:11:33,615] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:33,615] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:33,615] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:11:33,616] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:11:33,616] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:33,616] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:33,617] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:33,617] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:33,618] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:33,618] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:11:33,618] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:33,619] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:33,620] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:11:33,620] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:33,620] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:11:33,620] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:33,621] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:11:33,622] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:11:33,622] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:11:33,623] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,623] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:11:33,624] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002385E9E5130>]>
[2021-07-30 15:11:33,628] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:33,628] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:11:33,628] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:11:33,629] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:11:33,629] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:11:33,630] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:33,630] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:11:33,630] WARNING: MemoizationController already initialized.
[2021-07-30 15:11:33,630] DEBUG: Deliver end promised Results: 
[2021-07-30 15:11:33,631] DEBUG: 
[2021-07-30 15:11:33,631] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:11:33,632] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,632] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:11:33,633] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:11:33,633] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:11:33,634] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:11:33,633] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:33,634] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:11:33,635] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:33,635] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:11:33,635] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:11:33,636] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:11:33,636] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:11:33,637] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:11:33,637] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:33,637] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:11:33,638] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:11:33,639] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:33,639] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:11:33,639] DEBUG: Disabling memoization thread now...
[2021-07-30 15:11:33,640] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:11:33,640] DEBUG: MemoizationThread disabled.
[2021-07-30 15:11:33,643] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:33,644] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:11:33,645] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:33,645] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:11:33,644] DEBUG: 
[2021-07-30 15:11:33,645] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:11:33,646] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:11:33,646] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:11:33,646] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:11:33,647] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:11:33,648] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:11:33,647] DEBUG: 
[2021-07-30 15:11:33,649] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:11:33,649] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:11:33,649] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:11:33,650] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:11:33,650] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:11:33,651] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:11:33,651] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:11:33,652] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:11:33,652] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:11:33,652] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:11:33,653] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:11:33,653] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:11:33,653] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 15:11:33,654] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:11:33,654] DEBUG: 
[2021-07-30 15:11:33,654] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:11:33,655] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:11:33,655] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:11:33,655] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:33,656] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:11:33,659] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:11:33,660] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:11:33,660] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:11:33,661] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:33,661] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:11:33,662] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:11:35,660] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:11:35,660] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:11:35,661] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:11:35,661] DEBUG: 
[2021-07-30 15:11:35,662] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:11:35,662] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:11:35,662] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:11:35,663] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:13:05,790] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:13:05,790] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:13:05,791] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:13:05,791] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:13:05,791] DEBUG: n: 4
[2021-07-30 15:13:05,791] DEBUG: memoize is: True
[2021-07-30 15:13:05,791] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:13:05,792] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:13:05,792] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:13:05,792] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:13:05,792] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:13:05,793] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,793] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:13:05,793] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:13:05,793] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:13:05,793] DEBUG: channelMap keySet: . 
[2021-07-30 15:13:05,794] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:13:05,794] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:13:05,794] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:13:05,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:13:05,794] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:13:05,794] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:13:05,794] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:13:05,794] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,795] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:13:05,795] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:13:05,795] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:13:05,795] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:13:05,795] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:13:05,795] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:13:05,795] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:13:05,795] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:13:05,795] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:13:05,795] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:13:05,795] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:13:05,796] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:13:05,796] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:13:05,796] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:13:05,797] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:13:05,798] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:13:05,798] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:13:05,798] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,799] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,799] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:13:05,799] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,799] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:13:05,801] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,801] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:13:05,801] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:13:05,801] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:13:05,803] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:13:05,802] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:13:05,803] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:13:05,803] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:13:05,804] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,804] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:13:05,804] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,805] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:13:05,805] DEBUG: channelMap keySet: . . 
[2021-07-30 15:13:05,806] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,806] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:13:05,806] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:13:05,806] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:13:05,807] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:13:05,807] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:13:05,808] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:13:05,808] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:13:05,809] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:13:05,809] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,809] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,809] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:13:05,809] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:13:05,810] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:13:05,811] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:13:05,811] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:13:05,812] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:13:05,812] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,812] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:13:05,812] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:13:05,813] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:13:05,817] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:13:05,817] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:13:05,819] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:13:05,819] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:13:05,820] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:13:05,820] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:13:05,820] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:13:05,821] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:13:05,820] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:13:05,821] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:13:05,821] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:13:05,822] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:13:05,822] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:13:05,822] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:13:05,823] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,823] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:13:05,823] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:13:05,824] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:13:05,824] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:13:05,825] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:13:05,825] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:13:05,826] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:13:05,827] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:13:05,826] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:13:05,827] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:13:05,827] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:13:05,828] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:13:05,828] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:13:05,829] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:13:05,832] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:13:05,832] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:13:05,833] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:13:05,833] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:13:05,834] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,834] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:13:05,835] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:13:05,835] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:13:05,835] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:13:05,836] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,836] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:13:05,837] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,837] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:13:05,837] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:13:05,837] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:13:05,838] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,838] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:13:05,838] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:13:05,839] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:13:05,839] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:13:05,840] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:13:05,840] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:13:05,841] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:13:05,842] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:13:05,842] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:13:05,843] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,843] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:13:05,843] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:13:05,844] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:13:05,844] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:13:05,844] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:13:05,848] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,848] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,848] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:13:05,849] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:13:05,849] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:13:05,849] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,849] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:13:05,850] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:13:05,850] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:13:05,851] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:13:05,851] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,852] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:13:05,852] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:13:05,853] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:13:05,853] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:13:05,854] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:13:05,854] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,854] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:13:05,855] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:13:05,855] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,856] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:13:05,856] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:13:05,857] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:13:05,857] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:13:05,857] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:13:05,858] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:13:05,858] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:13:05,858] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,859] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:13:05,859] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:13:05,859] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:13:05,859] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:13:05,863] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:13:05,864] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:13:05,864] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:13:05,865] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:13:05,865] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:13:05,865] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:13:05,866] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:13:05,866] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:13:05,867] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:13:05,867] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:13:05,867] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:13:05,868] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,868] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:13:05,868] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:13:05,869] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:13:05,869] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:13:05,869] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:13:05,870] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:13:05,870] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:13:05,870] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:13:05,870] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:13:05,871] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,871] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,871] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:13:05,871] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:13:05,872] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:13:05,873] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:13:05,873] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:13:05,873] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:13:05,874] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,874] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:13:05,874] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:13:05,875] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:13:05,875] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:13:05,878] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:13:05,878] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:13:05,878] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:13:05,879] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:13:05,879] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:13:05,880] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:13:05,880] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:13:05,880] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:13:05,880] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:13:05,882] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,882] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:13:05,882] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:13:05,882] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:13:05,884] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:13:05,884] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:13:05,884] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:13:05,884] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:13:05,884] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:13:05,885] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:13:05,885] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:13:05,886] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:13:05,886] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:13:05,887] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:13:05,887] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:13:05,887] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:13:05,888] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,888] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,889] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:13:05,889] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:13:05,894] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:13:05,895] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:13:05,895] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:13:05,897] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:13:05,897] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:13:05,898] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:13:05,898] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:13:05,899] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:13:05,899] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,899] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:13:05,900] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:13:05,900] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002517E4F8B20>]>
[2021-07-30 15:13:05,899] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:13:05,901] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:13:05,900] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:13:05,902] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:13:05,901] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:13:05,902] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:13:05,902] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:13:05,903] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:13:05,903] WARNING: MemoizationController already initialized.
[2021-07-30 15:13:05,903] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:13:05,903] DEBUG: Deliver end promised Results: 
[2021-07-30 15:13:05,904] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:13:05,904] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,904] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:13:05,905] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:13:05,906] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:13:05,906] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:13:05,910] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:13:05,910] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:13:05,911] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:13:05,912] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:13:05,912] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:13:05,914] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:13:05,915] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,915] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:13:05,915] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:13:05,916] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:13:05,917] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:13:05,918] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:13:05,918] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:13:05,919] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:13:05,919] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:13:05,920] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:13:05,920] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:13:05,920] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:05,920] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:13:05,924] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:13:05,924] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:13:05,925] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:13:05,926] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:13:05,926] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:13:05,926] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:13:05,927] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:13:05,927] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:13:07,947] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:09,969] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:11,985] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:14,001] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:16,017] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:18,046] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:20,073] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:22,096] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:13:24,359] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,933] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:14:38,933] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:14:38,933] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:14:38,933] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:14:38,933] DEBUG: n: 4
[2021-07-30 15:14:38,933] DEBUG: memoize is: True
[2021-07-30 15:14:38,933] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:14:38,935] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:14:38,935] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:14:38,935] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:14:38,935] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:14:38,935] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,935] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:14:38,935] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:14:38,935] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:14:38,936] DEBUG: channelMap keySet: . 
[2021-07-30 15:14:38,936] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:14:38,936] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:14:38,936] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:14:38,936] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:14:38,937] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:14:38,937] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:14:38,937] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:14:38,937] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,937] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:14:38,937] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:14:38,937] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:14:38,937] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:14:38,937] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:14:38,938] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:14:38,938] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:14:38,938] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:14:38,938] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:14:38,938] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:14:38,938] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:14:38,938] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:14:38,939] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:14:38,939] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:14:38,939] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:14:38,940] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:14:38,940] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:14:38,941] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:38,941] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:38,942] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:14:38,942] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,942] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:14:38,944] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:38,944] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:14:38,945] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:14:38,945] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:14:38,946] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:14:38,947] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:14:38,948] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:14:38,948] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:14:38,948] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:38,948] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:14:38,948] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:38,949] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:14:38,949] DEBUG: channelMap keySet: . . 
[2021-07-30 15:14:38,949] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,950] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:14:38,950] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:14:38,951] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:14:38,951] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:14:38,956] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:14:38,956] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:14:38,957] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:14:38,957] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:14:38,957] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,957] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:38,958] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:14:38,958] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:14:38,959] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:14:38,960] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:14:38,960] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:14:38,960] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:14:38,961] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:14:38,961] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:14:38,962] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,962] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:14:38,962] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:14:38,963] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:14:38,963] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:14:38,964] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:14:38,964] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:14:38,965] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:14:38,965] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:14:38,965] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:14:38,966] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:14:38,967] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,967] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:14:38,968] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:14:38,967] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:14:38,971] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:14:38,971] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:14:38,972] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:14:38,972] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:14:38,972] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:14:38,973] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:14:38,973] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:14:38,974] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:14:38,974] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:14:38,974] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:14:38,975] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:14:38,975] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:14:38,976] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:14:38,976] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:14:38,977] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:14:38,977] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:14:38,978] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:14:38,978] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:14:38,978] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:14:38,978] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:14:38,979] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:14:38,980] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:14:38,981] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:14:38,981] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:14:38,981] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:38,981] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:14:38,982] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:14:38,982] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:14:38,983] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:14:38,983] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:38,984] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,984] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:14:38,988] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:14:38,988] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:14:38,988] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:38,988] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:14:38,988] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:14:38,989] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:14:38,990] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:38,991] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:14:38,991] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:14:38,992] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:38,992] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:14:38,992] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:14:38,993] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:14:38,993] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:14:38,993] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:38,993] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:14:38,994] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:14:38,994] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:14:38,995] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:14:38,995] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:38,995] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:14:38,996] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:14:38,995] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:14:38,996] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:14:38,997] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:38,997] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:14:38,998] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:14:38,998] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:14:38,999] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:38,999] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:14:39,000] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:14:39,003] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:14:39,004] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:14:39,004] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:14:39,004] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,005] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:14:39,005] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:14:39,006] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:14:39,006] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:14:39,006] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:14:39,007] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:14:39,007] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:14:39,007] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,008] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:14:39,008] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:14:39,009] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:14:39,009] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:14:39,009] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:14:39,010] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:14:39,010] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:14:39,011] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:14:39,011] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:14:39,012] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:14:39,012] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:14:39,013] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:14:39,013] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:14:39,013] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:14:39,014] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:14:39,014] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,014] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:14:39,014] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:14:39,015] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:14:39,015] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:14:39,016] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:14:39,019] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:14:39,019] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:14:39,020] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:14:39,020] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:14:39,021] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,021] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:39,021] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:14:39,021] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:14:39,022] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:14:39,022] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:14:39,023] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:14:39,024] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:14:39,024] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,024] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:14:39,024] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:14:39,024] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:14:39,025] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:14:39,025] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:14:39,025] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:14:39,026] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:14:39,027] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:14:39,027] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:14:39,028] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:14:39,028] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:14:39,028] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:14:39,029] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:14:39,030] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:14:39,029] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,030] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:14:39,030] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:14:39,030] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:14:39,031] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:14:39,031] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:14:39,035] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:14:39,037] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:14:39,032] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:14:39,037] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:14:39,037] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,038] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:14:39,037] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:14:39,039] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:14:39,039] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:14:39,039] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:14:39,039] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:14:39,040] DEBUG: 
[2021-07-30 15:14:39,040] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:14:39,041] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:14:39,041] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,041] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:39,041] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:14:39,041] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:14:39,042] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:14:39,042] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:14:39,042] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:14:39,044] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:14:39,044] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:14:39,045] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:14:39,045] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:14:39,045] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:14:39,046] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:14:39,046] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,046] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:14:39,046] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:14:39,046] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:14:39,046] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:14:39,047] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:14:39,050] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001237DE07A90>]>
[2021-07-30 15:14:39,051] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,052] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:14:39,052] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:14:39,052] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:14:39,052] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:14:39,053] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:14:39,053] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:39,053] DEBUG: Deliver end promised Results: 
[2021-07-30 15:14:39,054] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:14:39,054] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:14:39,055] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:14:39,054] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,055] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:14:39,055] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:14:39,055] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:14:39,056] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:14:39,056] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:14:39,057] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:14:39,057] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:14:39,057] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:14:39,058] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:14:39,058] DEBUG: 
[2021-07-30 15:14:39,059] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:14:39,059] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:14:39,060] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:14:39,060] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:14:39,060] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,060] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:14:39,061] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:14:39,062] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,062] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:14:39,062] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:14:39,063] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:14:39,063] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:14:39,066] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:14:39,067] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:14:39,067] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:14:39,067] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:14:39,068] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:14:39,068] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:14:39,069] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:14:39,069] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,070] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:14:39,070] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:14:39,071] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,071] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,071] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:14:39,071] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:14:39,072] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:14:39,072] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:14:39,072] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:14:39,073] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:14:39,074] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:14:39,074] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:14:39,074] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,074] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:14:39,075] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:14:39,075] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:14:39,076] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:14:39,076] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:14:39,077] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,077] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:14:39,078] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:14:39,077] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:14:39,078] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,079] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:14:39,082] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:14:39,083] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:14:39,083] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:14:39,084] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:14:39,084] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:14:39,084] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:14:39,085] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:14:39,085] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:14:39,086] DEBUG: 
[2021-07-30 15:14:39,086] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:14:39,086] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:14:39,086] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,087] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:14:39,087] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:14:39,088] DEBUG: 
[2021-07-30 15:14:39,088] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:14:39,088] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:14:39,088] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:14:39,089] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,089] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:14:39,090] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:14:39,090] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:14:39,090] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:14:39,091] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:14:39,091] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:14:39,091] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:14:39,092] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:14:39,092] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:14:39,093] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:14:39,093] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:14:39,094] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:14:39,094] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:14:39,095] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:14:39,098] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:14:39,099] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:14:39,099] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:14:39,100] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:14:39,100] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:14:39,100] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:14:39,101] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,102] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:14:39,102] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001237DE060A0>]>
[2021-07-30 15:14:39,103] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:14:39,103] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:14:39,103] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1]"
[2021-07-30 15:14:39,104] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:14:39,104] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:14:39,104] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:14:39,104] WARNING: MemoizationController already initialized.
[2021-07-30 15:14:39,105] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:14:39,105] DEBUG: Deliver end promised Results: 
[2021-07-30 15:14:39,105] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:14:39,106] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:14:39,106] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,107] DEBUG: 
[2021-07-30 15:14:39,107] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:14:39,107] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:14:39,108] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:14:39,108] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:14:39,108] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:14:39,108] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:14:39,109] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:14:39,110] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:14:39,110] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:14:39,111] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:14:39,111] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:14:39,115] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:14:39,115] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:14:39,115] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:14:39,116] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:14:39,116] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:14:39,116] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:14:39,116] DEBUG: Disabling memoization thread now...
[2021-07-30 15:14:39,117] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:14:39,118] DEBUG: MemoizationThread disabled.
[2021-07-30 15:14:39,118] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:14:39,119] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:14:39,120] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:14:39,119] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:14:39,119] DEBUG: 
[2021-07-30 15:14:39,119] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:14:39,120] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:14:39,121] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:14:39,122] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:14:39,121] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:14:39,122] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:14:39,122] DEBUG: 
[2021-07-30 15:14:39,123] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:14:39,123] DEBUG: [0,1][1,2][0,2]: Verifying ....... 
[2021-07-30 15:14:39,124] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:14:39,124] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:14:39,124] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:14:39,125] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:14:39,126] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:14:39,126] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:14:39,126] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:14:39,127] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:14:39,130] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:14:39,130] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:14:39,131] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 15:14:39,131] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:14:39,131] DEBUG: 
[2021-07-30 15:14:39,132] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:14:39,132] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:14:39,133] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:14:39,133] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:14:39,133] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:14:39,134] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:14:39,134] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:14:39,134] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:14:39,135] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:14:39,135] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:14:39,136] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:14:41,126] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:14:41,126] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:14:41,127] DEBUG: 	[1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:14:41,128] DEBUG: 
[2021-07-30 15:14:41,128] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:14:41,129] DEBUG: 	3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:14:41,129] DEBUG: 	4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:14:41,129] DEBUG: 	2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:15:50,997] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:15:50,997] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:15:50,997] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:15:50,997] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:15:50,997] DEBUG: n: 4
[2021-07-30 15:15:50,997] DEBUG: memoize is: True
[2021-07-30 15:15:50,997] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:15:50,998] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:15:50,999] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:15:50,999] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:15:50,999] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:15:50,999] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:50,999] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:15:50,999] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:15:50,999] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:15:51,000] DEBUG: channelMap keySet: . 
[2021-07-30 15:15:51,000] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:15:51,000] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:15:51,000] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:15:51,000] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:15:51,001] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:15:51,001] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:15:51,001] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:15:51,001] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,001] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:15:51,001] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:15:51,001] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:15:51,001] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:15:51,001] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:15:51,002] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:15:51,002] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:15:51,002] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:15:51,002] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:15:51,002] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:15:51,002] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:15:51,002] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:15:51,003] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:15:51,003] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:15:51,003] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:15:51,004] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:15:51,004] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:15:51,005] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,005] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,005] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:15:51,006] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:15:51,006] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,007] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,007] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:15:51,007] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:15:51,007] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:15:51,012] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:15:51,012] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:15:51,013] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:15:51,013] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:15:51,013] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,014] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,014] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:15:51,015] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:15:51,015] DEBUG: channelMap keySet: . . 
[2021-07-30 15:15:51,016] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,016] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
onMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:15:51,017] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:15:51,017] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:15:51,018] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:15:51,018] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:15:51,018] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:15:51,019] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:15:51,019] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,019] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,019] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:15:51,020] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:15:51,020] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:15:51,021] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:15:51,021] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:15:51,022] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:15:51,022] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,022] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:15:51,022] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:15:51,023] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:15:51,023] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:15:51,023] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:15:51,028] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:15:51,029] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:15:51,029] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:15:51,030] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:15:51,030] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:15:51,030] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:15:51,031] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:15:51,031] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:15:51,032] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:15:51,032] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:15:51,032] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:15:51,032] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:15:51,033] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:15:51,033] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:15:51,034] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,034] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:15:51,034] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:15:51,035] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:15:51,035] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:15:51,036] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:15:51,036] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:15:51,037] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:15:51,037] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:15:51,038] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:15:51,038] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:15:51,038] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:15:51,042] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:15:51,042] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:15:51,043] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:15:51,043] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:15:51,043] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:15:51,043] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,044] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:15:51,044] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,045] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:15:51,045] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:15:51,045] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:15:51,046] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:15:51,046] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,046] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:15:51,047] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:15:51,047] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:15:51,048] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:15:51,048] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,048] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:15:51,048] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:15:51,049] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:15:51,049] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:15:51,050] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:15:51,050] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:15:51,051] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,051] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:15:51,052] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:15:51,052] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:15:51,053] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,053] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:15:51,053] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:15:51,054] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,054] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:15:51,054] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:15:51,055] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:15:51,059] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:15:51,059] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,059] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:15:51,059] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:15:51,059] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:15:51,060] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:15:51,061] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,060] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:15:51,062] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:15:51,061] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:15:51,063] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:15:51,063] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:15:51,063] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:15:51,064] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,064] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:15:51,065] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:15:51,065] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,066] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:15:51,065] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:15:51,066] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:15:51,066] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:15:51,067] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:15:51,067] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:15:51,068] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:15:51,068] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,068] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:15:51,068] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:15:51,069] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:15:51,069] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:15:51,070] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:15:51,071] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:15:51,070] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:15:51,075] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:15:51,075] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:15:51,075] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:15:51,075] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:15:51,076] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:15:51,076] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:15:51,077] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:15:51,078] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:15:51,078] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,078] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:15:51,078] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:15:51,079] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:15:51,079] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:15:51,080] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:15:51,080] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:15:51,080] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:15:51,081] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:15:51,081] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:15:51,081] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,081] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,082] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:15:51,082] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:15:51,083] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:15:51,084] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:15:51,084] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:15:51,084] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:15:51,085] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,085] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:15:51,085] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:15:51,085] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:15:51,085] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:15:51,086] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:15:51,086] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:15:51,087] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:15:51,090] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:15:51,090] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:15:51,091] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:15:51,091] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:15:51,091] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:15:51,091] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:15:51,092] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:15:51,092] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,093] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:15:51,093] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:15:51,094] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:15:51,094] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:15:51,094] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:15:51,095] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:15:51,094] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:15:51,095] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:15:51,096] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:15:51,096] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:15:51,097] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:15:51,097] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]"
[2021-07-30 15:15:51,097] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:15:51,098] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:15:51,098] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:15:51,098] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,098] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,099] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:15:51,099] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:15:51,100] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:15:51,100] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:15:51,100] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:15:51,101] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:15:51,101] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:15:51,102] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:15:51,105] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:15:51,106] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,106] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:15:51,106] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:15:51,107] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:15:51,107] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000018BA48DD700>]>
[2021-07-30 15:15:51,107] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:15:51,108] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:15:51,107] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:15:51,108] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:15:51,109] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:15:51,109] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:15:51,110] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:15:51,110] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:15:51,110] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:15:51,111] WARNING: MemoizationController already initialized.
[2021-07-30 15:15:51,111] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:15:51,111] DEBUG: Deliver end promised Results: 
[2021-07-30 15:15:51,112] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:15:51,112] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:15:51,112] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,113] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]"
[2021-07-30 15:15:51,113] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:15:51,114] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:15:51,114] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:15:51,115] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:15:51,115] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:15:51,115] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:15:51,115] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:15:51,116] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:15:51,117] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,119] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:15:51,117] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:15:51,121] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:15:51,121] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:15:51,121] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:15:51,121] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:15:51,122] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:15:51,123] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:15:51,123] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:15:51,123] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:15:51,123] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:15:51,124] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:15:51,124] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:15:51,124] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:15:51,126] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:15:51,126] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:15:51,127] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:15:51,127] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:15:51,127] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:15:51,128] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:15:51,128] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]"
[2021-07-30 15:15:53,144] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,668] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:16:22,668] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:16:22,668] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:16:22,668] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:16:22,668] DEBUG: n: 4
[2021-07-30 15:16:22,668] DEBUG: memoize is: True
[2021-07-30 15:16:22,669] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:16:22,669] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:16:22,669] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:16:22,669] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:16:22,669] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:16:22,669] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,669] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:16:22,669] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:16:22,670] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:16:22,670] DEBUG: channelMap keySet: . 
[2021-07-30 15:16:22,670] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:16:22,670] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:16:22,670] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:16:22,671] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:16:22,671] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:16:22,671] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:16:22,671] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:16:22,671] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,671] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:16:22,671] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:16:22,671] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:16:22,671] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:16:22,672] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:16:22,672] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:16:22,672] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:16:22,672] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:16:22,672] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:16:22,672] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:16:22,672] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:16:22,672] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:16:22,673] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:16:22,673] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:16:22,674] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:16:22,674] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:16:22,675] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:16:22,675] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,675] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:16:22,676] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,676] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,676] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:16:22,677] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,677] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:16:22,678] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:16:22,677] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:16:22,679] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:16:22,679] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:16:22,680] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:16:22,680] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:16:22,680] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,681] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:16:22,681] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:16:22,681] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,682] DEBUG: channelMap keySet: . . 
[2021-07-30 15:16:22,682] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,682] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:16:22,683] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:16:22,683] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:16:22,683] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:16:22,684] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:16:22,684] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:16:22,685] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:16:22,685] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:16:22,685] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,685] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,686] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:16:22,686] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:16:22,687] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:16:22,691] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:16:22,691] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:16:22,692] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:16:22,692] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,693] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:16:22,693] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:16:22,692] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:16:22,694] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:16:22,694] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:16:22,695] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:16:22,695] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:16:22,696] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:16:22,696] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:16:22,697] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:16:22,697] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:16:22,697] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:16:22,698] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:16:22,698] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:16:22,698] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:16:22,699] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:16:22,699] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:16:22,700] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:16:22,700] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,700] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:16:22,700] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:16:22,701] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:16:22,701] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:16:22,701] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:16:22,702] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:16:22,706] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:16:22,707] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:16:22,707] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:16:22,708] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:16:22,708] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:16:22,708] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:16:22,709] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:16:22,709] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:16:22,710] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:16:22,710] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:16:22,710] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,710] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:16:22,711] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:16:22,711] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:16:22,712] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:16:22,712] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:16:22,712] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,713] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:16:22,713] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,713] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:16:22,713] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:16:22,714] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,714] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:16:22,714] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:16:22,715] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:16:22,715] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:16:22,716] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:16:22,717] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:16:22,717] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:16:22,721] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,721] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:16:22,722] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:16:22,723] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:16:22,723] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:16:22,723] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,724] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:16:22,724] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,724] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:16:22,725] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:16:22,725] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:16:22,726] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:16:22,726] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,726] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:16:22,726] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:16:22,726] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:16:22,727] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:16:22,728] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,727] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:16:22,729] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:16:22,729] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:16:22,730] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:16:22,730] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:16:22,730] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:16:22,731] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,731] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:16:22,731] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:16:22,732] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,732] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:16:22,732] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:16:22,733] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:16:22,733] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:16:22,734] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:16:22,737] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:16:22,738] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:16:22,738] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,739] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:16:22,739] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:16:22,739] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:16:22,739] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:16:22,740] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:16:22,741] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:16:22,741] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:16:22,742] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:16:22,742] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:16:22,742] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:16:22,743] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:16:22,743] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:16:22,744] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:16:22,744] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:16:22,744] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:16:22,745] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,745] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:16:22,745] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:16:22,746] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:16:22,746] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:16:22,746] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:16:22,747] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:16:22,747] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:16:22,747] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:16:22,748] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:16:22,748] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,748] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,748] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:16:22,749] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:16:22,749] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:16:22,753] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:16:22,753] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:16:22,754] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:16:22,754] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,754] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:16:22,754] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:16:22,755] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:16:22,755] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:16:22,755] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:16:22,756] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:16:22,756] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:16:22,757] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:16:22,757] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:16:22,758] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:16:22,758] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:16:22,758] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:16:22,760] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:16:22,760] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:16:22,760] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,760] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:16:22,761] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:16:22,761] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:16:22,762] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:16:22,761] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:16:22,762] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:16:22,762] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:16:22,763] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:16:22,763] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:16:22,764] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:16:22,763] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:16:22,765] DEBUG: x = 0, y = 1
[2021-07-30 15:16:22,765] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:16:22,765] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:16:22,765] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]"
[2021-07-30 15:16:22,768] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:16:22,768] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,768] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,769] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:16:22,769] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:16:22,769] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:16:22,770] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:16:22,771] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:16:22,771] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:16:22,771] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:16:22,771] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:16:22,772] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:16:22,772] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,772] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:16:22,772] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:16:22,773] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:16:22,773] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:16:22,774] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000002AFFEDA8BB0>]>
[2021-07-30 15:16:22,775] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:16:22,774] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:16:22,775] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:16:22,775] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:16:22,775] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:16:22,776] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:16:22,776] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:16:22,777] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:16:22,777] WARNING: MemoizationController already initialized.
[2021-07-30 15:16:22,777] DEBUG: Deliver end promised Results: 
[2021-07-30 15:16:22,778] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:16:22,778] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:16:22,778] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,779] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][1,2]"
[2021-07-30 15:16:22,779] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:16:22,779] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:16:22,780] DEBUG: x = 0, y = 1
[2021-07-30 15:16:22,780] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:16:22,781] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:16:22,781] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]"
[2021-07-30 15:16:22,781] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:16:22,785] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:16:22,785] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:16:22,786] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:16:22,787] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:16:22,786] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,786] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:16:22,787] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:16:22,788] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:16:22,788] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:16:22,788] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:16:22,789] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:16:22,789] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:16:22,789] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:16:22,790] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:16:22,790] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:16:22,790] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:16:22,791] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:16:22,791] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:16:22,792] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:16:22,793] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:16:22,793] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:16:22,793] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:16:22,793] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:16:22,794] DEBUG: >> fanin_problem_labeler(): parent_problem_label = "[0,1][0,2]"
[2021-07-30 15:16:22,794] DEBUG: x = 0, y = 1
[2021-07-30 15:16:22,794] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]"

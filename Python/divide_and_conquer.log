
C:\Users\benrc\source\repos\DaskServerless\DaskServerless\DaskServerless\DivideAndConquer\Python>python driver.py
[2021-07-30 15:20:19,630] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:20:19,630] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:20:19,630] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:20:19,630] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:20:19,630] DEBUG: n: 4
ProblemType memoize
[2021-07-30 15:20:19,630] DEBUG: memoize is: True
[2021-07-30 15:20:19,630] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:20:19,631] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:20:19,632] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:20:19,632] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,632] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
ProblemType memoize
[2021-07-30 15:20:19,632] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:20:19,632] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:20:19,632] DEBUG: channelMap keySet: .
ProblemType memoize
[2021-07-30 15:20:19,633] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,633] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:20:19,633] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:20:19,633] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:20:19,634] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:20:19,634] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:20:19,634] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:20:19,634] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:20:19,634] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,634] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:20:19,634] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:20:19,635] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:20:19,635] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:20:19,635] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:20:19,635] DEBUG: [0,1] Calling problem.Fanout()
len(subProblems): 2
[2021-07-30 15:20:19,635] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:20:19,635] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:20:19,636] DEBUG: [0,1]: Fanout: parent stack (len = 0):
[2021-07-30 15:20:19,636] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4)
ProblemType memoize
[2021-07-30 15:20:19,637] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,637] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:20:19,638] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,638] DEBUG:        MemoizationController: [0,1]
[2021-07-30 15:20:19,638] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,639] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,639] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:20:19,640] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,640] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:20:19,640] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:20:19,640] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,646] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,646] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:20:19,647] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,648] DEBUG:        MemoizationController: [0,1]
[2021-07-30 15:20:19,648] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,649] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,649] DEBUG: channelMap keySet: . .
[2021-07-30 15:20:19,649] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,650] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:20:19,650] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,651] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,651] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:20:19,651] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:20:19,652] DEBUG:        Memoization Controller: [0,1][0,2]
[2021-07-30 15:20:19,652] DEBUG:        Memoization Controller: [0,1][1,2]
[2021-07-30 15:20:19,652] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:20:19,653] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,653] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,653] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:20:19,653] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
ProblemType memoize
[2021-07-30 15:20:19,654] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:20:19,654] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:20:19,655] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:20:19,655] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:20:19,656] DEBUG: channelMap keySet: . . .
[2021-07-30 15:20:19,656] DEBUG: MemoizationThread: promise by: [0,1][0,2]
ProblemType memoize
[2021-07-30 15:20:19,657] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,660] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,657] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:20:19,661] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:20:19,661] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:20:19,661] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:20:19,661] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:20:19,662] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:20:19,662] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:20:19,663] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
ProblemType memoize
[2021-07-30 15:20:19,663] DEBUG: MemoizationThread: promise by: [0,1][1,2]
ProblemType memoize
[2021-07-30 15:20:19,664] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,664] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:20:19,664] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:20:19,665] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:20:19,665] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:20:19,666] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:20:19,666] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:20:19,667] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4)
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,667] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:20:19,668] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:20:19,669] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4)
[2021-07-30 15:20:19,669] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:20:19,670] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:20:19,670] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:20:19,671] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
len(subProblems): 2
[2021-07-30 15:20:19,672] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:20:19,672] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:20:19,672] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
len(subProblems): 2
[2021-07-30 15:20:19,676] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:20:19,676] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4)
[2021-07-30 15:20:19,677] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
ProblemType memoize
[2021-07-30 15:20:19,677] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,678] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,678] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:20:19,679] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4)
[2021-07-30 15:20:19,679] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,679] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,679] DEBUG:        MemoizationController: [0,1][0,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,680] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,681] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,681] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,681] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:20:19,681] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,682] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:20:19,682] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:20:19,682] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,682] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,683] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:20:19,683] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:20:19,684] DEBUG:        MemoizationController: [0,1][0,2]
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,685] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:20:19,685] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,686] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,686] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:20:19,686] DEBUG:        MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:20:19,687] DEBUG: channelMap keySet: . . . .
[2021-07-30 15:20:19,687] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,687] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,688] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,688] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:20:19,689] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:20:19,689] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,692] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:20:19,693] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:20:19,691] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:20:19,693] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
ProblemType memoize
[2021-07-30 15:20:19,694] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:20:19,693] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
ProblemType memoize
[2021-07-30 15:20:19,695] DEBUG:        MemoizationController: [0,1][0,2]
[2021-07-30 15:20:19,695] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:20:19,696] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,696] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:20:19,696] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,697] DEBUG:        MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:20:19,697] DEBUG:        MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:20:19,698] DEBUG: channelMap keySet: . . . . .
[2021-07-30 15:20:19,698] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,698] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:20:19,699] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:20:19,699] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,699] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:20:19,700] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:20:19,700] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:20:19,701] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,701] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:20:19,701] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,702] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:20:19,702] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:20:19,702] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:20:19,702] DEBUG: MemoizationController: pairing names after add
ProblemType memoize
[2021-07-30 15:20:19,703] DEBUG:        MemoizationController: [0,1][0,2]
ProblemType memoize
[2021-07-30 15:20:19,704] DEBUG:        MemoizationController: [0,1][1,2]
[2021-07-30 15:20:19,704] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:20:19,705] DEBUG:        MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:20:19,705] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:20:19,709] DEBUG:        MemoizationController: [0,1][0,2][0,2]
ProblemType memoize
[2021-07-30 15:20:19,710] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:20:19,710] DEBUG:        MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:20:19,711] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,711] DEBUG:        MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:20:19,711] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,712] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,712] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:20:19,712] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][1,2]
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,713] DEBUG:        Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:20:19,714] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,714] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,714] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:20:19,715] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,715] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,715] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:20:19,715] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:20:19,716] DEBUG: >> msg.memoization_label: 1
ProblemType memoize
[2021-07-30 15:20:19,716] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:20:19,717] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:20:19,717] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:20:19,718] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,718] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:20:19,718] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:20:19,718] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:20:19,718] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:20:19,719] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:20:19,719] DEBUG: channelMap keySet: . . . . . .
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,720] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:20:19,723] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
ProblemType memoize
[2021-07-30 15:20:19,723] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,724] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:20:19,724] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:20:19,724] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
[2021-07-30 15:20:19,724] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,725] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:20:19,725] DEBUG: >> Memoization Thread awaiting message...
ProblemType memoize
[2021-07-30 15:20:19,726] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:20:19,726] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:20:19,726] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:20:19,726] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:20:19,728] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:20:19,728] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,728] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,728] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,728] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
[2021-07-30 15:20:19,729] DEBUG:        Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:20:19,730] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 15:20:19,730] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,730] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,730] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:20:19,731] DEBUG: [0,1][0,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,731] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:20:19,732] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:20:19,732] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,732] DEBUG:
[2021-07-30 15:20:19,732] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,733] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:20:19,733] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,733] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:20:19,734] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:20:19,735] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
ProblemType memoize
[2021-07-30 15:20:19,738] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,739] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:20:19,739] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [1,1]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,740] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:20:19,741] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,741] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,742] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,742] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,742] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:20:19,742] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:20:19,743] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:20:19,743] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:20:19,744] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000014D17281E50>]>
[2021-07-30 15:20:19,744] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:20:19,745] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,745] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results:
[2021-07-30 15:20:19,745] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,746] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:20:19,746] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:20:19,747] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:20:19,747] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,747] DEBUG: Deliver end promised Results:
[2021-07-30 15:20:19,747] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:20:19,747] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
ProblemType memoize
[2021-07-30 15:20:19,748] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,748] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:20:19,748] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 15:20:19,749] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,749] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:20:19,750] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:20:19,750] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:20:19,753] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,754] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,755] DEBUG:        Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:20:19,755] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:20:19,756] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,756] DEBUG:
[2021-07-30 15:20:19,756] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,756] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,757] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,757] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:20:19,757] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,757] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,758] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:20:19,759] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:20:19,759] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,759] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
ProblemType memoize
[2021-07-30 15:20:19,760] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:20:19,760] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:20:19,760] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 0 secondValue: 1 combination.value: 1
[2021-07-30 15:20:19,761] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:20:19,761] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:20:19,761] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,762] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,762] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:20:19,762] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
ProblemType memoize
[2021-07-30 15:20:19,763] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,763] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:20:19,764] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 3 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,764] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,764] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
ProblemType memoize
[2021-07-30 15:20:19,765] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:20:19,765] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,765] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:20:19,770] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,770] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:20:19,770] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:20:19,771] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:20:19,771] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,771] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:20:19,772] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:20:19,772] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "3">
[2021-07-30 15:20:19,772] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,772] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
ProblemType memoize
[2021-07-30 15:20:19,773] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 3 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
ProblemType memoize
[2021-07-30 15:20:19,774] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,774] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
[2021-07-30 15:20:19,774] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:20:19,775] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,775] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:20:19,776] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2)
[2021-07-30 15:20:19,777] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][0,2]", x = 0, y = 1
[2021-07-30 15:20:19,777] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1]
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: faninId: [1,1]
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:20:19,778] DEBUG:
[2021-07-30 15:20:19,778] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:20:19,779] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:20:19,779] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,779] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,780] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:20:19,780] DEBUG:
[2021-07-30 15:20:19,781] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,781] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,781] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:20:19,781] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,785] DEBUG: [0,1][1,2][0,2]: ID: [0,1][1,2][0,2]: call combine ***************
[2021-07-30 15:20:19,786] DEBUG: [0,1][1,2][0,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,786] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,786] DEBUG: [0,1][1,2][0,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:20:19,787] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:20:19,787] DEBUG: [0,1][1,2][0,2]: FanIn: ID: [0,1][1,2][0,2], result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:20:19,787] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
ProblemType memoize
[2021-07-30 15:20:19,788] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,788] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,789] DEBUG: [0,1][1,2][0,2]: Exector: result.problem_id: [0,1][1,2][0,2] put memoizedLabel: 4 result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
[2021-07-30 15:20:19,789] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
ProblemType memoize
[2021-07-30 15:20:19,789] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,790] DEBUG: >> [0,1]: returning memoization label: "4"
ProblemType memoize
[2021-07-30 15:20:19,791] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "4">
[2021-07-30 15:20:19,791] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,791] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:20:19,791] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,792] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 4 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,793] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:20:19,793] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results:
ProblemType memoize
[2021-07-30 15:20:19,794] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,794] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:20:19,794] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x0000014D17279BE0>]>
[2021-07-30 15:20:19,795] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,795] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results:
[2021-07-30 15:20:19,795] DEBUG: >> returning hard-coded [1,1] for fanin problem label (parent_problem_label = [0,1])
[2021-07-30 15:20:19,796] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:20:19,796] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:20:19,797] DEBUG: [0,1][0,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,797] WARNING: MemoizationController already initialized.
[2021-07-30 15:20:19,797] DEBUG: Deliver end promised Results:
[2021-07-30 15:20:19,797] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:20:19,797] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:20:19,798] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,801] DEBUG:
ProblemType memoize
[2021-07-30 15:20:19,803] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:20:19,803] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:20:19,803] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:20:19,804] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:20:19,804] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:20:19,804] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,804] DEBUG:        Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:20:19,805] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,806] DEBUG:        Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:20:19,806] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 1)
[2021-07-30 15:20:19,806] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:20:19,806] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:20:19,806] DEBUG: channelMap keySet: . . . . . . .
[2021-07-30 15:20:19,807] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,807] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:20:19,808] DEBUG: Disabling memoization thread now...
ProblemType memoize
[2021-07-30 15:20:19,808] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:20:19,809] DEBUG: MemoizationThread disabled.
[2021-07-30 15:20:19,809] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:20:19,809] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,809] DEBUG:
[2021-07-30 15:20:19,810] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
ProblemType memoize
[2021-07-30 15:20:19,811] DEBUG: [0,1][1,2][0,2]: Fibonacci(4) = 2
[2021-07-30 15:20:19,811] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:20:19,811] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:20:19,811] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,812] DEBUG:
[2021-07-30 15:20:19,812] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:20:19,812] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,816] DEBUG: [0,1][1,2][0,2]: Verifying .......
[2021-07-30 15:20:19,817] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
ProblemType memoize
[2021-07-30 15:20:19,817] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:20:19,818] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:20:19,818] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:20:19,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:20:19,819] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:20:19,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
ProblemType memoize
ProblemType memoize
[2021-07-30 15:20:19,820] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:20:19,820] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3)
[2021-07-30 15:20:19,821] DEBUG: >> returning fanin label "[1,1]", parent problem label = "[0,1][1,2]", x = 0, y = 1
[2021-07-30 15:20:19,821] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:20:19,821] DEBUG: [0,1][1,2][1,2]: faninId: [1,1]
[2021-07-30 15:20:19,822] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:20:19,822] DEBUG:
[2021-07-30 15:20:19,823] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:20:19,823] DEBUG: isLastFanInExecutor: Writing to [1,1] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:20:19,823] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [1,1]: : Returned from put: executor isLastFanInExecutor
[2021-07-30 15:20:19,824] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:19,824] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:20:19,824] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:20:19,825] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 2 secondValue: 0 combination.value: 2
[2021-07-30 15:20:19,825] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,826] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:19,826] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
ProblemType memoize
[2021-07-30 15:20:19,827] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:20:21,823] DEBUG: Error. Expected value: 3, actual value: 2
[2021-07-30 15:20:21,823] DEBUG: =-=-=-= RESULT MAP =-=-=-=
[2021-07-30 15:20:21,824] DEBUG:        [1,1]: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:20:21,824] DEBUG:
[2021-07-30 15:20:21,825] DEBUG: =-=-=-= MEMOIZATION MAP =-=-=-=
[2021-07-30 15:20:21,825] DEBUG:        3: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:20:21,825] DEBUG:        4: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)
[2021-07-30 15:20:21,826] DEBUG:        2: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 2)[2021-07-30 15:34:39,805] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:34:39,805] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:34:39,806] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:34:39,806] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:34:39,806] DEBUG: n: 4
[2021-07-30 15:34:39,806] DEBUG: memoize is: True
[2021-07-30 15:34:39,806] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:34:39,807] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:34:39,807] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:34:39,807] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:34:39,807] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:34:39,808] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,808] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:34:39,808] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:34:39,808] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:34:39,808] DEBUG: channelMap keySet: . 
[2021-07-30 15:34:39,809] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:34:39,809] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:34:39,809] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:34:39,809] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:34:39,809] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:34:39,809] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:34:39,809] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:34:39,809] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,809] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:34:39,810] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:34:39,810] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:34:39,810] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:34:39,810] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:34:39,810] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:34:39,810] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:34:39,811] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:34:39,811] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:34:39,811] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:34:39,812] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:34:39,812] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,813] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,813] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:34:39,814] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,814] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:34:39,814] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,815] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,815] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:34:39,820] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,820] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:34:39,821] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:34:39,821] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:34:39,823] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:34:39,822] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,823] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:34:39,823] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:34:39,824] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,824] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:34:39,825] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,825] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,826] DEBUG: channelMap keySet: . . 
[2021-07-30 15:34:39,827] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:34:39,827] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:34:39,828] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:34:39,828] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,829] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:34:39,829] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:34:39,830] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:34:39,830] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:34:39,831] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,831] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,833] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:34:39,834] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:34:39,835] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:34:39,836] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:34:39,836] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:34:39,837] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:34:39,837] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,837] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:34:39,837] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:34:39,838] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:34:39,838] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:34:39,838] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:34:39,839] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:34:39,840] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:34:39,840] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:34:39,840] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:34:39,841] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:34:39,841] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:34:39,841] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:34:39,842] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:34:39,843] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:34:39,843] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:34:39,843] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:34:39,843] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:34:39,844] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:34:39,844] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:34:39,844] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,844] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:34:39,846] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:34:39,846] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:34:39,850] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:34:39,850] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:34:39,852] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:34:39,852] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,853] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:34:39,853] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:39,854] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:34:39,855] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,854] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:34:39,855] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:34:39,855] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:34:39,856] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,856] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:34:39,857] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,857] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:34:39,857] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,857] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:34:39,858] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,858] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:34:39,859] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,859] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:34:39,860] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:34:39,861] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,861] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:34:39,861] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:34:39,861] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:34:39,861] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:34:39,863] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:34:39,863] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:34:39,868] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:34:39,868] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:34:39,868] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,869] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:34:39,869] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:34:39,870] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,871] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:34:39,871] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,872] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:34:39,872] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,872] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,873] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,873] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:34:39,873] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:34:39,873] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,874] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:34:39,875] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:34:39,875] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,875] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:34:39,875] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:34:39,875] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,877] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,877] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:34:39,878] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,878] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:34:39,878] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:34:39,879] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,882] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,882] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:34:39,883] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,883] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:34:39,883] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:34:39,884] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:34:39,884] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:34:39,885] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:34:39,885] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:34:39,886] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,886] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:34:39,886] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,886] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:34:39,887] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:34:39,887] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:34:39,888] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:34:39,888] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:34:39,889] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:34:39,890] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:34:39,890] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:34:39,891] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:34:39,891] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:34:39,891] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:34:39,892] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:34:39,893] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:34:39,893] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:34:39,893] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,894] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:34:39,894] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:34:39,894] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,895] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:34:39,898] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:34:39,898] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:34:39,899] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:34:39,899] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:34:39,899] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:34:39,900] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,900] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,900] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:34:39,901] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:34:39,901] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:34:39,902] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:34:39,902] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:34:39,902] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:34:39,903] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:34:39,902] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,902] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
2] ack was None result.
[2021-07-30 15:34:39,903] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:34:39,904] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:34:39,904] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:34:39,905] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:34:39,906] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:34:39,906] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:34:39,907] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:34:39,907] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:34:39,907] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:34:39,908] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,908] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:34:39,909] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,910] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:34:39,909] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:34:39,913] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:34:39,913] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:34:39,914] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:34:39,915] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:34:39,914] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:34:39,915] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:34:39,916] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:34:39,916] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:39,917] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:34:39,917] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:34:39,918] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:34:39,919] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,919] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,919] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:34:39,920] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:34:39,922] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:34:39,923] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,923] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:34:39,924] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:34:39,924] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:34:39,925] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:34:39,925] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:34:39,929] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:34:39,929] DEBUG: >> Memoization Thread awaiting message...
[1,2] got ack.
[2021-07-30 15:34:39,930] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:34:39,931] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:34:39,931] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001546054AB80>]>
[2021-07-30 15:34:39,930] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:34:39,931] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:34:39,932] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:34:39,933] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,933] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:34:39,933] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:34:39,933] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:34:39,934] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:34:39,934] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:34:39,935] WARNING: MemoizationController already initialized.
[2021-07-30 15:34:39,935] DEBUG: Deliver end promised Results: 
[2021-07-30 15:34:39,935] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:34:39,936] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,937] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:34:39,937] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:34:39,938] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:34:39,939] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:34:39,940] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,944] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:34:39,944] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:34:39,947] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:34:39,947] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:39,947] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:34:39,948] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:34:39,949] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:34:39,949] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:34:39,951] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:34:39,951] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:34:39,952] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:34:39,952] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:34:39,952] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:34:39,953] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:34:39,954] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:34:39,955] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:34:39,955] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:34:39,957] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:34:39,959] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:34:39,960] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:34:39,960] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:34:39,961] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:34:41,972] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:44,001] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:34:46,017] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,735] DEBUG: Running DivideandConquerFibonacci
[2021-07-30 15:35:11,736] DEBUG: INPUT_THRESHOLD is: 0
[2021-07-30 15:35:11,736] DEBUG: OUTPUT_THRESHOLD is: 9223372036854775807
[2021-07-30 15:35:11,736] DEBUG: SEQUENTIAL_THRESHOLD is: 1
[2021-07-30 15:35:11,736] DEBUG: n: 4
[2021-07-30 15:35:11,736] DEBUG: memoize is: True
[2021-07-30 15:35:11,736] DEBUG: Root Problem: (ID: None, value: 4)
[2021-07-30 15:35:11,737] DEBUG: >> Starting Memoization Controller now...
[2021-07-30 15:35:11,737] DEBUG: Initial pairing name: "[0,1]"
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Thread has started running...
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Controller started successfully!
[2021-07-30 15:35:11,738] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,738] DEBUG: >>>> Executor for Problem ID [0,1] has started running!
[2021-07-30 15:35:11,738] DEBUG: >> Attempting to pair now using the pairing name "[0,1]"...
[2021-07-30 15:35:11,738] DEBUG: MemoizationController: pair: [0,1]
[2021-07-30 15:35:11,738] DEBUG: channelMap keySet: . 
[2021-07-30 15:35:11,739] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,739] DEBUG: memoized send1: problem.problem_id [0,1] memoized_label: 4
[2021-07-30 15:35:11,739] DEBUG: memoized get: problem.problem_id [0,1] getting ack.
[2021-07-30 15:35:11,739] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "4">
[2021-07-30 15:35:11,739] DEBUG: >> msg.memoization_label: 4
[2021-07-30 15:35:11,739] DEBUG: >> Keys of MemoizationRecords (0): []
[2021-07-30 15:35:11,739] DEBUG: MemoizationThread: promise by: [0,1]
[2021-07-30 15:35:11,740] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] got ack.
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] ack was None result.
[2021-07-30 15:35:11,740] DEBUG: memoized get: problem.problem_id [0,1] memoized_label: 4 memoized result: None
[2021-07-30 15:35:11,740] DEBUG: [0,1] Calling problem.divide()
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: fibonacci run: value: 4
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: fan_in_stack:
[2021-07-30 15:35:11,740] DEBUG: [0,1]: Divide: problem_id: [0,1]
[2021-07-30 15:35:11,740] DEBUG: [0,1]: divide: minus_1: (ID: None, value: 3)
[2021-07-30 15:35:11,740] DEBUG: [0,1]: divide: minus_2: (ID: None, value: 2)
[2021-07-30 15:35:11,741] DEBUG: [0,1] Calling problem.Fanout()
[2021-07-30 15:35:11,741] DEBUG: >> [0,1]: generated fan-out ID "[0,1][0,2]"
[2021-07-30 15:35:11,741] INFO: [0,1]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1], value: 4)
[2021-07-30 15:35:11,742] DEBUG: [0,1]: Fanout: parent stack (len = 0): 
[2021-07-30 15:35:11,742] DEBUG: [0,1]: Fanout: subProblem stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,743] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,743] DEBUG: MemoizationController: add pairing name: [0,1][0,2]
[2021-07-30 15:35:11,743] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,744] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,744] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:35:11,744] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,744] DEBUG: [0,1]: Fanout: ID: [0,1] invoking new right executor: [0,1][0,2]
[2021-07-30 15:35:11,745] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,746] DEBUG: >> [0,1]: Become fanout ID: [0,1][1,2]
[2021-07-30 15:35:11,746] DEBUG: >>>> Executor for Problem ID [0,1][0,2] has started running!
[2021-07-30 15:35:11,746] DEBUG: [0,1]: Fanout: ID: [0,1] becoming left executor: [0,1][1,2]
[2021-07-30 15:35:11,747] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2]"...
[2021-07-30 15:35:11,748] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,748] DEBUG: MemoizationController: add pairing name: [0,1][1,2]
[2021-07-30 15:35:11,748] DEBUG: MemoizationController: pair: [0,1][0,2]
[2021-07-30 15:35:11,749] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,749] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,750] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,753] DEBUG: 	MemoizationController: [0,1]
[2021-07-30 15:35:11,754] DEBUG: channelMap keySet: . . 
[2021-07-30 15:35:11,755] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,755] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,755] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1]", problem_or_result_id = "[0,1]", memoization_label: "None">
[2021-07-30 15:35:11,756] DEBUG: memoized send1: problem.problem_id [0,1][0,2] memoized_label: 2
[2021-07-30 15:35:11,756] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,756] DEBUG: memoized get: problem.problem_id [0,1][0,2] getting ack.
[2021-07-30 15:35:11,757] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:35:11,757] DEBUG: 	Memoization Controller: [0,1][0,2]
[2021-07-30 15:35:11,758] DEBUG: MemoizationController: remove pairing name: [0,1] pairingNames.size: 2
[2021-07-30 15:35:11,758] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,758] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,759] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "2">
[2021-07-30 15:35:11,759] DEBUG: >>>> Executor for Problem ID [0,1][1,2] has started running!
[2021-07-30 15:35:11,760] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:35:11,760] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2]"...
[2021-07-30 15:35:11,761] DEBUG: >> Keys of MemoizationRecords (1): ['4']
[2021-07-30 15:35:11,761] DEBUG: MemoizationController: pair: [0,1][1,2]
[2021-07-30 15:35:11,761] DEBUG: channelMap keySet: . . . 
[2021-07-30 15:35:11,762] DEBUG: MemoizationThread: promise by: [0,1][0,2]
[2021-07-30 15:35:11,762] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,762] DEBUG: memoized get: problem.problem_id [0,1][0,2] got ack.
[2021-07-30 15:35:11,763] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,764] DEBUG: memoized get: problem.problem_id [0,1][0,2] ack was None result.
[2021-07-30 15:35:11,764] DEBUG: memoized send1: problem.problem_id [0,1][1,2] memoized_label: 3
[2021-07-30 15:35:11,764] DEBUG: memoized get: problem.problem_id [0,1][0,2] memoized_label: 2 memoized result: None
[2021-07-30 15:35:11,765] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "3">
[2021-07-30 15:35:11,765] DEBUG: memoized get: problem.problem_id [0,1][1,2] getting ack.
[2021-07-30 15:35:11,766] DEBUG: >> msg.memoization_label: 3
[2021-07-30 15:35:11,769] DEBUG: [0,1][0,2] Calling problem.divide()
[2021-07-30 15:35:11,770] DEBUG: >> Keys of MemoizationRecords (2): ['2', '4']
[2021-07-30 15:35:11,770] DEBUG: [0,1][0,2]: Divide: fibonacci run: value: 2
[2021-07-30 15:35:11,770] DEBUG: MemoizationThread: promise by: [0,1][1,2]
[2021-07-30 15:35:11,772] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:35:11,772] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,772] DEBUG: memoized get: problem.problem_id [0,1][1,2] got ack.
[2021-07-30 15:35:11,772] DEBUG: [0,1][0,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:35:11,773] DEBUG: memoized get: problem.problem_id [0,1][1,2] ack was None result.
[2021-07-30 15:35:11,773] DEBUG: [0,1][0,2]: Divide: problem_id: [0,1][0,2]
[2021-07-30 15:35:11,774] DEBUG: memoized get: problem.problem_id [0,1][1,2] memoized_label: 3 memoized result: None
[2021-07-30 15:35:11,774] DEBUG: [0,1][0,2]: divide: minus_1: (ID: None, value: 1)
[2021-07-30 15:35:11,775] DEBUG: [0,1][0,2]: divide: minus_2: (ID: None, value: 0)
[2021-07-30 15:35:11,775] DEBUG: [0,1][1,2] Calling problem.divide()
[2021-07-30 15:35:11,776] DEBUG: [0,1][0,2] Calling problem.Fanout()
[2021-07-30 15:35:11,776] DEBUG: [0,1][1,2]: Divide: fibonacci run: value: 3
[2021-07-30 15:35:11,777] DEBUG: >> [0,1][0,2]: generated fan-out ID "[0,1][0,2][0,2]"
[2021-07-30 15:35:11,777] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:35:11,778] INFO: [0,1][0,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][0,2], value: 2)
[2021-07-30 15:35:11,778] DEBUG: [0,1][1,2]: Divide: fan_in_stack:(ID: [0,1], value: 4) 
[2021-07-30 15:35:11,778] DEBUG: [0,1][1,2]: Divide: problem_id: [0,1][1,2]
[2021-07-30 15:35:11,778] DEBUG: [0,1][0,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,779] DEBUG: [0,1][0,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,779] DEBUG: [0,1][1,2]: divide: minus_1: (ID: None, value: 2)
[2021-07-30 15:35:11,780] DEBUG: [0,1][1,2]: divide: minus_2: (ID: None, value: 1)
[2021-07-30 15:35:11,780] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,781] DEBUG: [0,1][1,2] Calling problem.Fanout()
[2021-07-30 15:35:11,781] DEBUG: MemoizationController: add pairing name: [0,1][0,2][0,2]
[2021-07-30 15:35:11,782] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,785] DEBUG: >> [0,1][1,2]: generated fan-out ID "[0,1][1,2][0,2]"
[2021-07-30 15:35:11,786] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,786] INFO: [0,1][1,2]: Fanout: push on childFanInStack: (parent) problem: (ID: [0,1][1,2], value: 3)
[2021-07-30 15:35:11,787] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,787] DEBUG: [0,1][1,2]: Fanout: parent stack (len = 1): (ID: [0,1], value: 4) 
[2021-07-30 15:35:11,787] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,788] DEBUG: [0,1][1,2]: Fanout: subProblem stack (len = 2): (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,788] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,788] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] invoking new right executor: [0,1][0,2][0,2]
[2021-07-30 15:35:11,790] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,790] DEBUG: MemoizationController: add pairing name: [0,1][1,2][0,2]
[2021-07-30 15:35:11,791] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,791] DEBUG: >> [0,1][0,2]: Become fanout ID: [0,1][0,2][1,2]
[2021-07-30 15:35:11,791] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,791] DEBUG: >>>> Executor for Problem ID [0,1][0,2][0,2] has started running!
[2021-07-30 15:35:11,791] DEBUG: [0,1][0,2]: Fanout: ID: [0,1][0,2] becoming left executor: [0,1][0,2][1,2]
[2021-07-30 15:35:11,792] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,793] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][0,2]"...
[2021-07-30 15:35:11,793] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,794] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,794] DEBUG: MemoizationController: pair: [0,1][0,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: channelMap keySet: . . . . 
[2021-07-30 15:35:11,795] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,795] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] invoking new right executor: [0,1][1,2][0,2]
[2021-07-30 15:35:11,795] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,796] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:35:11,796] DEBUG: >> [0,1][1,2]: Become fanout ID: [0,1][1,2][1,2]
[2021-07-30 15:35:11,796] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,797] DEBUG: memoized send1: problem.problem_id [0,1][0,2][0,2] memoized_label: 0
[2021-07-30 15:35:11,800] DEBUG: [0,1][1,2]: Fanout: ID: [0,1][1,2] becoming left executor: [0,1][1,2][1,2]
[2021-07-30 15:35:11,796] DEBUG: MemoizationController: add pairing name: [0,1][0,2][1,2]
[2021-07-30 15:35:11,800] DEBUG: >>>> Executor for Problem ID [0,1][1,2][0,2] has started running!
[2021-07-30 15:35:11,801] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,801] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] getting ack.
[2021-07-30 15:35:11,802] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,803] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][0,2]"...
[2021-07-30 15:35:11,803] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,804] DEBUG: MemoizationController: pair: [0,1][1,2][0,2]
[2021-07-30 15:35:11,804] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,804] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,805] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:35:11,805] DEBUG: channelMap keySet: . . . . . 
[2021-07-30 15:35:11,806] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,806] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:35:11,806] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:35:11,807] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,807] DEBUG: memoized send1: problem.problem_id [0,1][1,2][0,2] memoized_label: 1
[2021-07-30 15:35:11,808] DEBUG: >> Keys of MemoizationRecords (3): ['2', '3', '4']
[2021-07-30 15:35:11,808] DEBUG: MemoizationThread: promise by: [0,1][0,2][0,2]
[2021-07-30 15:35:11,809] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,809] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] got ack.
[2021-07-30 15:35:11,810] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.ADDPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,809] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] ack was None result.
[2021-07-30 15:35:11,810] DEBUG: MemoizationController: add pairing name: [0,1][1,2][1,2]
[2021-07-30 15:35:11,810] DEBUG: memoized get: problem.problem_id [0,1][0,2][0,2] memoized_label: 0 memoized result: None
[2021-07-30 15:35:11,811] DEBUG: MemoizationController: pairing names after add
[2021-07-30 15:35:11,812] DEBUG: [0,1][0,2][0,2]: Sequential: [0,1][0,2][0,2] result.value: 0
[2021-07-30 15:35:11,812] DEBUG: 	MemoizationController: [0,1][0,2]
[2021-07-30 15:35:11,815] DEBUG: [0,1][0,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 0)
[2021-07-30 15:35:11,815] DEBUG: 	MemoizationController: [0,1][0,2][0,2]
[2021-07-30 15:35:11,816] DEBUG: >> [0,1][0,2][0,2]: returning memoization label: "0"
[2021-07-30 15:35:11,816] DEBUG: 	MemoizationController: [0,1][1,2]
[2021-07-30 15:35:11,817] DEBUG: result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,817] DEBUG: 	MemoizationController: [0,1][1,2][0,2]
[2021-07-30 15:35:11,818] DEBUG: 	MemoizationController: [0,1][0,2][1,2]
[2021-07-30 15:35:11,818] DEBUG: 	MemoizationController: [0,1][1,2][1,2]
[2021-07-30 15:35:11,819] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,819] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] getting ack.
[2021-07-30 15:35:11,819] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2]", problem_or_result_id = "[0,1][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,820] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,820] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:35:11,820] DEBUG: 	Memoization Controller: [0,1][1,2]
[2021-07-30 15:35:11,821] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,822] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,822] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,822] DEBUG: MemoizationController: remove pairing name: [0,1][0,2] pairingNames.size: 5
[2021-07-30 15:35:11,823] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,823] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,823] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:35:11,823] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:35:11,824] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:35:11,824] DEBUG: >> Keys of MemoizationRecords (4): ['0', '2', '3', '4']
[2021-07-30 15:35:11,825] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:35:11,825] DEBUG: MemoizationThread: promise by: [0,1][1,2][0,2]
[2021-07-30 15:35:11,826] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,826] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] got ack.
[2021-07-30 15:35:11,826] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:35:11,827] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] ack was None result.
[2021-07-30 15:35:11,827] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "0">
[2021-07-30 15:35:11,828] DEBUG: memoized get: problem.problem_id [0,1][1,2][0,2] memoized_label: 1 memoized result: None
[2021-07-30 15:35:11,828] DEBUG: channelMap keySet: . . . . . . 
[2021-07-30 15:35:11,831] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2][0,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,832] DEBUG: [0,1][1,2][0,2]: Sequential: [0,1][1,2][0,2] result.value: 1
[2021-07-30 15:35:11,833] DEBUG: MemoizationThread: sender: [0,1][0,2][0,2] problem/result ID [0,1][0,2][0,2] memoization_label: 0 delivered result: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,834] DEBUG: [0,1][0,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,834] DEBUG: [0,1][1,2][0,2] base case: result before ProcessBaseCase(): None: (ID: None/value: 1)
[2021-07-30 15:35:11,833] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "1"
[2021-07-30 15:35:11,835] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2]
[2021-07-30 15:35:11,834] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,836] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 1
[2021-07-30 15:35:11,836] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,836] DEBUG: [0,1][0,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:35:11,837] DEBUG: >> [0,1][1,2][0,2]: returning memoization label: "1"
[2021-07-30 15:35:11,838] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2]", problem_or_result_id = "[0,1][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,838] DEBUG: [0,1][0,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,838] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:35:11,838] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,838] DEBUG: result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,839] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][0,2]", x = 0, y = 2
[2021-07-30 15:35:11,840] DEBUG: 	Memoization Controller: [0,1][0,2][0,2]
[2021-07-30 15:35:11,840] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:35:11,840] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,841] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,841] DEBUG: [0,1][0,2][0,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,842] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,842] DEBUG: [0,1][0,2][0,2]: Fan-in: problem ID: [0,1][0,2][0,2] problem.become_executor: False parentProblem.become_executor: False
[2021-07-30 15:35:11,843] DEBUG: MemoizationController: remove pairing name: [0,1][1,2] pairingNames.size: 4
[2021-07-30 15:35:11,843] DEBUG: 
[2021-07-30 15:35:11,843] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,843] DEBUG: [0,1][0,2][0,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,843] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,847] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,847] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "1">
[2021-07-30 15:35:11,848] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:35:11,848] DEBUG: Fan-In: ID: [0,1][0,2][0,2]: FanInID: [0,1][2,2]: is not become Executor and its value was: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0) and after put is [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,848] DEBUG: >> msg.memoization_label: 1
[2021-07-30 15:35:11,849] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
,2]"...
[2021-07-30 15:35:11,851] DEBUG: MemoizationThread: duplicate promise by: [0,1][0,2][1,2]
[2021-07-30 15:35:11,851] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:35:11,851] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,852] DEBUG: >> MemoizationThread: sending StopResult for [0,1][0,2][1,2]
[2021-07-30 15:35:11,852] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "2"
[2021-07-30 15:35:11,852] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,853] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "1">
[2021-07-30 15:35:11,852] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:35:11,853] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 2
[2021-07-30 15:35:11,854] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001F9BBB20FA0>]>
[2021-07-30 15:35:11,855] DEBUG: MemoizationThread: sender: [0,1][1,2][0,2] problem/result ID [0,1][1,2][0,2] memoization_label: 1 delivered result: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,854] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] ack was stop.
[2021-07-30 15:35:11,856] DEBUG: [0,1][1,2][0,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,855] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:35:11,856] DEBUG: Deliver starting Executor for: [0,1][0,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:35:11,856] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2]
[2021-07-30 15:35:11,857] DEBUG: [0,1][1,2][0,2]: Fan-in: become_executor: False
[2021-07-30 15:35:11,857] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,857] DEBUG: Deliver end promised Results: 
[2021-07-30 15:35:11,857] DEBUG: [0,1][1,2][0,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,858] DEBUG: >>>> Executor for Problem ID [0,1][0,2][1,2] has started running!
[2021-07-30 15:35:11,858] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,859] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][0,2]", x = 1, y = 2
[2021-07-30 15:35:11,863] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][0,2]", problem_or_result_id = "[0,1][0,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,863] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:35:11,864] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:35:11,864] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,864] DEBUG: >> Attempting to pair now using the pairing name "[0,1][0,2][1,2]"...
[2021-07-30 15:35:11,865] DEBUG: [0,1][1,2][0,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,865] DEBUG: 	Memoization Controller: [0,1][1,2][0,2]
[2021-07-30 15:35:11,866] DEBUG: [0,1][1,2][0,2]: Fan-in: problem ID: [0,1][1,2][0,2] problem.become_executor: False parentProblem.become_executor: True
[2021-07-30 15:35:11,866] DEBUG: MemoizationController: pair: [0,1][0,2][1,2]
[2021-07-30 15:35:11,866] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,867] DEBUG: 
[2021-07-30 15:35:11,868] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,868] DEBUG: [0,1][1,2][0,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,868] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][0,2] pairingNames.size: 3
[2021-07-30 15:35:11,868] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,868] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,869] DEBUG: Fan-In: ID: [0,1][1,2][0,2]: FanInID: [0,1][3,2]: is not become Executor and its value was: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1) and after put is [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,870] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,871] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "2">
[2021-07-30 15:35:11,871] DEBUG: >> [0,1][0,2][1,2]: returning memoization label: "0"
[2021-07-30 15:35:11,872] DEBUG: >> msg.memoization_label: 2
[2021-07-30 15:35:11,872] DEBUG: memoized send1: problem.problem_id [0,1][0,2][1,2] memoized_label: 0
[2021-07-30 15:35:11,873] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,873] DEBUG: MemoizationThread: duplicate promise by: [0,1][1,2][1,2]
[2021-07-30 15:35:11,873] DEBUG: >> MemoizationThread: sending StopResult for [0,1][1,2][1,2]
[2021-07-30 15:35:11,873] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] ack was stop.
[2021-07-30 15:35:11,874] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][1,2][0,2]", problem_or_result_id = "[0,1][1,2][0,2]", memoization_label: "None">
[2021-07-30 15:35:11,874] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] getting ack.
[2021-07-30 15:35:11,875] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,879] DEBUG: 	Memoization Controller: [0,1][0,2][1,2]
[2021-07-30 15:35:11,879] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,880] DEBUG: MemoizationController: remove pairing name: [0,1][1,2][0,2] pairingNames.size: 2
[2021-07-30 15:35:11,880] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,881] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "0">
[2021-07-30 15:35:11,881] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,881] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,882] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][0,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:35:11,882] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][0,2][1,2]
[2021-07-30 15:35:11,882] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,882] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] got ack.
[2021-07-30 15:35:11,883] DEBUG: >> memoized get: problem.problem_id [0,1][0,2][1,2] was memoized result
[2021-07-30 15:35:11,883] DEBUG: memoized get: problem.problem_id [0,1][0,2][1,2] memoized_label: 0 memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,884] DEBUG: else in template: For Problem: (ID: [0,1][0,2][1,2], value: 0) Memoized result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,885] DEBUG: [0,1][0,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2]
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:35:11,886] DEBUG: [0,1][0,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][0,2], value: 2) 
[2021-07-30 15:35:11,887] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 15:35:11,887] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1][0,2]
[2021-07-30 15:35:11,887] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,888] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,888] DEBUG: 
[2021-07-30 15:35:11,888] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1][0,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,889] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][0,2]: (ID: [0,1][0,2][0,2]/value: 0)
[2021-07-30 15:35:11,890] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:35:11,891] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,893] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 15:35:11,894] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,894] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,894] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 2 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,895] DEBUG: >> [0,1][0,2]: returning memoization label: "2"
[2021-07-30 15:35:11,895] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "2">
[2021-07-30 15:35:11,895] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][0,2], memoization_label: None, result: None, promised_results = [<wukong.memoization.util.PromisedResult object at 0x000001F9BBB274C0>]>
[2021-07-30 15:35:11,896] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 2 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,896] DEBUG: MemoizationController: Deliver starting Executors for 1 promised results: 
[2021-07-30 15:35:11,896] DEBUG: >> returning fanin label "[0,1][2,2]", parent problem label = "[0,1][0,2][1,2]", x = 0, y = 2
[2021-07-30 15:35:11,897] DEBUG: Deliver starting Executor for: [0,1][1,2][1,2] problem.become_executor: True problem.did_input: True
[2021-07-30 15:35:11,897] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:35:11,898] WARNING: MemoizationController already initialized.
[2021-07-30 15:35:11,898] DEBUG: [0,1][0,2][1,2]: faninId: [0,1][2,2]
[2021-07-30 15:35:11,899] DEBUG: >>>> Executor for Problem ID [0,1][1,2][1,2] has started running!
[2021-07-30 15:35:11,898] DEBUG: Deliver end promised Results: 
[2021-07-30 15:35:11,899] DEBUG: [0,1][0,2][1,2]: Fan-in: problem ID: [0,1][0,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,899] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,900] DEBUG: >> Attempting to pair now using the pairing name "[0,1][1,2][1,2]"...
[2021-07-30 15:35:11,900] DEBUG: 
[2021-07-30 15:35:11,901] DEBUG: [0,1][0,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:35:11,901] DEBUG: MemoizationController: pair: [0,1][1,2][1,2]
[2021-07-30 15:35:11,901] DEBUG: isLastFanInExecutor: Writing to [0,1][2,2] the value [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,902] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2]: FanInID: [0,1][2,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,902] DEBUG: channelMap keySet: . . . . . . . 
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: ID: [0,1][0,2][1,2]: call combine ***************
[2021-07-30 15:35:11,903] DEBUG: [0,1][0,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,904] DEBUG: >> [0,1][1,2][1,2]: returning memoization label: "0"
[2021-07-30 15:35:11,905] DEBUG: memoized send1: problem.problem_id [0,1][1,2][1,2] memoized_label: 0
[2021-07-30 15:35:11,905] DEBUG: [0,1][0,2][1,2]: combine: firstValue: 0 secondValue: 0 combination.value: 0
[2021-07-30 15:35:11,905] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] getting ack.
[2021-07-30 15:35:11,905] DEBUG: [0,1][0,2][1,2]: FanIn: ID: [0,1][0,2][1,2], result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,906] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.PROMISEVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "0">
[2021-07-30 15:35:11,910] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,909] DEBUG: >> msg.memoization_label: 0
[2021-07-30 15:35:11,911] DEBUG: [0,1][0,2][1,2]: Exector: result.problem_id: [0,1][0,2][1,2] put memoizedLabel: 4 result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,911] DEBUG: >> Keys of MemoizationRecords (5): ['0', '1', '2', '3', '4']
[2021-07-30 15:35:11,912] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,912] DEBUG: >> MemoizationThread: returning memoized result to problem-or-result-id: [0,1][1,2][1,2], r1.result.problem_id = [0,1][0,2][0,2]
[2021-07-30 15:35:11,913] DEBUG: MemoizationThread: promised and delivered so deliver to: [0,1][1,2][1,2]
[2021-07-30 15:35:11,913] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,913] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] got ack.
[2021-07-30 15:35:11,914] DEBUG: >> memoized get: problem.problem_id [0,1][1,2][1,2] was memoized result
[2021-07-30 15:35:11,914] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "4">
[2021-07-30 15:35:11,915] DEBUG: memoized get: problem.problem_id [0,1][1,2][1,2] memoized_label: 0 memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,915] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,916] DEBUG: MemoizationThread: sender: [0,1][0,2][1,2] problem/result ID [0,1][0,2][1,2] memoization_label: 4 delivered result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0)
[2021-07-30 15:35:11,916] DEBUG: else in template: For Problem: (ID: [0,1][1,2][1,2], value: 0) Memoized result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,917] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,917] DEBUG: [0,1][1,2][1,2]: **********************Start Fanin operation:
[2021-07-30 15:35:11,918] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,918] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2]
[2021-07-30 15:35:11,919] DEBUG: [0,1][1,2][1,2]: Fan-in: become_executor: True
[2021-07-30 15:35:11,919] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.REMOVEPAIRINGNAME, sender_id = "[0,1][0,2][1,2]", problem_or_result_id = "[0,1][0,2][1,2]", memoization_label: "None">
[2021-07-30 15:35:11,919] DEBUG: [0,1][1,2][1,2]: Fan-in: fan_in_stack: (ID: [0,1], value: 4) (ID: [0,1][1,2], value: 3) 
[2021-07-30 15:35:11,919] DEBUG: MemoizationController: pairing names after remove
[2021-07-30 15:35:11,920] DEBUG: 	Memoization Controller: [0,1][1,2][1,2]
[2021-07-30 15:35:11,920] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 15:35:11,921] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1][1,2]
[2021-07-30 15:35:11,921] DEBUG: MemoizationController: remove pairing name: [0,1][0,2][1,2] pairingNames.size: 1
[2021-07-30 15:35:11,925] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,925] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,926] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: True
[2021-07-30 15:35:11,927] DEBUG: 
[2021-07-30 15:35:11,927] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1][1,2], calling isLastFanInExector() now...
[2021-07-30 15:35:11,928] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 0)
[2021-07-30 15:35:11,929] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,929] DEBUG: [0,1][1,2][0,2]: (ID: [0,1][1,2][0,2]/value: 1)
[2021-07-30 15:35:11,930] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:35:11,931] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,932] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 0 combination.value: 1
[2021-07-30 15:35:11,932] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,932] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,933] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 3 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,934] DEBUG: >> [0,1][1,2]: returning memoization label: "3"
[2021-07-30 15:35:11,934] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "3">
[2021-07-30 15:35:11,934] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.PROMISEDVALUE, result_id: [0,1][1,2], memoization_label: None, result: None, promised_results = []>
[2021-07-30 15:35:11,935] DEBUG: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 3 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,935] DEBUG: >> returning fanin label "[0,1][3,2]", parent problem label = "[0,1][1,2][1,2]", x = 1, y = 2
[2021-07-30 15:35:11,935] DEBUG: MemoizationController: Deliver starting Executors for 0 promised results: 
[2021-07-30 15:35:11,936] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] parentProblem ID: [0,1]
[2021-07-30 15:35:11,936] DEBUG: [0,1][1,2][1,2]: faninId: [0,1][3,2]
[2021-07-30 15:35:11,936] DEBUG: >> Memoization Thread awaiting message...
[2021-07-30 15:35:11,937] DEBUG: [0,1][1,2][1,2]: Fan-in: problem ID: [0,1][1,2][1,2] problem.become_executor: True parentProblem.become_executor: False
[2021-07-30 15:35:11,940] DEBUG: 
[2021-07-30 15:35:11,941] DEBUG: [0,1][1,2][1,2]: parentProblem ID: [0,1], calling isLastFanInExector() now...
[2021-07-30 15:35:11,941] DEBUG: isLastFanInExecutor: Writing to [0,1][3,2] the value [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,942] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2]: FanInID: [0,1][3,2]: : Returned from put: executor isLastFanInExecutor 
[2021-07-30 15:35:11,942] DEBUG: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 1)
[2021-07-30 15:35:11,943] DEBUG: [0,1][1,2][1,2]: ID: [0,1][1,2][1,2]: call combine ***************
[2021-07-30 15:35:11,943] DEBUG: [0,1][1,2][1,2]: CALLING COMBINE NOW...
[2021-07-30 15:35:11,944] DEBUG: [0,1][1,2][1,2]: combine: firstValue: 1 secondValue: 1 combination.value: 2
[2021-07-30 15:35:11,944] DEBUG: [0,1][1,2][1,2]: FanIn: ID: [0,1][1,2][1,2], result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:35:11,945] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,945] DEBUG: [0,1][1,2][1,2]: Exector: result.problem_id: [0,1][1,2][1,2] put memoizedLabel: 4 result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2)
[2021-07-30 15:35:11,946] DEBUG: >> [0,1]: returning memoization label: "4"
[2021-07-30 15:35:11,947] DEBUG: >> Memoization Thread received message: MemoizationMessage < message_type = MemoizationMessageType.DELIVEREDVALUE, sender_id = "[0,1][1,2][1,2]", problem_or_result_id = "[0,1][1,2][1,2]", memoization_label: "4">
[2021-07-30 15:35:11,947] DEBUG: MemoizationThread: r2: MemoizationRecord <record_type: MemoizationRecordType.DELIVEREDVALUE, result_id: [0,1], memoization_label: None, result: [0,1][0,2][1,2]: (ID: [0,1][0,2][1,2]/value: 0), promised_results = []>
[2021-07-30 15:35:11,948] ERROR: Internal Error: MemoizationThread: sender: [0,1][1,2][1,2] problem/result ID [0,1][1,2][1,2] memoization_label: 4 delivered result: [0,1][1,2][1,2]: (ID: [0,1][1,2][1,2]/value: 2) delivered twice.

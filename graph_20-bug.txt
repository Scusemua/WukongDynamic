c FILE                  :graph1.gr.gr
c No. of vertices       :20
c No. of edges          :23
c Max. weight           :1
c Min. weight           :1
c Min. edge             :1
c Max. edge             :3
p sp 20 23
a 1 12 1
a 2 20 1
a 2 10 1
a 3 19 1
a 4 6 1
a 4 18 1
a 5 16 1
a 5 17 1
a 6 14 1
a 6 9 1
a 7 15 1
a 8 11 1
a 8 13 1
a 9 18 1
a 10 16 1
a 11 3 1
a 11 15 1
a 13 7 1
a 14 12 1
a 17 1 1
a 17 19 1
a 19 20 1
a 20 8 1

DEBUG: Following is the Breadth-First Search
DEBUG: file_name_line1: c FILE                  :graph1.gr.gr
DEBUG: vertices_line2: c No. of vertices       :20
DEBUG: edges_line3: c No. of edges          :23
DEBUG: vertices_edges_line8: p sp 20 23
DEBUG: nodes:20 edges:23

input_file: read: num_nodes:20 num_edges:23
DEBUG: num edges in graph: 23 = num child edges: 23 + num_self_loops: 0 
DEBUG: num_edges in graph: 23 = num parent edges: 23 + num_self_loops: 0
DEBUG: num_parent_appends:23
DEBUG: num_children_appends:23
DEBUG: num_self_loops: 0
DEBUG: num_edges: 23
DEBUG: num_nodes after input graph: 20
DEBUG: *************Driver call BFS 1
DEBUG: bfs mark 1 as visited and add to queue
DEBUG: dfs_parent from node 1
DEBUG: dfs_parent node 1 visit parents
DEBUG: dfs_parent add edge: 17,1
DEBUG: dfs_parent visit node 17
DEBUG: dfs_parent from node 17
DEBUG: dfs_parent node 17 visit parents
DEBUG: dfs_parent add edge: 5,17
DEBUG: dfs_parent visit node 5
DEBUG: dfs_parent from node 5
DEBUG: dfs_parent node 5 has no parents
queue after add 5: -1 5
frontier after add 5: 5
DEBUG: dfs_parent add 5 to partition
queue after add 17: -1 5 17
frontier after add 17: 5 17
DEBUG: dfs_parent add 17 to partition
queue after add 1: -1 5 17 1
frontier after add 1: 5 17 1
DEBUG: dfs_parent add 1 to partition
DEBUG: BFS set V to 3
DEBUG: dfs_parent_change_in_partition_size: 3
DEBUG: dfs_parent_change_in_frontier_size: 3
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 5 from queue
graph scc_graph: num_vertices:3
17,1
5,17
clear
DEBUG: dfs_parent_change_in_partition_size: 3
DEBUG: dfs_parent_change_in_frontier_size: 3
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 5 from queue
DEBUG: BFS: create sub-partition at end of current frontier
DEBUG: bfs node 5 visit children
DEBUG: bfs visit child 16 mark it visited and dfs_parent(16)
DEBUG: bfs dfs_parent(16)
DEBUG: dfs_parent from node 16
DEBUG: dfs_parent node 16 visit parents
DEBUG: dfs_parent add edge: 5,16
DEBUG: dfs_parent neighbor 5 already visited
DEBUG: dfs_parent add edge: 10,16
DEBUG: dfs_parent visit node 10
DEBUG: dfs_parent from node 10
DEBUG: dfs_parent node 10 visit parents
DEBUG: dfs_parent add edge: 2,10
DEBUG: dfs_parent visit node 2
DEBUG: dfs_parent from node 2
DEBUG: dfs_parent node 2 has no parents
queue after add 2: 17 1 -1 2
frontier after add 2: 5 17 1 2
DEBUG: dfs_parent add 2 to partition
queue after add 10: 17 1 -1 2 10 
frontier after add 10: 5 17 1 2 10 
DEBUG: dfs_parent add 10 to partition
queue after add 16: 17 1 -1 2 10 16
frontier after add 16: 5 17 1 2 10 16
DEBUG: dfs_parent add 16 to partition
DEBUG: dfs_parent_change_in_partition_size: 3
DEBUG: dfs_parent_change_in_frontier_size: 3
DEBUG: bfs node 17 already visited
frontier after remove 5: 17 1 2 10 16
DEBUG: bfs pop node 17 from queue
DEBUG: bfs node 17 visit children
DEBUG: bfs node 1 already visited
DEBUG: bfs visit child 19 mark it visited and dfs_parent(19)
DEBUG: bfs dfs_parent(19)
DEBUG: dfs_parent from node 19
DEBUG: dfs_parent node 19 visit parents
DEBUG: dfs_parent add edge: 3,19
DEBUG: dfs_parent visit node 3
DEBUG: dfs_parent from node 3
DEBUG: dfs_parent node 3 visit parents
DEBUG: dfs_parent add edge: 11,3
DEBUG: dfs_parent visit node 11
DEBUG: dfs_parent from node 11
DEBUG: dfs_parent node 11 visit parents
DEBUG: dfs_parent add edge: 8,11
DEBUG: dfs_parent visit node 8
DEBUG: dfs_parent from node 8
DEBUG: dfs_parent node 8 visit parents
DEBUG: dfs_parent add edge: 20,8
DEBUG: dfs_parent visit node 20
DEBUG: dfs_parent from node 20
DEBUG: dfs_parent node 20 visit parents
DEBUG: dfs_parent add edge: 2,20
DEBUG: dfs_parent neighbor 2 already visited
DEBUG: dfs_parent add edge: 19,20
DEBUG: dfs_parent neighbor 19 already visited
queue after add 20: 1 -1 2 10 16 20
frontier after add 20: 17 1 2 10 16 20
DEBUG: dfs_parent add 20 to partition
queue after add 8: 1 -1 2 10 16 20 8
frontier after add 8: 17 1 2 10 16 20 8 
DEBUG: dfs_parent add 8 to partition
queue after add 11: 1 -1 2 10 16 20 8 11
frontier after add 11: 17 1 2 10 16 20 8 11
DEBUG: dfs_parent add 11 to partition
queue after add 3: 1 -1 2 10 16 20 8 11 3
frontier after add 3: 17 1 2 10 16 20 8 11 3
DEBUG: dfs_parent add 3 to partition
DEBUG: dfs_parent add edge: 17,19
DEBUG: dfs_parent neighbor 17 already visited
queue after add 19: 1 -1 2 10 16 20 8 11 3 19
frontier after add 19: 17 1 2 10 16 20 8 11 3 19 
DEBUG: dfs_parent add 19 to partition
DEBUG: dfs_parent_change_in_partition_size: 5
DEBUG: dfs_parent_change_in_frontier_size: 5
frontier after remove 17: 1 2 10 16 20 8 11 3 19
DEBUG: bfs pop node 1 from queue
DEBUG: bfs node 1 visit children
DEBUG: bfs visit child 12 mark it visited and dfs_parent(12)
DEBUG: bfs dfs_parent(12)
DEBUG: dfs_parent from node 12
DEBUG: dfs_parent node 12 visit parents
DEBUG: dfs_parent add edge: 1,12
DEBUG: dfs_parent neighbor 1 already visited
DEBUG: dfs_parent add edge: 14,12
DEBUG: dfs_parent visit node 14
DEBUG: dfs_parent from node 14
DEBUG: dfs_parent node 14 visit parents
DEBUG: dfs_parent add edge: 6,14
DEBUG: dfs_parent visit node 6
DEBUG: dfs_parent from node 6
DEBUG: dfs_parent node 6 visit parents
DEBUG: dfs_parent add edge: 4,6
DEBUG: dfs_parent visit node 4
DEBUG: dfs_parent from node 4
DEBUG: dfs_parent node 4 has no parents
queue after add 4: -1 2 10 16 20 8 11 3 19 4 
frontier after add 4: 1 2 10 16 20 8 11 3 19 4
DEBUG: dfs_parent add 4 to partition
queue after add 6: -1 2 10 16 20 8 11 3 19 4 6
frontier after add 6: 1 2 10 16 20 8 11 3 19 4 6
DEBUG: dfs_parent add 6 to partition
queue after add 14: -1 2 10 16 20 8 11 3 19 4 6 14
frontier after add 14: 1 2 10 16 20 8 11 3 19 4 6 14
DEBUG: dfs_parent add 14 to partition
queue after add 12: -1 2 10 16 20 8 11 3 19 4 6 14 12 
frontier after add 12: 1 2 10 16 20 8 11 3 19 4 6 14 12
DEBUG: dfs_parent add 12 to partition
DEBUG: dfs_parent_change_in_partition_size: 4
DEBUG: dfs_parent_change_in_frontier_size: 4
frontier after remove 1: 2 10 16 20 8 11 3 19 4 6 14 12
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 2 from queue
graph scc_graph: num_vertices:0
10,16
2,10
3,19
11,3
8,11
20,8
19,20
14,12
6,14
4,6
clear
DEBUG: BFS: create sub-partition at end of current frontier
DEBUG: bfs node 2 visit children
DEBUG: bfs node 20 already visited
DEBUG: bfs node 10 already visited
frontier after remove 2: 10 16 20 8 11 3 19 4 6 14 12
DEBUG: bfs pop node 10 from queue
DEBUG: bfs node 10 visit children
DEBUG: bfs node 16 already visited
frontier after remove 10: 16 20 8 11 3 19 4 6 14 12
DEBUG: bfs pop node 16 from queue
DEBUG: bfs node 16 has no children
frontier after remove 16: 20 8 11 3 19 4 6 14 12
DEBUG: bfs pop node 20 from queue
DEBUG: bfs node 20 visit children
DEBUG: bfs node 8 already visited
frontier after remove 20: 8 11 3 19 4 6 14 12

rhc

DEBUG: bfs pop node 8 from queue
DEBUG: bfs node 8 visit children
DEBUG: bfs node 11 already visited
DEBUG: bfs visit child 13 mark it visited and dfs_parent(13)
DEBUG: bfs dfs_parent(13)
DEBUG: dfs_parent from node 13
DEBUG: dfs_parent node 13 visit parents
DEBUG: dfs_parent add edge: 8,13
DEBUG: dfs_parent neighbor 8 already visited
queue after add 13: 11 3 19 4 6 14 12 -1 13
frontier after add 13: 8 11 3 19 4 6 14 12 13 
DEBUG: dfs_parent add 13 to partition
DEBUG: dfs_parent_change_in_partition_size: 1
DEBUG: dfs_parent_change_in_frontier_size: 1
frontier after remove 8: 11 3 19 4 6 14 12 13

rhc 

DEBUG: bfs pop node 11 from queue
DEBUG: bfs node 11 visit children
DEBUG: bfs node 3 already visited
DEBUG: bfs visit child 15 mark it visited and dfs_parent(15)
DEBUG: bfs dfs_parent(15)
DEBUG: dfs_parent from node 15
DEBUG: dfs_parent node 15 visit parents
DEBUG: dfs_parent add edge: 7,15
DEBUG: dfs_parent visit node 7
DEBUG: dfs_parent from node 7
DEBUG: dfs_parent node 7 visit parents
DEBUG: dfs_parent add edge: 13,7
DEBUG: dfs_parent neighbor 13 already visited
queue after add 7: 3 19 4 6 14 12 -1 13 7
frontier after add 7: 11 3 19 4 6 14 12 13 7 
DEBUG: dfs_parent add 7 to partition
DEBUG: dfs_parent add edge: 11,15
DEBUG: dfs_parent neighbor 11 already visited
queue after add 15: 3 19 4 6 14 12 -1 13 7 15
frontier after add 15: 11 3 19 4 6 14 12 13 7 15
DEBUG: dfs_parent add 15 to partition
DEBUG: dfs_parent_change_in_partition_size: 2
DEBUG: dfs_parent_change_in_frontier_size: 2
frontier after remove 11: 3 19 4 6 14 12 13 7 15
DEBUG: bfs pop node 3 from queue
DEBUG: bfs node 3 visit children
DEBUG: bfs node 19 already visited
frontier after remove 3: 19 4 6 14 12 13 7 15
DEBUG: bfs pop node 19 from queue
DEBUG: bfs node 19 visit children
DEBUG: bfs node 20 already visited
frontier after remove 19: 4 6 14 12 13 7 15
DEBUG: bfs pop node 4 from queue
DEBUG: bfs node 4 visit children
DEBUG: bfs node 6 already visited
DEBUG: bfs visit child 18 mark it visited and dfs_parent(18)
DEBUG: bfs dfs_parent(18)
DEBUG: dfs_parent from node 18
DEBUG: dfs_parent node 18 visit parents
DEBUG: dfs_parent add edge: 4,18
DEBUG: dfs_parent neighbor 4 already visited
DEBUG: dfs_parent add edge: 9,18
DEBUG: dfs_parent visit node 9
DEBUG: dfs_parent from node 9
DEBUG: dfs_parent node 9 visit parents
DEBUG: dfs_parent add edge: 6,9
DEBUG: dfs_parent neighbor 6 already visited
queue after add 9: 6 14 12 -1 13 7 15 9
frontier after add 9: 4 6 14 12 13 7 15 9
DEBUG: dfs_parent add 9 to partition
queue after add 18: 6 14 12 -1 13 7 15 9 18
frontier after add 18: 4 6 14 12 13 7 15 9 18
DEBUG: dfs_parent add 18 to partition
DEBUG: dfs_parent_change_in_partition_size: 2
DEBUG: dfs_parent_change_in_frontier_size: 2
frontier after remove 4: 6 14 12 13 7 15 9 18 
DEBUG: bfs pop node 6 from queue
DEBUG: bfs node 6 visit children
DEBUG: bfs node 14 already visited
DEBUG: bfs node 9 already visited
frontier after remove 6: 14 12 13 7 15 9 18
DEBUG: bfs pop node 14 from queue
DEBUG: bfs node 14 visit children
DEBUG: bfs node 12 already visited
frontier after remove 14: 12 13 7 15 9 18
DEBUG: bfs pop node 12 from queue
DEBUG: bfs node 12 has no children
frontier after remove 12: 13 7 15 9 18
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 13 from queue
graph scc_graph: num_vertices:0
7,15
9,18
clear
DEBUG: BFS: create sub-partition at end of current frontier
DEBUG: bfs node 13 visit children
DEBUG: bfs node 7 already visited
frontier after remove 13: 7 15 9 18
DEBUG: bfs pop node 7 from queue
DEBUG: bfs node 7 visit children
DEBUG: bfs node 15 already visited
frontier after remove 7: 15 9 18
DEBUG: bfs pop node 15 from queue
DEBUG: bfs node 15 has no children
frontier after remove 15: 9 18
DEBUG: bfs pop node 9 from queue
DEBUG: bfs node 9 visit children
DEBUG: bfs node 18 already visited
frontier after remove 9: 18
DEBUG: bfs pop node 18 from queue
DEBUG: bfs node 18 has no children
frontier after remove 18:
DEBUG: bfs pop node -1 from queue

input_file: generated: num_nodes: 20 num_edges: 23

visited length: 20
1 17 5 16 10 2 19 3 11 8 20 12 14 6 4 13 15 7 18 9

final current_partition length: 0
sum_of_partition_lengths (not counting total_loop_nodes_added): 20

dfs_parent_changes_in_partiton_size length, len: 7, sum_of_changes: 20, average dfs_parent 
change: 2.9
3 3 5 4 1 2 2

dfs_parent_changes_in_frontier_size length, len: 7, sum_of_changes: 20
3 3 5 4 1 2 2

partitions, len: 3:
-- (3): [5, 17, 1]
-- (12): [2, 10, 16, 20, 8, 11, 3, 19, 4, 6, 14, 12]
-- (5): [13, 7, 15, 9, 18]

frontiers: (final fronter should be empty), len: 4:
-- (3): 5 17 1
-- (12): 2 10 16 20 8 11 3 19 4 6 14 12
-- (5): 13 7 15 9 18
-- (0):

frontier costs (cost=length of frontier), len: 3:
-- pop-5:3
-- pop-2:12
-- pop-13:5

all frontier costs, len: 20, sum: 135
pop-5:3 pop-17:5 pop-1:9 pop-2:12 pop-10:11 pop-16:10 pop-20:9 pop-8:8 pop-11:8 pop-3:9 pop-19:8 pop-4:7 pop-6:8 pop-14:7
pop-12:6 pop-13:5 pop-7:4 pop-15:3 pop-9:2 pop-18:1



queue after add 18: 6 14 12 -1 13 7 15 9 18
frontier after add 18: 4 6 14 12 13 7 15 9 18
DEBUG: dfs_parent add 18 to partition
DEBUG: dfs_parent_change_in_partition_size: 2
DEBUG: dfs_parent_change_in_frontier_size: 2
frontier after remove 4: 6 14 12 13 7 15 9 18 
DEBUG: bfs pop node 6 from queue
DEBUG: bfs node 6 visit children
DEBUG: bfs node 14 already visited
DEBUG: bfs node 9 already visited
frontier after remove 6: 14 12 13 7 15 9 18
DEBUG: bfs pop node 14 from queue
DEBUG: bfs node 14 visit children
DEBUG: bfs node 12 already visited
frontier after remove 14: 12 13 7 15 9 18
DEBUG: bfs pop node 12 from queue
DEBUG: bfs node 12 has no children
frontier after remove 12: 13 7 15 9 18
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 13 from queue
graph scc_graph: num_vertices:0
7,15
9,18
clear

queue after add 14: -1 2 10 16 20 8 11 3 19 4 6 14
frontier after add 14: 1 2 10 16 20 8 11 3 19 4 6 14
DEBUG: dfs_parent add 14 to partition
queue after add 12: -1 2 10 16 20 8 11 3 19 4 6 14 12 
frontier after add 12: 1 2 10 16 20 8 11 3 19 4 6 14 12
DEBUG: dfs_parent add 12 to partition
DEBUG: dfs_parent_change_in_partition_size: 4
DEBUG: dfs_parent_change_in_frontier_size: 4
frontier after remove 1: 2 10 16 20 8 11 3 19 4 6 14 12
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 2 from queue

frontiers: (final fronter should be empty), len: 4:
-- (3): 5 17 1
-- (12): 2 10 16 20 8 11 3 19 4 6 14 12
-- (5): 13 7 15 9 18
-- (0):

graph scc_graph: num_vertices:0
10,16
2,10
3,19
11,3
8,11
20,8
19,20
14,12
6,14
4,6

rhc

clear

queue after add 9: 6 14 12 -1 13 7 15 9
frontier after add 9: 4 6 14 12 13 7 15 9
DEBUG: dfs_parent add 9 to partition
queue after add 18: 6 14 12 -1                  13 7 15 9 18
frontier after add 18: 4 6 14 12 13 7 15 9 18
DEBUG: dfs_parent add 18 to partition
DEBUG: dfs_parent_change_in_partition_size: 2
DEBUG: dfs_parent_change_in_frontier_size: 2
frontier after remove 4: 6 14 12 13 7 15 9 18 
DEBUG: bfs pop node 6 from queue
DEBUG: bfs node 6 visit children
DEBUG: bfs node 14 already visited
DEBUG: bfs node 9 already visited
frontier after remove 6: 14 12 13 7 15 9 18
DEBUG: bfs pop node 14 from queue
DEBUG: bfs node 14 visit children
DEBUG: bfs node 12 already visited
frontier after remove 14: 12 13 7 15 9 18
DEBUG: bfs pop node 12 from queue
DEBUG: bfs node 12 has no children
frontier after remove 12:                     13 7 15 9 18
DEBUG: bfs pop node -1 from queue
DEBUG: bfs after pop -1 pop node 13 from queue
graph scc_graph: num_vertices:0
7,15
9,18
clear
DEBUG: BFS: create sub-partition at end of current frontier
DEBUG: bfs node 13 visit children
DEBUG: bfs node 7 already visited
frontier after remove 13: 7 15 9 18
DEBUG: bfs pop node 7 from queue
DEBUG: bfs node 7 visit children
DEBUG: bfs node 15 already visited
frontier after remove 7: 15 9 18
DEBUG: bfs pop node 15 from queue
DEBUG: bfs node 15 has no children
frontier after remove 15: 9 18
DEBUG: bfs pop node 9 from queue
DEBUG: bfs node 9 visit children
DEBUG: bfs node 18 already visited
frontier after remove 9: 18
DEBUG: bfs pop node 18 from queue
DEBUG: bfs node 18 has no children
frontier after remove 18:
DEBUG: bfs pop node -1 from queue

frontier: 
-- (5): 13 7 15 9 18
